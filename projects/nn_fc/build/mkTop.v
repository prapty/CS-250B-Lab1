//
// Generated by Bluespec Compiler (build 629c10a)
//
// On Fri Jun  4 23:21:53 UTC 2021
//
//
// Ports:
// Name                         I/O  size props
// ftdi_rxd                       O     1 reg
// led                            O     8 reg
// sdram_csn                      O     1 reg
// sdram_rasn                     O     1 reg
// sdram_casn                     O     1 reg
// sdram_wen                      O     1 reg
// sdram_a                        O    13 reg
// sdram_ba                       O     2
// sdram_dqm                      O     2 reg
// CLK_sdram_clk                  O     1 clock
// CLK_GATE_sdram_clk             O     1 const
// CLK_clk_25mhz                  I     1 clock
// ftdi_txd                       I     1 reg
// XX_sdram_d_XX                 IO    16 inout
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK_clk_25mhz,

	     sdram_d,

	     ftdi_rxd,

	     ftdi_txd,

	     led,

	     sdram_csn,

	     sdram_rasn,

	     sdram_casn,

	     sdram_wen,

	     sdram_a,

	     sdram_ba,

	     sdram_dqm,

	     CLK_sdram_clk,
	     CLK_GATE_sdram_clk);
  input  CLK_clk_25mhz;

  inout  [15 : 0] sdram_d;

  // value method ftdi_rxd
  output ftdi_rxd;

  // action method ftdi_tx
  input  ftdi_txd;

  // value method led
  output [7 : 0] led;

  // value method sdram_pins_sdram_csn
  output sdram_csn;

  // value method sdram_pins_sdram_rasn
  output sdram_rasn;

  // value method sdram_pins_sdram_casn
  output sdram_casn;

  // value method sdram_pins_sdram_wen
  output sdram_wen;

  // value method sdram_pins_sdram_a
  output [12 : 0] sdram_a;

  // value method sdram_pins_sdram_ba
  output [1 : 0] sdram_ba;

  // value method sdram_pins_sdram_dqm
  output [1 : 0] sdram_dqm;

  // oscillator and gates for output clock CLK_sdram_clk
  output CLK_sdram_clk;
  output CLK_GATE_sdram_clk;

  // signals for module outputs
  wire [12 : 0] sdram_a;
  wire [7 : 0] led;
  wire [1 : 0] sdram_ba, sdram_dqm;
  wire CLK_GATE_sdram_clk,
       CLK_sdram_clk,
       ftdi_rxd,
       sdram_casn,
       sdram_csn,
       sdram_rasn,
       sdram_wen;

  // inlined wires
  wire [31 : 0] main_nn_pes_0_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_0_partialSumQ_wDataOut_wget,
		main_nn_pes_1_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_1_partialSumQ_wDataOut_wget,
		main_nn_pes_2_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_2_partialSumQ_wDataOut_wget,
		main_nn_pes_3_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_3_partialSumQ_wDataOut_wget,
		main_nn_pes_4_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_4_partialSumQ_wDataOut_wget,
		main_nn_pes_5_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_5_partialSumQ_wDataOut_wget,
		main_nn_pes_6_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_6_partialSumQ_wDataOut_wget,
		main_nn_pes_7_partialSumIdxQ2_wDataOut_wget,
		main_nn_pes_7_partialSumQ_wDataOut_wget;
  wire main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_0_partialSumQ_pwEnqueue_whas,
       main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_1_partialSumQ_pwEnqueue_whas,
       main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_2_partialSumQ_pwEnqueue_whas,
       main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_3_partialSumQ_pwEnqueue_whas,
       main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_4_partialSumQ_pwEnqueue_whas,
       main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_5_partialSumQ_pwEnqueue_whas,
       main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_6_partialSumQ_pwEnqueue_whas,
       main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas,
       main_nn_pes_7_partialSumQ_pwEnqueue_whas;

  // register main_cycleCount
  reg [31 : 0] main_cycleCount;
  wire [31 : 0] main_cycleCount_D_IN;
  wire main_cycleCount_EN;

  // register main_inputBuffer
  reg [31 : 0] main_inputBuffer;
  wire [31 : 0] main_inputBuffer_D_IN;
  wire main_inputBuffer_EN;

  // register main_inputBufferCnt
  reg [1 : 0] main_inputBufferCnt;
  wire [1 : 0] main_inputBufferCnt_D_IN;
  wire main_inputBufferCnt_EN;

  // register main_inputDst
  reg [8 : 0] main_inputDst;
  wire [8 : 0] main_inputDst_D_IN;
  wire main_inputDst_EN;

  // register main_lastCycle
  reg [31 : 0] main_lastCycle;
  wire [31 : 0] main_lastCycle_D_IN;
  wire main_lastCycle_EN;

  // register main_lastEmitted
  reg [31 : 0] main_lastEmitted;
  wire [31 : 0] main_lastEmitted_D_IN;
  wire main_lastEmitted_EN;

  // register main_memReadAddr
  reg [23 : 0] main_memReadAddr;
  wire [23 : 0] main_memReadAddr_D_IN;
  wire main_memReadAddr_EN;

  // register main_memReadBuffer
  reg [16 : 0] main_memReadBuffer;
  wire [16 : 0] main_memReadBuffer_D_IN;
  wire main_memReadBuffer_EN;

  // register main_memWriteAddr
  reg [23 : 0] main_memWriteAddr;
  wire [23 : 0] main_memWriteAddr_D_IN;
  wire main_memWriteAddr_EN;

  // register main_memWriteBuffer
  reg [16 : 0] main_memWriteBuffer;
  wire [16 : 0] main_memWriteBuffer_D_IN;
  wire main_memWriteBuffer_EN;

  // register main_memWriteDone
  reg main_memWriteDone;
  wire main_memWriteDone_D_IN, main_memWriteDone_EN;

  // register main_nn_pes_0_curMacIdx
  reg [31 : 0] main_nn_pes_0_curMacIdx;
  wire [31 : 0] main_nn_pes_0_curMacIdx_D_IN;
  wire main_nn_pes_0_curMacIdx_EN;

  // register main_nn_pes_0_curOutputIdx
  reg [7 : 0] main_nn_pes_0_curOutputIdx;
  wire [7 : 0] main_nn_pes_0_curOutputIdx_D_IN;
  wire main_nn_pes_0_curOutputIdx_EN;

  // register main_nn_pes_0_cycleCount
  reg [31 : 0] main_nn_pes_0_cycleCount;
  wire [31 : 0] main_nn_pes_0_cycleCount_D_IN;
  wire main_nn_pes_0_cycleCount_EN;

  // register main_nn_pes_0_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_0_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_0_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_0_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_0_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_0_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_0_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_0_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_0_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_0_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_0_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_0_fmult_mult18_validMap_EN;

  // register main_nn_pes_0_lastInputIdx
  reg [7 : 0] main_nn_pes_0_lastInputIdx;
  wire [7 : 0] main_nn_pes_0_lastInputIdx_D_IN;
  wire main_nn_pes_0_lastInputIdx_EN;

  // register main_nn_pes_0_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_0_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_0_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_0_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_0_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_0_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_0_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_0_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_0_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_0_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_0_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_0_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_0_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_0_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_0_partialSumQ_rCache_D_IN;
  wire main_nn_pes_0_partialSumQ_rCache_EN;

  // register main_nn_pes_0_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_0_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_0_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_0_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_0_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_0_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_0_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_0_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_0_weightReplicateCnt
  reg [7 : 0] main_nn_pes_0_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_0_weightReplicateCnt_D_IN;
  wire main_nn_pes_0_weightReplicateCnt_EN;

  // register main_nn_pes_0_weightReplicateReg
  reg [31 : 0] main_nn_pes_0_weightReplicateReg;
  wire [31 : 0] main_nn_pes_0_weightReplicateReg_D_IN;
  wire main_nn_pes_0_weightReplicateReg_EN;

  // register main_nn_pes_1_curMacIdx
  reg [31 : 0] main_nn_pes_1_curMacIdx;
  wire [31 : 0] main_nn_pes_1_curMacIdx_D_IN;
  wire main_nn_pes_1_curMacIdx_EN;

  // register main_nn_pes_1_curOutputIdx
  reg [7 : 0] main_nn_pes_1_curOutputIdx;
  wire [7 : 0] main_nn_pes_1_curOutputIdx_D_IN;
  wire main_nn_pes_1_curOutputIdx_EN;

  // register main_nn_pes_1_cycleCount
  reg [31 : 0] main_nn_pes_1_cycleCount;
  wire [31 : 0] main_nn_pes_1_cycleCount_D_IN;
  wire main_nn_pes_1_cycleCount_EN;

  // register main_nn_pes_1_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_1_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_1_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_1_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_1_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_1_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_1_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_1_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_1_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_1_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_1_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_1_fmult_mult18_validMap_EN;

  // register main_nn_pes_1_lastInputIdx
  reg [7 : 0] main_nn_pes_1_lastInputIdx;
  wire [7 : 0] main_nn_pes_1_lastInputIdx_D_IN;
  wire main_nn_pes_1_lastInputIdx_EN;

  // register main_nn_pes_1_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_1_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_1_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_1_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_1_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_1_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_1_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_1_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_1_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_1_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_1_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_1_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_1_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_1_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_1_partialSumQ_rCache_D_IN;
  wire main_nn_pes_1_partialSumQ_rCache_EN;

  // register main_nn_pes_1_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_1_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_1_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_1_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_1_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_1_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_1_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_1_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_1_weightReplicateCnt
  reg [7 : 0] main_nn_pes_1_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_1_weightReplicateCnt_D_IN;
  wire main_nn_pes_1_weightReplicateCnt_EN;

  // register main_nn_pes_1_weightReplicateReg
  reg [31 : 0] main_nn_pes_1_weightReplicateReg;
  wire [31 : 0] main_nn_pes_1_weightReplicateReg_D_IN;
  wire main_nn_pes_1_weightReplicateReg_EN;

  // register main_nn_pes_2_curMacIdx
  reg [31 : 0] main_nn_pes_2_curMacIdx;
  wire [31 : 0] main_nn_pes_2_curMacIdx_D_IN;
  wire main_nn_pes_2_curMacIdx_EN;

  // register main_nn_pes_2_curOutputIdx
  reg [7 : 0] main_nn_pes_2_curOutputIdx;
  wire [7 : 0] main_nn_pes_2_curOutputIdx_D_IN;
  wire main_nn_pes_2_curOutputIdx_EN;

  // register main_nn_pes_2_cycleCount
  reg [31 : 0] main_nn_pes_2_cycleCount;
  wire [31 : 0] main_nn_pes_2_cycleCount_D_IN;
  wire main_nn_pes_2_cycleCount_EN;

  // register main_nn_pes_2_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_2_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_2_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_2_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_2_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_2_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_2_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_2_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_2_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_2_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_2_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_2_fmult_mult18_validMap_EN;

  // register main_nn_pes_2_lastInputIdx
  reg [7 : 0] main_nn_pes_2_lastInputIdx;
  wire [7 : 0] main_nn_pes_2_lastInputIdx_D_IN;
  wire main_nn_pes_2_lastInputIdx_EN;

  // register main_nn_pes_2_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_2_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_2_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_2_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_2_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_2_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_2_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_2_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_2_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_2_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_2_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_2_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_2_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_2_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_2_partialSumQ_rCache_D_IN;
  wire main_nn_pes_2_partialSumQ_rCache_EN;

  // register main_nn_pes_2_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_2_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_2_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_2_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_2_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_2_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_2_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_2_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_2_weightReplicateCnt
  reg [7 : 0] main_nn_pes_2_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_2_weightReplicateCnt_D_IN;
  wire main_nn_pes_2_weightReplicateCnt_EN;

  // register main_nn_pes_2_weightReplicateReg
  reg [31 : 0] main_nn_pes_2_weightReplicateReg;
  wire [31 : 0] main_nn_pes_2_weightReplicateReg_D_IN;
  wire main_nn_pes_2_weightReplicateReg_EN;

  // register main_nn_pes_3_curMacIdx
  reg [31 : 0] main_nn_pes_3_curMacIdx;
  wire [31 : 0] main_nn_pes_3_curMacIdx_D_IN;
  wire main_nn_pes_3_curMacIdx_EN;

  // register main_nn_pes_3_curOutputIdx
  reg [7 : 0] main_nn_pes_3_curOutputIdx;
  wire [7 : 0] main_nn_pes_3_curOutputIdx_D_IN;
  wire main_nn_pes_3_curOutputIdx_EN;

  // register main_nn_pes_3_cycleCount
  reg [31 : 0] main_nn_pes_3_cycleCount;
  wire [31 : 0] main_nn_pes_3_cycleCount_D_IN;
  wire main_nn_pes_3_cycleCount_EN;

  // register main_nn_pes_3_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_3_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_3_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_3_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_3_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_3_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_3_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_3_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_3_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_3_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_3_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_3_fmult_mult18_validMap_EN;

  // register main_nn_pes_3_lastInputIdx
  reg [7 : 0] main_nn_pes_3_lastInputIdx;
  wire [7 : 0] main_nn_pes_3_lastInputIdx_D_IN;
  wire main_nn_pes_3_lastInputIdx_EN;

  // register main_nn_pes_3_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_3_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_3_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_3_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_3_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_3_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_3_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_3_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_3_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_3_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_3_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_3_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_3_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_3_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_3_partialSumQ_rCache_D_IN;
  wire main_nn_pes_3_partialSumQ_rCache_EN;

  // register main_nn_pes_3_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_3_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_3_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_3_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_3_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_3_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_3_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_3_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_3_weightReplicateCnt
  reg [7 : 0] main_nn_pes_3_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_3_weightReplicateCnt_D_IN;
  wire main_nn_pes_3_weightReplicateCnt_EN;

  // register main_nn_pes_3_weightReplicateReg
  reg [31 : 0] main_nn_pes_3_weightReplicateReg;
  wire [31 : 0] main_nn_pes_3_weightReplicateReg_D_IN;
  wire main_nn_pes_3_weightReplicateReg_EN;

  // register main_nn_pes_4_curMacIdx
  reg [31 : 0] main_nn_pes_4_curMacIdx;
  wire [31 : 0] main_nn_pes_4_curMacIdx_D_IN;
  wire main_nn_pes_4_curMacIdx_EN;

  // register main_nn_pes_4_curOutputIdx
  reg [7 : 0] main_nn_pes_4_curOutputIdx;
  wire [7 : 0] main_nn_pes_4_curOutputIdx_D_IN;
  wire main_nn_pes_4_curOutputIdx_EN;

  // register main_nn_pes_4_cycleCount
  reg [31 : 0] main_nn_pes_4_cycleCount;
  wire [31 : 0] main_nn_pes_4_cycleCount_D_IN;
  wire main_nn_pes_4_cycleCount_EN;

  // register main_nn_pes_4_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_4_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_4_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_4_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_4_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_4_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_4_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_4_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_4_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_4_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_4_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_4_fmult_mult18_validMap_EN;

  // register main_nn_pes_4_lastInputIdx
  reg [7 : 0] main_nn_pes_4_lastInputIdx;
  wire [7 : 0] main_nn_pes_4_lastInputIdx_D_IN;
  wire main_nn_pes_4_lastInputIdx_EN;

  // register main_nn_pes_4_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_4_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_4_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_4_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_4_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_4_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_4_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_4_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_4_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_4_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_4_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_4_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_4_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_4_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_4_partialSumQ_rCache_D_IN;
  wire main_nn_pes_4_partialSumQ_rCache_EN;

  // register main_nn_pes_4_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_4_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_4_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_4_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_4_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_4_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_4_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_4_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_4_weightReplicateCnt
  reg [7 : 0] main_nn_pes_4_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_4_weightReplicateCnt_D_IN;
  wire main_nn_pes_4_weightReplicateCnt_EN;

  // register main_nn_pes_4_weightReplicateReg
  reg [31 : 0] main_nn_pes_4_weightReplicateReg;
  wire [31 : 0] main_nn_pes_4_weightReplicateReg_D_IN;
  wire main_nn_pes_4_weightReplicateReg_EN;

  // register main_nn_pes_5_curMacIdx
  reg [31 : 0] main_nn_pes_5_curMacIdx;
  wire [31 : 0] main_nn_pes_5_curMacIdx_D_IN;
  wire main_nn_pes_5_curMacIdx_EN;

  // register main_nn_pes_5_curOutputIdx
  reg [7 : 0] main_nn_pes_5_curOutputIdx;
  wire [7 : 0] main_nn_pes_5_curOutputIdx_D_IN;
  wire main_nn_pes_5_curOutputIdx_EN;

  // register main_nn_pes_5_cycleCount
  reg [31 : 0] main_nn_pes_5_cycleCount;
  wire [31 : 0] main_nn_pes_5_cycleCount_D_IN;
  wire main_nn_pes_5_cycleCount_EN;

  // register main_nn_pes_5_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_5_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_5_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_5_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_5_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_5_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_5_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_5_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_5_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_5_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_5_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_5_fmult_mult18_validMap_EN;

  // register main_nn_pes_5_lastInputIdx
  reg [7 : 0] main_nn_pes_5_lastInputIdx;
  wire [7 : 0] main_nn_pes_5_lastInputIdx_D_IN;
  wire main_nn_pes_5_lastInputIdx_EN;

  // register main_nn_pes_5_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_5_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_5_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_5_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_5_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_5_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_5_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_5_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_5_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_5_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_5_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_5_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_5_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_5_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_5_partialSumQ_rCache_D_IN;
  wire main_nn_pes_5_partialSumQ_rCache_EN;

  // register main_nn_pes_5_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_5_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_5_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_5_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_5_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_5_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_5_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_5_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_5_weightReplicateCnt
  reg [7 : 0] main_nn_pes_5_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_5_weightReplicateCnt_D_IN;
  wire main_nn_pes_5_weightReplicateCnt_EN;

  // register main_nn_pes_5_weightReplicateReg
  reg [31 : 0] main_nn_pes_5_weightReplicateReg;
  wire [31 : 0] main_nn_pes_5_weightReplicateReg_D_IN;
  wire main_nn_pes_5_weightReplicateReg_EN;

  // register main_nn_pes_6_curMacIdx
  reg [31 : 0] main_nn_pes_6_curMacIdx;
  wire [31 : 0] main_nn_pes_6_curMacIdx_D_IN;
  wire main_nn_pes_6_curMacIdx_EN;

  // register main_nn_pes_6_curOutputIdx
  reg [7 : 0] main_nn_pes_6_curOutputIdx;
  wire [7 : 0] main_nn_pes_6_curOutputIdx_D_IN;
  wire main_nn_pes_6_curOutputIdx_EN;

  // register main_nn_pes_6_cycleCount
  reg [31 : 0] main_nn_pes_6_cycleCount;
  wire [31 : 0] main_nn_pes_6_cycleCount_D_IN;
  wire main_nn_pes_6_cycleCount_EN;

  // register main_nn_pes_6_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_6_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_6_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_6_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_6_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_6_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_6_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_6_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_6_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_6_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_6_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_6_fmult_mult18_validMap_EN;

  // register main_nn_pes_6_lastInputIdx
  reg [7 : 0] main_nn_pes_6_lastInputIdx;
  wire [7 : 0] main_nn_pes_6_lastInputIdx_D_IN;
  wire main_nn_pes_6_lastInputIdx_EN;

  // register main_nn_pes_6_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_6_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_6_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_6_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_6_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_6_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_6_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_6_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_6_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_6_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_6_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_6_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_6_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_6_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_6_partialSumQ_rCache_D_IN;
  wire main_nn_pes_6_partialSumQ_rCache_EN;

  // register main_nn_pes_6_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_6_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_6_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_6_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_6_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_6_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_6_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_6_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_6_weightReplicateCnt
  reg [7 : 0] main_nn_pes_6_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_6_weightReplicateCnt_D_IN;
  wire main_nn_pes_6_weightReplicateCnt_EN;

  // register main_nn_pes_6_weightReplicateReg
  reg [31 : 0] main_nn_pes_6_weightReplicateReg;
  wire [31 : 0] main_nn_pes_6_weightReplicateReg_D_IN;
  wire main_nn_pes_6_weightReplicateReg_EN;

  // register main_nn_pes_7_curMacIdx
  reg [31 : 0] main_nn_pes_7_curMacIdx;
  wire [31 : 0] main_nn_pes_7_curMacIdx_D_IN;
  wire main_nn_pes_7_curMacIdx_EN;

  // register main_nn_pes_7_curOutputIdx
  reg [7 : 0] main_nn_pes_7_curOutputIdx;
  wire [7 : 0] main_nn_pes_7_curOutputIdx_D_IN;
  wire main_nn_pes_7_curOutputIdx_EN;

  // register main_nn_pes_7_cycleCount
  reg [31 : 0] main_nn_pes_7_cycleCount;
  wire [31 : 0] main_nn_pes_7_cycleCount_D_IN;
  wire main_nn_pes_7_cycleCount_EN;

  // register main_nn_pes_7_fmult_mult18_dataInFlightDn
  reg [2 : 0] main_nn_pes_7_fmult_mult18_dataInFlightDn;
  wire [2 : 0] main_nn_pes_7_fmult_mult18_dataInFlightDn_D_IN;
  wire main_nn_pes_7_fmult_mult18_dataInFlightDn_EN;

  // register main_nn_pes_7_fmult_mult18_dataInFlightUp
  reg [2 : 0] main_nn_pes_7_fmult_mult18_dataInFlightUp;
  wire [2 : 0] main_nn_pes_7_fmult_mult18_dataInFlightUp_D_IN;
  wire main_nn_pes_7_fmult_mult18_dataInFlightUp_EN;

  // register main_nn_pes_7_fmult_mult18_validMap
  reg [3 : 0] main_nn_pes_7_fmult_mult18_validMap;
  wire [3 : 0] main_nn_pes_7_fmult_mult18_validMap_D_IN;
  wire main_nn_pes_7_fmult_mult18_validMap_EN;

  // register main_nn_pes_7_lastInputIdx
  reg [7 : 0] main_nn_pes_7_lastInputIdx;
  wire [7 : 0] main_nn_pes_7_lastInputIdx_D_IN;
  wire main_nn_pes_7_lastInputIdx_EN;

  // register main_nn_pes_7_partialSumIdxQ2_rCache
  reg [40 : 0] main_nn_pes_7_partialSumIdxQ2_rCache;
  wire [40 : 0] main_nn_pes_7_partialSumIdxQ2_rCache_D_IN;
  wire main_nn_pes_7_partialSumIdxQ2_rCache_EN;

  // register main_nn_pes_7_partialSumIdxQ2_rRdPtr
  reg [7 : 0] main_nn_pes_7_partialSumIdxQ2_rRdPtr;
  wire [7 : 0] main_nn_pes_7_partialSumIdxQ2_rRdPtr_D_IN;
  wire main_nn_pes_7_partialSumIdxQ2_rRdPtr_EN;

  // register main_nn_pes_7_partialSumIdxQ2_rWrPtr
  reg [7 : 0] main_nn_pes_7_partialSumIdxQ2_rWrPtr;
  wire [7 : 0] main_nn_pes_7_partialSumIdxQ2_rWrPtr_D_IN;
  wire main_nn_pes_7_partialSumIdxQ2_rWrPtr_EN;

  // register main_nn_pes_7_partialSumQ_rCache
  reg [40 : 0] main_nn_pes_7_partialSumQ_rCache;
  wire [40 : 0] main_nn_pes_7_partialSumQ_rCache_D_IN;
  wire main_nn_pes_7_partialSumQ_rCache_EN;

  // register main_nn_pes_7_partialSumQ_rRdPtr
  reg [7 : 0] main_nn_pes_7_partialSumQ_rRdPtr;
  wire [7 : 0] main_nn_pes_7_partialSumQ_rRdPtr_D_IN;
  wire main_nn_pes_7_partialSumQ_rRdPtr_EN;

  // register main_nn_pes_7_partialSumQ_rWrPtr
  reg [7 : 0] main_nn_pes_7_partialSumQ_rWrPtr;
  wire [7 : 0] main_nn_pes_7_partialSumQ_rWrPtr_D_IN;
  wire main_nn_pes_7_partialSumQ_rWrPtr_EN;

  // register main_nn_pes_7_weightReplicateCnt
  reg [7 : 0] main_nn_pes_7_weightReplicateCnt;
  wire [7 : 0] main_nn_pes_7_weightReplicateCnt_D_IN;
  wire main_nn_pes_7_weightReplicateCnt_EN;

  // register main_nn_pes_7_weightReplicateReg
  reg [31 : 0] main_nn_pes_7_weightReplicateReg;
  wire [31 : 0] main_nn_pes_7_weightReplicateReg_D_IN;
  wire main_nn_pes_7_weightReplicateReg_EN;

  // register main_nn_weightInIdx_0
  reg [15 : 0] main_nn_weightInIdx_0;
  wire [15 : 0] main_nn_weightInIdx_0_D_IN;
  wire main_nn_weightInIdx_0_EN;

  // register main_nn_weightInIdx_1
  reg [15 : 0] main_nn_weightInIdx_1;
  wire [15 : 0] main_nn_weightInIdx_1_D_IN;
  wire main_nn_weightInIdx_1_EN;

  // register main_nn_weightInIdx_2
  reg [15 : 0] main_nn_weightInIdx_2;
  wire [15 : 0] main_nn_weightInIdx_2_D_IN;
  wire main_nn_weightInIdx_2_EN;

  // register main_nn_weightInIdx_3
  reg [15 : 0] main_nn_weightInIdx_3;
  wire [15 : 0] main_nn_weightInIdx_3_D_IN;
  wire main_nn_weightInIdx_3_EN;

  // register main_nn_weightInIdx_4
  reg [15 : 0] main_nn_weightInIdx_4;
  wire [15 : 0] main_nn_weightInIdx_4_D_IN;
  wire main_nn_weightInIdx_4_EN;

  // register main_nn_weightInIdx_5
  reg [15 : 0] main_nn_weightInIdx_5;
  wire [15 : 0] main_nn_weightInIdx_5_D_IN;
  wire main_nn_weightInIdx_5_EN;

  // register main_nn_weightInIdx_6
  reg [15 : 0] main_nn_weightInIdx_6;
  wire [15 : 0] main_nn_weightInIdx_6_D_IN;
  wire main_nn_weightInIdx_6_EN;

  // register main_nn_weightInIdx_7
  reg [15 : 0] main_nn_weightInIdx_7;
  wire [15 : 0] main_nn_weightInIdx_7_D_IN;
  wire main_nn_weightInIdx_7_EN;

  // register main_outputBuffer
  reg [39 : 0] main_outputBuffer;
  wire [39 : 0] main_outputBuffer_D_IN;
  wire main_outputBuffer_EN;

  // register main_outputBufferCnt
  reg [2 : 0] main_outputBufferCnt;
  wire [2 : 0] main_outputBufferCnt_D_IN;
  wire main_outputBufferCnt_EN;

  // register main_resultDataCount
  reg [31 : 0] main_resultDataCount;
  wire [31 : 0] main_resultDataCount_D_IN;
  wire main_resultDataCount_EN;

  // register mem_addr_out
  reg [12 : 0] mem_addr_out;
  reg [12 : 0] mem_addr_out_D_IN;
  wire mem_addr_out_EN;

  // register mem_command_out
  reg [3 : 0] mem_command_out;
  reg [3 : 0] mem_command_out_D_IN;
  wire mem_command_out_EN;

  // register mem_counter
  reg [15 : 0] mem_counter;
  wire [15 : 0] mem_counter_D_IN;
  wire mem_counter_EN;

  // register mem_cur_cmd_address
  reg [23 : 0] mem_cur_cmd_address;
  wire [23 : 0] mem_cur_cmd_address_D_IN;
  wire mem_cur_cmd_address_EN;

  // register mem_cur_cmd_isRead
  reg mem_cur_cmd_isRead;
  wire mem_cur_cmd_isRead_D_IN, mem_cur_cmd_isRead_EN;

  // register mem_cur_cmd_wdata
  reg [15 : 0] mem_cur_cmd_wdata;
  wire [15 : 0] mem_cur_cmd_wdata_D_IN;
  wire mem_cur_cmd_wdata_EN;

  // register mem_delay
  reg [3 : 0] mem_delay;
  reg [3 : 0] mem_delay_D_IN;
  wire mem_delay_EN;

  // register mem_dqm
  reg [1 : 0] mem_dqm;
  wire [1 : 0] mem_dqm_D_IN;
  wire mem_dqm_EN;

  // register mem_open_bank
  reg [3 : 0] mem_open_bank;
  wire [3 : 0] mem_open_bank_D_IN;
  wire mem_open_bank_EN;

  // register mem_open_rows
  reg [51 : 0] mem_open_rows;
  wire [51 : 0] mem_open_rows_D_IN;
  wire mem_open_rows_EN;

  // register mem_state
  reg [2 : 0] mem_state;
  wire [2 : 0] mem_state_D_IN;
  wire mem_state_EN;

  // register mem_state_next
  reg [2 : 0] mem_state_next;
  reg [2 : 0] mem_state_next_D_IN;
  wire mem_state_next_EN;

  // register uartInWord
  reg [7 : 0] uartInWord;
  wire [7 : 0] uartInWord_D_IN;
  wire uartInWord_EN;

  // register uart_bleft
  reg [3 : 0] uart_bleft;
  wire [3 : 0] uart_bleft_D_IN;
  wire uart_bleft_EN;

  // register uart_clkcnt
  reg [15 : 0] uart_clkcnt;
  wire [15 : 0] uart_clkcnt_D_IN;
  wire uart_clkcnt_EN;

  // register uart_curoutd
  reg [10 : 0] uart_curoutd;
  wire [10 : 0] uart_curoutd_D_IN;
  wire uart_curoutd_EN;

  // register uart_curoutoff
  reg [4 : 0] uart_curoutoff;
  wire [4 : 0] uart_curoutoff_D_IN;
  wire uart_curoutoff_EN;

  // register uart_outword
  reg [7 : 0] uart_outword;
  wire [7 : 0] uart_outword_D_IN;
  wire uart_outword_EN;

  // register uart_rxin
  reg [3 : 0] uart_rxin;
  wire [3 : 0] uart_rxin_D_IN;
  wire uart_rxin_EN;

  // register uart_samplecountdown
  reg [15 : 0] uart_samplecountdown;
  wire [15 : 0] uart_samplecountdown_D_IN;
  wire uart_samplecountdown_EN;

  // register uart_txdr
  reg uart_txdr;
  wire uart_txdr_D_IN, uart_txdr_EN;

  // ports of submodule mainToSerialQ
  wire [7 : 0] mainToSerialQ_dD_OUT, mainToSerialQ_sD_IN;
  wire mainToSerialQ_dDEQ,
       mainToSerialQ_dEMPTY_N,
       mainToSerialQ_sENQ,
       mainToSerialQ_sFULL_N;

  // ports of submodule main_memWriteQ
  wire [31 : 0] main_memWriteQ_D_IN, main_memWriteQ_D_OUT;
  wire main_memWriteQ_CLR,
       main_memWriteQ_DEQ,
       main_memWriteQ_EMPTY_N,
       main_memWriteQ_ENQ,
       main_memWriteQ_FULL_N;

  // ports of submodule main_nn_dataInQs_0
  wire [39 : 0] main_nn_dataInQs_0_D_IN, main_nn_dataInQs_0_D_OUT;
  wire main_nn_dataInQs_0_CLR,
       main_nn_dataInQs_0_DEQ,
       main_nn_dataInQs_0_EMPTY_N,
       main_nn_dataInQs_0_ENQ,
       main_nn_dataInQs_0_FULL_N;

  // ports of submodule main_nn_dataInQs_1
  wire [39 : 0] main_nn_dataInQs_1_D_IN, main_nn_dataInQs_1_D_OUT;
  wire main_nn_dataInQs_1_CLR,
       main_nn_dataInQs_1_DEQ,
       main_nn_dataInQs_1_EMPTY_N,
       main_nn_dataInQs_1_ENQ,
       main_nn_dataInQs_1_FULL_N;

  // ports of submodule main_nn_dataInQs_2
  wire [39 : 0] main_nn_dataInQs_2_D_IN, main_nn_dataInQs_2_D_OUT;
  wire main_nn_dataInQs_2_CLR,
       main_nn_dataInQs_2_DEQ,
       main_nn_dataInQs_2_EMPTY_N,
       main_nn_dataInQs_2_ENQ,
       main_nn_dataInQs_2_FULL_N;

  // ports of submodule main_nn_dataInQs_3
  wire [39 : 0] main_nn_dataInQs_3_D_IN, main_nn_dataInQs_3_D_OUT;
  wire main_nn_dataInQs_3_CLR,
       main_nn_dataInQs_3_DEQ,
       main_nn_dataInQs_3_EMPTY_N,
       main_nn_dataInQs_3_ENQ,
       main_nn_dataInQs_3_FULL_N;

  // ports of submodule main_nn_dataInQs_4
  wire [39 : 0] main_nn_dataInQs_4_D_IN, main_nn_dataInQs_4_D_OUT;
  wire main_nn_dataInQs_4_CLR,
       main_nn_dataInQs_4_DEQ,
       main_nn_dataInQs_4_EMPTY_N,
       main_nn_dataInQs_4_ENQ,
       main_nn_dataInQs_4_FULL_N;

  // ports of submodule main_nn_dataInQs_5
  wire [39 : 0] main_nn_dataInQs_5_D_IN, main_nn_dataInQs_5_D_OUT;
  wire main_nn_dataInQs_5_CLR,
       main_nn_dataInQs_5_DEQ,
       main_nn_dataInQs_5_EMPTY_N,
       main_nn_dataInQs_5_ENQ,
       main_nn_dataInQs_5_FULL_N;

  // ports of submodule main_nn_dataInQs_6
  wire [39 : 0] main_nn_dataInQs_6_D_IN, main_nn_dataInQs_6_D_OUT;
  wire main_nn_dataInQs_6_CLR,
       main_nn_dataInQs_6_DEQ,
       main_nn_dataInQs_6_EMPTY_N,
       main_nn_dataInQs_6_ENQ,
       main_nn_dataInQs_6_FULL_N;

  // ports of submodule main_nn_dataInQs_7
  wire [39 : 0] main_nn_dataInQs_7_D_IN, main_nn_dataInQs_7_D_OUT;
  wire main_nn_dataInQs_7_CLR,
       main_nn_dataInQs_7_DEQ,
       main_nn_dataInQs_7_EMPTY_N,
       main_nn_dataInQs_7_ENQ,
       main_nn_dataInQs_7_FULL_N;

  // ports of submodule main_nn_pes_0_addForwardQ
  wire [31 : 0] main_nn_pes_0_addForwardQ_D_IN,
		main_nn_pes_0_addForwardQ_D_OUT;
  wire main_nn_pes_0_addForwardQ_CLR,
       main_nn_pes_0_addForwardQ_DEQ,
       main_nn_pes_0_addForwardQ_EMPTY_N,
       main_nn_pes_0_addForwardQ_ENQ,
       main_nn_pes_0_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_calcQ
  wire [54 : 0] main_nn_pes_0_fadd_calcQ_D_IN, main_nn_pes_0_fadd_calcQ_D_OUT;
  wire main_nn_pes_0_fadd_calcQ_CLR,
       main_nn_pes_0_fadd_calcQ_DEQ,
       main_nn_pes_0_fadd_calcQ_EMPTY_N,
       main_nn_pes_0_fadd_calcQ_ENQ,
       main_nn_pes_0_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_inProcQ
  wire [62 : 0] main_nn_pes_0_fadd_inProcQ_D_IN,
		main_nn_pes_0_fadd_inProcQ_D_OUT;
  wire main_nn_pes_0_fadd_inProcQ_CLR,
       main_nn_pes_0_fadd_inProcQ_DEQ,
       main_nn_pes_0_fadd_inProcQ_EMPTY_N,
       main_nn_pes_0_fadd_inProcQ_ENQ,
       main_nn_pes_0_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_inQ
  wire [63 : 0] main_nn_pes_0_fadd_inQ_D_IN, main_nn_pes_0_fadd_inQ_D_OUT;
  wire main_nn_pes_0_fadd_inQ_CLR,
       main_nn_pes_0_fadd_inQ_DEQ,
       main_nn_pes_0_fadd_inQ_EMPTY_N,
       main_nn_pes_0_fadd_inQ_ENQ,
       main_nn_pes_0_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_0_fadd_normalizeQ_D_IN,
		main_nn_pes_0_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_0_fadd_normalizeQ_CLR,
       main_nn_pes_0_fadd_normalizeQ_DEQ,
       main_nn_pes_0_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_0_fadd_normalizeQ_ENQ,
       main_nn_pes_0_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_0_fadd_normalizeQ1_D_IN,
		main_nn_pes_0_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_0_fadd_normalizeQ1_CLR,
       main_nn_pes_0_fadd_normalizeQ1_DEQ,
       main_nn_pes_0_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_0_fadd_normalizeQ1_ENQ,
       main_nn_pes_0_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_0_fadd_normalizeQ2_D_IN,
		main_nn_pes_0_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_0_fadd_normalizeQ2_CLR,
       main_nn_pes_0_fadd_normalizeQ2_DEQ,
       main_nn_pes_0_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_0_fadd_normalizeQ2_ENQ,
       main_nn_pes_0_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_0_fadd_normalizeQ3_D_IN,
		main_nn_pes_0_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_0_fadd_normalizeQ3_CLR,
       main_nn_pes_0_fadd_normalizeQ3_DEQ,
       main_nn_pes_0_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_0_fadd_normalizeQ3_ENQ,
       main_nn_pes_0_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_0_fadd_normalizeQ4_D_IN,
		main_nn_pes_0_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_0_fadd_normalizeQ4_CLR,
       main_nn_pes_0_fadd_normalizeQ4_DEQ,
       main_nn_pes_0_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_0_fadd_normalizeQ4_ENQ,
       main_nn_pes_0_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_0_fadd_outQ
  wire [31 : 0] main_nn_pes_0_fadd_outQ_D_IN, main_nn_pes_0_fadd_outQ_D_OUT;
  wire main_nn_pes_0_fadd_outQ_CLR,
       main_nn_pes_0_fadd_outQ_DEQ,
       main_nn_pes_0_fadd_outQ_EMPTY_N,
       main_nn_pes_0_fadd_outQ_ENQ,
       main_nn_pes_0_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_0_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_0_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_0_fmult_mult18_multin_dataax,
		main_nn_pes_0_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_0_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_0_fmult_mult18_outQ_D_IN,
		main_nn_pes_0_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_0_fmult_mult18_outQ_CLR,
       main_nn_pes_0_fmult_mult18_outQ_DEQ,
       main_nn_pes_0_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_0_fmult_mult18_outQ_ENQ,
       main_nn_pes_0_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_0_fmult_outQ
  wire [31 : 0] main_nn_pes_0_fmult_outQ_D_IN, main_nn_pes_0_fmult_outQ_D_OUT;
  wire main_nn_pes_0_fmult_outQ_CLR,
       main_nn_pes_0_fmult_outQ_DEQ,
       main_nn_pes_0_fmult_outQ_EMPTY_N,
       main_nn_pes_0_fmult_outQ_ENQ,
       main_nn_pes_0_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_0_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_0_fmult_signExpZeroQ_D_IN,
		main_nn_pes_0_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_0_fmult_signExpZeroQ_CLR,
       main_nn_pes_0_fmult_signExpZeroQ_DEQ,
       main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_0_fmult_signExpZeroQ_ENQ,
       main_nn_pes_0_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_0_inputQ
  wire [39 : 0] main_nn_pes_0_inputQ_D_IN, main_nn_pes_0_inputQ_D_OUT;
  wire main_nn_pes_0_inputQ_CLR,
       main_nn_pes_0_inputQ_DEQ,
       main_nn_pes_0_inputQ_EMPTY_N,
       main_nn_pes_0_inputQ_ENQ,
       main_nn_pes_0_inputQ_FULL_N;

  // ports of submodule main_nn_pes_0_outputQ
  wire [47 : 0] main_nn_pes_0_outputQ_D_IN, main_nn_pes_0_outputQ_D_OUT;
  wire main_nn_pes_0_outputQ_CLR,
       main_nn_pes_0_outputQ_DEQ,
       main_nn_pes_0_outputQ_EMPTY_N,
       main_nn_pes_0_outputQ_ENQ,
       main_nn_pes_0_outputQ_FULL_N;

  // ports of submodule main_nn_pes_0_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_0_partialSumIdxQ1_D_IN,
		main_nn_pes_0_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_0_partialSumIdxQ1_CLR,
       main_nn_pes_0_partialSumIdxQ1_DEQ,
       main_nn_pes_0_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_0_partialSumIdxQ1_ENQ,
       main_nn_pes_0_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_0_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_0_partialSumIdxQ2_memory_DIA,
		main_nn_pes_0_partialSumIdxQ2_memory_DIB,
		main_nn_pes_0_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_0_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_0_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_0_partialSumIdxQ2_memory_ENA,
       main_nn_pes_0_partialSumIdxQ2_memory_ENB,
       main_nn_pes_0_partialSumIdxQ2_memory_WEA,
       main_nn_pes_0_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_0_partialSumQ2
  wire [31 : 0] main_nn_pes_0_partialSumQ2_D_IN,
		main_nn_pes_0_partialSumQ2_D_OUT;
  wire main_nn_pes_0_partialSumQ2_CLR,
       main_nn_pes_0_partialSumQ2_DEQ,
       main_nn_pes_0_partialSumQ2_EMPTY_N,
       main_nn_pes_0_partialSumQ2_ENQ,
       main_nn_pes_0_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_0_partialSumQ_memory
  wire [31 : 0] main_nn_pes_0_partialSumQ_memory_DIA,
		main_nn_pes_0_partialSumQ_memory_DIB,
		main_nn_pes_0_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_0_partialSumQ_memory_ADDRA,
	       main_nn_pes_0_partialSumQ_memory_ADDRB;
  wire main_nn_pes_0_partialSumQ_memory_ENA,
       main_nn_pes_0_partialSumQ_memory_ENB,
       main_nn_pes_0_partialSumQ_memory_WEA,
       main_nn_pes_0_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_0_weightInQ
  wire [31 : 0] main_nn_pes_0_weightInQ_D_IN, main_nn_pes_0_weightInQ_D_OUT;
  wire main_nn_pes_0_weightInQ_CLR,
       main_nn_pes_0_weightInQ_DEQ,
       main_nn_pes_0_weightInQ_EMPTY_N,
       main_nn_pes_0_weightInQ_ENQ,
       main_nn_pes_0_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_0_weightQ
  wire [31 : 0] main_nn_pes_0_weightQ_D_IN, main_nn_pes_0_weightQ_D_OUT;
  wire main_nn_pes_0_weightQ_CLR,
       main_nn_pes_0_weightQ_DEQ,
       main_nn_pes_0_weightQ_EMPTY_N,
       main_nn_pes_0_weightQ_ENQ,
       main_nn_pes_0_weightQ_FULL_N;

  // ports of submodule main_nn_pes_1_addForwardQ
  wire [31 : 0] main_nn_pes_1_addForwardQ_D_IN,
		main_nn_pes_1_addForwardQ_D_OUT;
  wire main_nn_pes_1_addForwardQ_CLR,
       main_nn_pes_1_addForwardQ_DEQ,
       main_nn_pes_1_addForwardQ_EMPTY_N,
       main_nn_pes_1_addForwardQ_ENQ,
       main_nn_pes_1_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_calcQ
  wire [54 : 0] main_nn_pes_1_fadd_calcQ_D_IN, main_nn_pes_1_fadd_calcQ_D_OUT;
  wire main_nn_pes_1_fadd_calcQ_CLR,
       main_nn_pes_1_fadd_calcQ_DEQ,
       main_nn_pes_1_fadd_calcQ_EMPTY_N,
       main_nn_pes_1_fadd_calcQ_ENQ,
       main_nn_pes_1_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_inProcQ
  wire [62 : 0] main_nn_pes_1_fadd_inProcQ_D_IN,
		main_nn_pes_1_fadd_inProcQ_D_OUT;
  wire main_nn_pes_1_fadd_inProcQ_CLR,
       main_nn_pes_1_fadd_inProcQ_DEQ,
       main_nn_pes_1_fadd_inProcQ_EMPTY_N,
       main_nn_pes_1_fadd_inProcQ_ENQ,
       main_nn_pes_1_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_inQ
  wire [63 : 0] main_nn_pes_1_fadd_inQ_D_IN, main_nn_pes_1_fadd_inQ_D_OUT;
  wire main_nn_pes_1_fadd_inQ_CLR,
       main_nn_pes_1_fadd_inQ_DEQ,
       main_nn_pes_1_fadd_inQ_EMPTY_N,
       main_nn_pes_1_fadd_inQ_ENQ,
       main_nn_pes_1_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_1_fadd_normalizeQ_D_IN,
		main_nn_pes_1_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_1_fadd_normalizeQ_CLR,
       main_nn_pes_1_fadd_normalizeQ_DEQ,
       main_nn_pes_1_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_1_fadd_normalizeQ_ENQ,
       main_nn_pes_1_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_1_fadd_normalizeQ1_D_IN,
		main_nn_pes_1_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_1_fadd_normalizeQ1_CLR,
       main_nn_pes_1_fadd_normalizeQ1_DEQ,
       main_nn_pes_1_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_1_fadd_normalizeQ1_ENQ,
       main_nn_pes_1_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_1_fadd_normalizeQ2_D_IN,
		main_nn_pes_1_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_1_fadd_normalizeQ2_CLR,
       main_nn_pes_1_fadd_normalizeQ2_DEQ,
       main_nn_pes_1_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_1_fadd_normalizeQ2_ENQ,
       main_nn_pes_1_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_1_fadd_normalizeQ3_D_IN,
		main_nn_pes_1_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_1_fadd_normalizeQ3_CLR,
       main_nn_pes_1_fadd_normalizeQ3_DEQ,
       main_nn_pes_1_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_1_fadd_normalizeQ3_ENQ,
       main_nn_pes_1_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_1_fadd_normalizeQ4_D_IN,
		main_nn_pes_1_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_1_fadd_normalizeQ4_CLR,
       main_nn_pes_1_fadd_normalizeQ4_DEQ,
       main_nn_pes_1_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_1_fadd_normalizeQ4_ENQ,
       main_nn_pes_1_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_1_fadd_outQ
  wire [31 : 0] main_nn_pes_1_fadd_outQ_D_IN, main_nn_pes_1_fadd_outQ_D_OUT;
  wire main_nn_pes_1_fadd_outQ_CLR,
       main_nn_pes_1_fadd_outQ_DEQ,
       main_nn_pes_1_fadd_outQ_EMPTY_N,
       main_nn_pes_1_fadd_outQ_ENQ,
       main_nn_pes_1_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_1_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_1_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_1_fmult_mult18_multin_dataax,
		main_nn_pes_1_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_1_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_1_fmult_mult18_outQ_D_IN,
		main_nn_pes_1_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_1_fmult_mult18_outQ_CLR,
       main_nn_pes_1_fmult_mult18_outQ_DEQ,
       main_nn_pes_1_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_1_fmult_mult18_outQ_ENQ,
       main_nn_pes_1_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_1_fmult_outQ
  wire [31 : 0] main_nn_pes_1_fmult_outQ_D_IN, main_nn_pes_1_fmult_outQ_D_OUT;
  wire main_nn_pes_1_fmult_outQ_CLR,
       main_nn_pes_1_fmult_outQ_DEQ,
       main_nn_pes_1_fmult_outQ_EMPTY_N,
       main_nn_pes_1_fmult_outQ_ENQ,
       main_nn_pes_1_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_1_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_1_fmult_signExpZeroQ_D_IN,
		main_nn_pes_1_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_1_fmult_signExpZeroQ_CLR,
       main_nn_pes_1_fmult_signExpZeroQ_DEQ,
       main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_1_fmult_signExpZeroQ_ENQ,
       main_nn_pes_1_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_1_inputQ
  wire [39 : 0] main_nn_pes_1_inputQ_D_IN, main_nn_pes_1_inputQ_D_OUT;
  wire main_nn_pes_1_inputQ_CLR,
       main_nn_pes_1_inputQ_DEQ,
       main_nn_pes_1_inputQ_EMPTY_N,
       main_nn_pes_1_inputQ_ENQ,
       main_nn_pes_1_inputQ_FULL_N;

  // ports of submodule main_nn_pes_1_outputQ
  wire [47 : 0] main_nn_pes_1_outputQ_D_IN, main_nn_pes_1_outputQ_D_OUT;
  wire main_nn_pes_1_outputQ_CLR,
       main_nn_pes_1_outputQ_DEQ,
       main_nn_pes_1_outputQ_EMPTY_N,
       main_nn_pes_1_outputQ_ENQ,
       main_nn_pes_1_outputQ_FULL_N;

  // ports of submodule main_nn_pes_1_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_1_partialSumIdxQ1_D_IN,
		main_nn_pes_1_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_1_partialSumIdxQ1_CLR,
       main_nn_pes_1_partialSumIdxQ1_DEQ,
       main_nn_pes_1_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_1_partialSumIdxQ1_ENQ,
       main_nn_pes_1_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_1_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_1_partialSumIdxQ2_memory_DIA,
		main_nn_pes_1_partialSumIdxQ2_memory_DIB,
		main_nn_pes_1_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_1_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_1_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_1_partialSumIdxQ2_memory_ENA,
       main_nn_pes_1_partialSumIdxQ2_memory_ENB,
       main_nn_pes_1_partialSumIdxQ2_memory_WEA,
       main_nn_pes_1_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_1_partialSumQ2
  wire [31 : 0] main_nn_pes_1_partialSumQ2_D_IN,
		main_nn_pes_1_partialSumQ2_D_OUT;
  wire main_nn_pes_1_partialSumQ2_CLR,
       main_nn_pes_1_partialSumQ2_DEQ,
       main_nn_pes_1_partialSumQ2_EMPTY_N,
       main_nn_pes_1_partialSumQ2_ENQ,
       main_nn_pes_1_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_1_partialSumQ_memory
  wire [31 : 0] main_nn_pes_1_partialSumQ_memory_DIA,
		main_nn_pes_1_partialSumQ_memory_DIB,
		main_nn_pes_1_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_1_partialSumQ_memory_ADDRA,
	       main_nn_pes_1_partialSumQ_memory_ADDRB;
  wire main_nn_pes_1_partialSumQ_memory_ENA,
       main_nn_pes_1_partialSumQ_memory_ENB,
       main_nn_pes_1_partialSumQ_memory_WEA,
       main_nn_pes_1_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_1_weightInQ
  wire [31 : 0] main_nn_pes_1_weightInQ_D_IN, main_nn_pes_1_weightInQ_D_OUT;
  wire main_nn_pes_1_weightInQ_CLR,
       main_nn_pes_1_weightInQ_DEQ,
       main_nn_pes_1_weightInQ_EMPTY_N,
       main_nn_pes_1_weightInQ_ENQ,
       main_nn_pes_1_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_1_weightQ
  wire [31 : 0] main_nn_pes_1_weightQ_D_IN, main_nn_pes_1_weightQ_D_OUT;
  wire main_nn_pes_1_weightQ_CLR,
       main_nn_pes_1_weightQ_DEQ,
       main_nn_pes_1_weightQ_EMPTY_N,
       main_nn_pes_1_weightQ_ENQ,
       main_nn_pes_1_weightQ_FULL_N;

  // ports of submodule main_nn_pes_2_addForwardQ
  wire [31 : 0] main_nn_pes_2_addForwardQ_D_IN,
		main_nn_pes_2_addForwardQ_D_OUT;
  wire main_nn_pes_2_addForwardQ_CLR,
       main_nn_pes_2_addForwardQ_DEQ,
       main_nn_pes_2_addForwardQ_EMPTY_N,
       main_nn_pes_2_addForwardQ_ENQ,
       main_nn_pes_2_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_calcQ
  wire [54 : 0] main_nn_pes_2_fadd_calcQ_D_IN, main_nn_pes_2_fadd_calcQ_D_OUT;
  wire main_nn_pes_2_fadd_calcQ_CLR,
       main_nn_pes_2_fadd_calcQ_DEQ,
       main_nn_pes_2_fadd_calcQ_EMPTY_N,
       main_nn_pes_2_fadd_calcQ_ENQ,
       main_nn_pes_2_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_inProcQ
  wire [62 : 0] main_nn_pes_2_fadd_inProcQ_D_IN,
		main_nn_pes_2_fadd_inProcQ_D_OUT;
  wire main_nn_pes_2_fadd_inProcQ_CLR,
       main_nn_pes_2_fadd_inProcQ_DEQ,
       main_nn_pes_2_fadd_inProcQ_EMPTY_N,
       main_nn_pes_2_fadd_inProcQ_ENQ,
       main_nn_pes_2_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_inQ
  wire [63 : 0] main_nn_pes_2_fadd_inQ_D_IN, main_nn_pes_2_fadd_inQ_D_OUT;
  wire main_nn_pes_2_fadd_inQ_CLR,
       main_nn_pes_2_fadd_inQ_DEQ,
       main_nn_pes_2_fadd_inQ_EMPTY_N,
       main_nn_pes_2_fadd_inQ_ENQ,
       main_nn_pes_2_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_2_fadd_normalizeQ_D_IN,
		main_nn_pes_2_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_2_fadd_normalizeQ_CLR,
       main_nn_pes_2_fadd_normalizeQ_DEQ,
       main_nn_pes_2_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_2_fadd_normalizeQ_ENQ,
       main_nn_pes_2_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_2_fadd_normalizeQ1_D_IN,
		main_nn_pes_2_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_2_fadd_normalizeQ1_CLR,
       main_nn_pes_2_fadd_normalizeQ1_DEQ,
       main_nn_pes_2_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_2_fadd_normalizeQ1_ENQ,
       main_nn_pes_2_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_2_fadd_normalizeQ2_D_IN,
		main_nn_pes_2_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_2_fadd_normalizeQ2_CLR,
       main_nn_pes_2_fadd_normalizeQ2_DEQ,
       main_nn_pes_2_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_2_fadd_normalizeQ2_ENQ,
       main_nn_pes_2_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_2_fadd_normalizeQ3_D_IN,
		main_nn_pes_2_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_2_fadd_normalizeQ3_CLR,
       main_nn_pes_2_fadd_normalizeQ3_DEQ,
       main_nn_pes_2_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_2_fadd_normalizeQ3_ENQ,
       main_nn_pes_2_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_2_fadd_normalizeQ4_D_IN,
		main_nn_pes_2_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_2_fadd_normalizeQ4_CLR,
       main_nn_pes_2_fadd_normalizeQ4_DEQ,
       main_nn_pes_2_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_2_fadd_normalizeQ4_ENQ,
       main_nn_pes_2_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_2_fadd_outQ
  wire [31 : 0] main_nn_pes_2_fadd_outQ_D_IN, main_nn_pes_2_fadd_outQ_D_OUT;
  wire main_nn_pes_2_fadd_outQ_CLR,
       main_nn_pes_2_fadd_outQ_DEQ,
       main_nn_pes_2_fadd_outQ_EMPTY_N,
       main_nn_pes_2_fadd_outQ_ENQ,
       main_nn_pes_2_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_2_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_2_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_2_fmult_mult18_multin_dataax,
		main_nn_pes_2_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_2_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_2_fmult_mult18_outQ_D_IN,
		main_nn_pes_2_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_2_fmult_mult18_outQ_CLR,
       main_nn_pes_2_fmult_mult18_outQ_DEQ,
       main_nn_pes_2_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_2_fmult_mult18_outQ_ENQ,
       main_nn_pes_2_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_2_fmult_outQ
  wire [31 : 0] main_nn_pes_2_fmult_outQ_D_IN, main_nn_pes_2_fmult_outQ_D_OUT;
  wire main_nn_pes_2_fmult_outQ_CLR,
       main_nn_pes_2_fmult_outQ_DEQ,
       main_nn_pes_2_fmult_outQ_EMPTY_N,
       main_nn_pes_2_fmult_outQ_ENQ,
       main_nn_pes_2_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_2_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_2_fmult_signExpZeroQ_D_IN,
		main_nn_pes_2_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_2_fmult_signExpZeroQ_CLR,
       main_nn_pes_2_fmult_signExpZeroQ_DEQ,
       main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_2_fmult_signExpZeroQ_ENQ,
       main_nn_pes_2_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_2_inputQ
  wire [39 : 0] main_nn_pes_2_inputQ_D_IN, main_nn_pes_2_inputQ_D_OUT;
  wire main_nn_pes_2_inputQ_CLR,
       main_nn_pes_2_inputQ_DEQ,
       main_nn_pes_2_inputQ_EMPTY_N,
       main_nn_pes_2_inputQ_ENQ,
       main_nn_pes_2_inputQ_FULL_N;

  // ports of submodule main_nn_pes_2_outputQ
  wire [47 : 0] main_nn_pes_2_outputQ_D_IN, main_nn_pes_2_outputQ_D_OUT;
  wire main_nn_pes_2_outputQ_CLR,
       main_nn_pes_2_outputQ_DEQ,
       main_nn_pes_2_outputQ_EMPTY_N,
       main_nn_pes_2_outputQ_ENQ,
       main_nn_pes_2_outputQ_FULL_N;

  // ports of submodule main_nn_pes_2_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_2_partialSumIdxQ1_D_IN,
		main_nn_pes_2_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_2_partialSumIdxQ1_CLR,
       main_nn_pes_2_partialSumIdxQ1_DEQ,
       main_nn_pes_2_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_2_partialSumIdxQ1_ENQ,
       main_nn_pes_2_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_2_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_2_partialSumIdxQ2_memory_DIA,
		main_nn_pes_2_partialSumIdxQ2_memory_DIB,
		main_nn_pes_2_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_2_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_2_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_2_partialSumIdxQ2_memory_ENA,
       main_nn_pes_2_partialSumIdxQ2_memory_ENB,
       main_nn_pes_2_partialSumIdxQ2_memory_WEA,
       main_nn_pes_2_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_2_partialSumQ2
  wire [31 : 0] main_nn_pes_2_partialSumQ2_D_IN,
		main_nn_pes_2_partialSumQ2_D_OUT;
  wire main_nn_pes_2_partialSumQ2_CLR,
       main_nn_pes_2_partialSumQ2_DEQ,
       main_nn_pes_2_partialSumQ2_EMPTY_N,
       main_nn_pes_2_partialSumQ2_ENQ,
       main_nn_pes_2_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_2_partialSumQ_memory
  wire [31 : 0] main_nn_pes_2_partialSumQ_memory_DIA,
		main_nn_pes_2_partialSumQ_memory_DIB,
		main_nn_pes_2_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_2_partialSumQ_memory_ADDRA,
	       main_nn_pes_2_partialSumQ_memory_ADDRB;
  wire main_nn_pes_2_partialSumQ_memory_ENA,
       main_nn_pes_2_partialSumQ_memory_ENB,
       main_nn_pes_2_partialSumQ_memory_WEA,
       main_nn_pes_2_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_2_weightInQ
  wire [31 : 0] main_nn_pes_2_weightInQ_D_IN, main_nn_pes_2_weightInQ_D_OUT;
  wire main_nn_pes_2_weightInQ_CLR,
       main_nn_pes_2_weightInQ_DEQ,
       main_nn_pes_2_weightInQ_EMPTY_N,
       main_nn_pes_2_weightInQ_ENQ,
       main_nn_pes_2_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_2_weightQ
  wire [31 : 0] main_nn_pes_2_weightQ_D_IN, main_nn_pes_2_weightQ_D_OUT;
  wire main_nn_pes_2_weightQ_CLR,
       main_nn_pes_2_weightQ_DEQ,
       main_nn_pes_2_weightQ_EMPTY_N,
       main_nn_pes_2_weightQ_ENQ,
       main_nn_pes_2_weightQ_FULL_N;

  // ports of submodule main_nn_pes_3_addForwardQ
  wire [31 : 0] main_nn_pes_3_addForwardQ_D_IN,
		main_nn_pes_3_addForwardQ_D_OUT;
  wire main_nn_pes_3_addForwardQ_CLR,
       main_nn_pes_3_addForwardQ_DEQ,
       main_nn_pes_3_addForwardQ_EMPTY_N,
       main_nn_pes_3_addForwardQ_ENQ,
       main_nn_pes_3_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_calcQ
  wire [54 : 0] main_nn_pes_3_fadd_calcQ_D_IN, main_nn_pes_3_fadd_calcQ_D_OUT;
  wire main_nn_pes_3_fadd_calcQ_CLR,
       main_nn_pes_3_fadd_calcQ_DEQ,
       main_nn_pes_3_fadd_calcQ_EMPTY_N,
       main_nn_pes_3_fadd_calcQ_ENQ,
       main_nn_pes_3_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_inProcQ
  wire [62 : 0] main_nn_pes_3_fadd_inProcQ_D_IN,
		main_nn_pes_3_fadd_inProcQ_D_OUT;
  wire main_nn_pes_3_fadd_inProcQ_CLR,
       main_nn_pes_3_fadd_inProcQ_DEQ,
       main_nn_pes_3_fadd_inProcQ_EMPTY_N,
       main_nn_pes_3_fadd_inProcQ_ENQ,
       main_nn_pes_3_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_inQ
  wire [63 : 0] main_nn_pes_3_fadd_inQ_D_IN, main_nn_pes_3_fadd_inQ_D_OUT;
  wire main_nn_pes_3_fadd_inQ_CLR,
       main_nn_pes_3_fadd_inQ_DEQ,
       main_nn_pes_3_fadd_inQ_EMPTY_N,
       main_nn_pes_3_fadd_inQ_ENQ,
       main_nn_pes_3_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_3_fadd_normalizeQ_D_IN,
		main_nn_pes_3_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_3_fadd_normalizeQ_CLR,
       main_nn_pes_3_fadd_normalizeQ_DEQ,
       main_nn_pes_3_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_3_fadd_normalizeQ_ENQ,
       main_nn_pes_3_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_3_fadd_normalizeQ1_D_IN,
		main_nn_pes_3_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_3_fadd_normalizeQ1_CLR,
       main_nn_pes_3_fadd_normalizeQ1_DEQ,
       main_nn_pes_3_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_3_fadd_normalizeQ1_ENQ,
       main_nn_pes_3_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_3_fadd_normalizeQ2_D_IN,
		main_nn_pes_3_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_3_fadd_normalizeQ2_CLR,
       main_nn_pes_3_fadd_normalizeQ2_DEQ,
       main_nn_pes_3_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_3_fadd_normalizeQ2_ENQ,
       main_nn_pes_3_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_3_fadd_normalizeQ3_D_IN,
		main_nn_pes_3_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_3_fadd_normalizeQ3_CLR,
       main_nn_pes_3_fadd_normalizeQ3_DEQ,
       main_nn_pes_3_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_3_fadd_normalizeQ3_ENQ,
       main_nn_pes_3_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_3_fadd_normalizeQ4_D_IN,
		main_nn_pes_3_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_3_fadd_normalizeQ4_CLR,
       main_nn_pes_3_fadd_normalizeQ4_DEQ,
       main_nn_pes_3_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_3_fadd_normalizeQ4_ENQ,
       main_nn_pes_3_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_3_fadd_outQ
  wire [31 : 0] main_nn_pes_3_fadd_outQ_D_IN, main_nn_pes_3_fadd_outQ_D_OUT;
  wire main_nn_pes_3_fadd_outQ_CLR,
       main_nn_pes_3_fadd_outQ_DEQ,
       main_nn_pes_3_fadd_outQ_EMPTY_N,
       main_nn_pes_3_fadd_outQ_ENQ,
       main_nn_pes_3_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_3_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_3_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_3_fmult_mult18_multin_dataax,
		main_nn_pes_3_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_3_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_3_fmult_mult18_outQ_D_IN,
		main_nn_pes_3_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_3_fmult_mult18_outQ_CLR,
       main_nn_pes_3_fmult_mult18_outQ_DEQ,
       main_nn_pes_3_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_3_fmult_mult18_outQ_ENQ,
       main_nn_pes_3_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_3_fmult_outQ
  wire [31 : 0] main_nn_pes_3_fmult_outQ_D_IN, main_nn_pes_3_fmult_outQ_D_OUT;
  wire main_nn_pes_3_fmult_outQ_CLR,
       main_nn_pes_3_fmult_outQ_DEQ,
       main_nn_pes_3_fmult_outQ_EMPTY_N,
       main_nn_pes_3_fmult_outQ_ENQ,
       main_nn_pes_3_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_3_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_3_fmult_signExpZeroQ_D_IN,
		main_nn_pes_3_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_3_fmult_signExpZeroQ_CLR,
       main_nn_pes_3_fmult_signExpZeroQ_DEQ,
       main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_3_fmult_signExpZeroQ_ENQ,
       main_nn_pes_3_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_3_inputQ
  wire [39 : 0] main_nn_pes_3_inputQ_D_IN, main_nn_pes_3_inputQ_D_OUT;
  wire main_nn_pes_3_inputQ_CLR,
       main_nn_pes_3_inputQ_DEQ,
       main_nn_pes_3_inputQ_EMPTY_N,
       main_nn_pes_3_inputQ_ENQ,
       main_nn_pes_3_inputQ_FULL_N;

  // ports of submodule main_nn_pes_3_outputQ
  wire [47 : 0] main_nn_pes_3_outputQ_D_IN, main_nn_pes_3_outputQ_D_OUT;
  wire main_nn_pes_3_outputQ_CLR,
       main_nn_pes_3_outputQ_DEQ,
       main_nn_pes_3_outputQ_EMPTY_N,
       main_nn_pes_3_outputQ_ENQ,
       main_nn_pes_3_outputQ_FULL_N;

  // ports of submodule main_nn_pes_3_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_3_partialSumIdxQ1_D_IN,
		main_nn_pes_3_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_3_partialSumIdxQ1_CLR,
       main_nn_pes_3_partialSumIdxQ1_DEQ,
       main_nn_pes_3_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_3_partialSumIdxQ1_ENQ,
       main_nn_pes_3_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_3_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_3_partialSumIdxQ2_memory_DIA,
		main_nn_pes_3_partialSumIdxQ2_memory_DIB,
		main_nn_pes_3_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_3_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_3_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_3_partialSumIdxQ2_memory_ENA,
       main_nn_pes_3_partialSumIdxQ2_memory_ENB,
       main_nn_pes_3_partialSumIdxQ2_memory_WEA,
       main_nn_pes_3_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_3_partialSumQ2
  wire [31 : 0] main_nn_pes_3_partialSumQ2_D_IN,
		main_nn_pes_3_partialSumQ2_D_OUT;
  wire main_nn_pes_3_partialSumQ2_CLR,
       main_nn_pes_3_partialSumQ2_DEQ,
       main_nn_pes_3_partialSumQ2_EMPTY_N,
       main_nn_pes_3_partialSumQ2_ENQ,
       main_nn_pes_3_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_3_partialSumQ_memory
  wire [31 : 0] main_nn_pes_3_partialSumQ_memory_DIA,
		main_nn_pes_3_partialSumQ_memory_DIB,
		main_nn_pes_3_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_3_partialSumQ_memory_ADDRA,
	       main_nn_pes_3_partialSumQ_memory_ADDRB;
  wire main_nn_pes_3_partialSumQ_memory_ENA,
       main_nn_pes_3_partialSumQ_memory_ENB,
       main_nn_pes_3_partialSumQ_memory_WEA,
       main_nn_pes_3_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_3_weightInQ
  wire [31 : 0] main_nn_pes_3_weightInQ_D_IN, main_nn_pes_3_weightInQ_D_OUT;
  wire main_nn_pes_3_weightInQ_CLR,
       main_nn_pes_3_weightInQ_DEQ,
       main_nn_pes_3_weightInQ_EMPTY_N,
       main_nn_pes_3_weightInQ_ENQ,
       main_nn_pes_3_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_3_weightQ
  wire [31 : 0] main_nn_pes_3_weightQ_D_IN, main_nn_pes_3_weightQ_D_OUT;
  wire main_nn_pes_3_weightQ_CLR,
       main_nn_pes_3_weightQ_DEQ,
       main_nn_pes_3_weightQ_EMPTY_N,
       main_nn_pes_3_weightQ_ENQ,
       main_nn_pes_3_weightQ_FULL_N;

  // ports of submodule main_nn_pes_4_addForwardQ
  wire [31 : 0] main_nn_pes_4_addForwardQ_D_IN,
		main_nn_pes_4_addForwardQ_D_OUT;
  wire main_nn_pes_4_addForwardQ_CLR,
       main_nn_pes_4_addForwardQ_DEQ,
       main_nn_pes_4_addForwardQ_EMPTY_N,
       main_nn_pes_4_addForwardQ_ENQ,
       main_nn_pes_4_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_calcQ
  wire [54 : 0] main_nn_pes_4_fadd_calcQ_D_IN, main_nn_pes_4_fadd_calcQ_D_OUT;
  wire main_nn_pes_4_fadd_calcQ_CLR,
       main_nn_pes_4_fadd_calcQ_DEQ,
       main_nn_pes_4_fadd_calcQ_EMPTY_N,
       main_nn_pes_4_fadd_calcQ_ENQ,
       main_nn_pes_4_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_inProcQ
  wire [62 : 0] main_nn_pes_4_fadd_inProcQ_D_IN,
		main_nn_pes_4_fadd_inProcQ_D_OUT;
  wire main_nn_pes_4_fadd_inProcQ_CLR,
       main_nn_pes_4_fadd_inProcQ_DEQ,
       main_nn_pes_4_fadd_inProcQ_EMPTY_N,
       main_nn_pes_4_fadd_inProcQ_ENQ,
       main_nn_pes_4_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_inQ
  wire [63 : 0] main_nn_pes_4_fadd_inQ_D_IN, main_nn_pes_4_fadd_inQ_D_OUT;
  wire main_nn_pes_4_fadd_inQ_CLR,
       main_nn_pes_4_fadd_inQ_DEQ,
       main_nn_pes_4_fadd_inQ_EMPTY_N,
       main_nn_pes_4_fadd_inQ_ENQ,
       main_nn_pes_4_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_4_fadd_normalizeQ_D_IN,
		main_nn_pes_4_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_4_fadd_normalizeQ_CLR,
       main_nn_pes_4_fadd_normalizeQ_DEQ,
       main_nn_pes_4_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_4_fadd_normalizeQ_ENQ,
       main_nn_pes_4_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_4_fadd_normalizeQ1_D_IN,
		main_nn_pes_4_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_4_fadd_normalizeQ1_CLR,
       main_nn_pes_4_fadd_normalizeQ1_DEQ,
       main_nn_pes_4_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_4_fadd_normalizeQ1_ENQ,
       main_nn_pes_4_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_4_fadd_normalizeQ2_D_IN,
		main_nn_pes_4_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_4_fadd_normalizeQ2_CLR,
       main_nn_pes_4_fadd_normalizeQ2_DEQ,
       main_nn_pes_4_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_4_fadd_normalizeQ2_ENQ,
       main_nn_pes_4_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_4_fadd_normalizeQ3_D_IN,
		main_nn_pes_4_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_4_fadd_normalizeQ3_CLR,
       main_nn_pes_4_fadd_normalizeQ3_DEQ,
       main_nn_pes_4_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_4_fadd_normalizeQ3_ENQ,
       main_nn_pes_4_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_4_fadd_normalizeQ4_D_IN,
		main_nn_pes_4_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_4_fadd_normalizeQ4_CLR,
       main_nn_pes_4_fadd_normalizeQ4_DEQ,
       main_nn_pes_4_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_4_fadd_normalizeQ4_ENQ,
       main_nn_pes_4_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_4_fadd_outQ
  wire [31 : 0] main_nn_pes_4_fadd_outQ_D_IN, main_nn_pes_4_fadd_outQ_D_OUT;
  wire main_nn_pes_4_fadd_outQ_CLR,
       main_nn_pes_4_fadd_outQ_DEQ,
       main_nn_pes_4_fadd_outQ_EMPTY_N,
       main_nn_pes_4_fadd_outQ_ENQ,
       main_nn_pes_4_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_4_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_4_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_4_fmult_mult18_multin_dataax,
		main_nn_pes_4_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_4_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_4_fmult_mult18_outQ_D_IN,
		main_nn_pes_4_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_4_fmult_mult18_outQ_CLR,
       main_nn_pes_4_fmult_mult18_outQ_DEQ,
       main_nn_pes_4_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_4_fmult_mult18_outQ_ENQ,
       main_nn_pes_4_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_4_fmult_outQ
  wire [31 : 0] main_nn_pes_4_fmult_outQ_D_IN, main_nn_pes_4_fmult_outQ_D_OUT;
  wire main_nn_pes_4_fmult_outQ_CLR,
       main_nn_pes_4_fmult_outQ_DEQ,
       main_nn_pes_4_fmult_outQ_EMPTY_N,
       main_nn_pes_4_fmult_outQ_ENQ,
       main_nn_pes_4_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_4_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_4_fmult_signExpZeroQ_D_IN,
		main_nn_pes_4_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_4_fmult_signExpZeroQ_CLR,
       main_nn_pes_4_fmult_signExpZeroQ_DEQ,
       main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_4_fmult_signExpZeroQ_ENQ,
       main_nn_pes_4_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_4_inputQ
  wire [39 : 0] main_nn_pes_4_inputQ_D_IN, main_nn_pes_4_inputQ_D_OUT;
  wire main_nn_pes_4_inputQ_CLR,
       main_nn_pes_4_inputQ_DEQ,
       main_nn_pes_4_inputQ_EMPTY_N,
       main_nn_pes_4_inputQ_ENQ,
       main_nn_pes_4_inputQ_FULL_N;

  // ports of submodule main_nn_pes_4_outputQ
  wire [47 : 0] main_nn_pes_4_outputQ_D_IN, main_nn_pes_4_outputQ_D_OUT;
  wire main_nn_pes_4_outputQ_CLR,
       main_nn_pes_4_outputQ_DEQ,
       main_nn_pes_4_outputQ_EMPTY_N,
       main_nn_pes_4_outputQ_ENQ,
       main_nn_pes_4_outputQ_FULL_N;

  // ports of submodule main_nn_pes_4_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_4_partialSumIdxQ1_D_IN,
		main_nn_pes_4_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_4_partialSumIdxQ1_CLR,
       main_nn_pes_4_partialSumIdxQ1_DEQ,
       main_nn_pes_4_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_4_partialSumIdxQ1_ENQ,
       main_nn_pes_4_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_4_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_4_partialSumIdxQ2_memory_DIA,
		main_nn_pes_4_partialSumIdxQ2_memory_DIB,
		main_nn_pes_4_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_4_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_4_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_4_partialSumIdxQ2_memory_ENA,
       main_nn_pes_4_partialSumIdxQ2_memory_ENB,
       main_nn_pes_4_partialSumIdxQ2_memory_WEA,
       main_nn_pes_4_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_4_partialSumQ2
  wire [31 : 0] main_nn_pes_4_partialSumQ2_D_IN,
		main_nn_pes_4_partialSumQ2_D_OUT;
  wire main_nn_pes_4_partialSumQ2_CLR,
       main_nn_pes_4_partialSumQ2_DEQ,
       main_nn_pes_4_partialSumQ2_EMPTY_N,
       main_nn_pes_4_partialSumQ2_ENQ,
       main_nn_pes_4_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_4_partialSumQ_memory
  wire [31 : 0] main_nn_pes_4_partialSumQ_memory_DIA,
		main_nn_pes_4_partialSumQ_memory_DIB,
		main_nn_pes_4_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_4_partialSumQ_memory_ADDRA,
	       main_nn_pes_4_partialSumQ_memory_ADDRB;
  wire main_nn_pes_4_partialSumQ_memory_ENA,
       main_nn_pes_4_partialSumQ_memory_ENB,
       main_nn_pes_4_partialSumQ_memory_WEA,
       main_nn_pes_4_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_4_weightInQ
  wire [31 : 0] main_nn_pes_4_weightInQ_D_IN, main_nn_pes_4_weightInQ_D_OUT;
  wire main_nn_pes_4_weightInQ_CLR,
       main_nn_pes_4_weightInQ_DEQ,
       main_nn_pes_4_weightInQ_EMPTY_N,
       main_nn_pes_4_weightInQ_ENQ,
       main_nn_pes_4_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_4_weightQ
  wire [31 : 0] main_nn_pes_4_weightQ_D_IN, main_nn_pes_4_weightQ_D_OUT;
  wire main_nn_pes_4_weightQ_CLR,
       main_nn_pes_4_weightQ_DEQ,
       main_nn_pes_4_weightQ_EMPTY_N,
       main_nn_pes_4_weightQ_ENQ,
       main_nn_pes_4_weightQ_FULL_N;

  // ports of submodule main_nn_pes_5_addForwardQ
  wire [31 : 0] main_nn_pes_5_addForwardQ_D_IN,
		main_nn_pes_5_addForwardQ_D_OUT;
  wire main_nn_pes_5_addForwardQ_CLR,
       main_nn_pes_5_addForwardQ_DEQ,
       main_nn_pes_5_addForwardQ_EMPTY_N,
       main_nn_pes_5_addForwardQ_ENQ,
       main_nn_pes_5_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_calcQ
  wire [54 : 0] main_nn_pes_5_fadd_calcQ_D_IN, main_nn_pes_5_fadd_calcQ_D_OUT;
  wire main_nn_pes_5_fadd_calcQ_CLR,
       main_nn_pes_5_fadd_calcQ_DEQ,
       main_nn_pes_5_fadd_calcQ_EMPTY_N,
       main_nn_pes_5_fadd_calcQ_ENQ,
       main_nn_pes_5_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_inProcQ
  wire [62 : 0] main_nn_pes_5_fadd_inProcQ_D_IN,
		main_nn_pes_5_fadd_inProcQ_D_OUT;
  wire main_nn_pes_5_fadd_inProcQ_CLR,
       main_nn_pes_5_fadd_inProcQ_DEQ,
       main_nn_pes_5_fadd_inProcQ_EMPTY_N,
       main_nn_pes_5_fadd_inProcQ_ENQ,
       main_nn_pes_5_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_inQ
  wire [63 : 0] main_nn_pes_5_fadd_inQ_D_IN, main_nn_pes_5_fadd_inQ_D_OUT;
  wire main_nn_pes_5_fadd_inQ_CLR,
       main_nn_pes_5_fadd_inQ_DEQ,
       main_nn_pes_5_fadd_inQ_EMPTY_N,
       main_nn_pes_5_fadd_inQ_ENQ,
       main_nn_pes_5_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_5_fadd_normalizeQ_D_IN,
		main_nn_pes_5_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_5_fadd_normalizeQ_CLR,
       main_nn_pes_5_fadd_normalizeQ_DEQ,
       main_nn_pes_5_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_5_fadd_normalizeQ_ENQ,
       main_nn_pes_5_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_5_fadd_normalizeQ1_D_IN,
		main_nn_pes_5_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_5_fadd_normalizeQ1_CLR,
       main_nn_pes_5_fadd_normalizeQ1_DEQ,
       main_nn_pes_5_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_5_fadd_normalizeQ1_ENQ,
       main_nn_pes_5_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_5_fadd_normalizeQ2_D_IN,
		main_nn_pes_5_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_5_fadd_normalizeQ2_CLR,
       main_nn_pes_5_fadd_normalizeQ2_DEQ,
       main_nn_pes_5_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_5_fadd_normalizeQ2_ENQ,
       main_nn_pes_5_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_5_fadd_normalizeQ3_D_IN,
		main_nn_pes_5_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_5_fadd_normalizeQ3_CLR,
       main_nn_pes_5_fadd_normalizeQ3_DEQ,
       main_nn_pes_5_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_5_fadd_normalizeQ3_ENQ,
       main_nn_pes_5_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_5_fadd_normalizeQ4_D_IN,
		main_nn_pes_5_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_5_fadd_normalizeQ4_CLR,
       main_nn_pes_5_fadd_normalizeQ4_DEQ,
       main_nn_pes_5_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_5_fadd_normalizeQ4_ENQ,
       main_nn_pes_5_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_5_fadd_outQ
  wire [31 : 0] main_nn_pes_5_fadd_outQ_D_IN, main_nn_pes_5_fadd_outQ_D_OUT;
  wire main_nn_pes_5_fadd_outQ_CLR,
       main_nn_pes_5_fadd_outQ_DEQ,
       main_nn_pes_5_fadd_outQ_EMPTY_N,
       main_nn_pes_5_fadd_outQ_ENQ,
       main_nn_pes_5_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_5_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_5_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_5_fmult_mult18_multin_dataax,
		main_nn_pes_5_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_5_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_5_fmult_mult18_outQ_D_IN,
		main_nn_pes_5_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_5_fmult_mult18_outQ_CLR,
       main_nn_pes_5_fmult_mult18_outQ_DEQ,
       main_nn_pes_5_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_5_fmult_mult18_outQ_ENQ,
       main_nn_pes_5_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_5_fmult_outQ
  wire [31 : 0] main_nn_pes_5_fmult_outQ_D_IN, main_nn_pes_5_fmult_outQ_D_OUT;
  wire main_nn_pes_5_fmult_outQ_CLR,
       main_nn_pes_5_fmult_outQ_DEQ,
       main_nn_pes_5_fmult_outQ_EMPTY_N,
       main_nn_pes_5_fmult_outQ_ENQ,
       main_nn_pes_5_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_5_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_5_fmult_signExpZeroQ_D_IN,
		main_nn_pes_5_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_5_fmult_signExpZeroQ_CLR,
       main_nn_pes_5_fmult_signExpZeroQ_DEQ,
       main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_5_fmult_signExpZeroQ_ENQ,
       main_nn_pes_5_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_5_inputQ
  wire [39 : 0] main_nn_pes_5_inputQ_D_IN, main_nn_pes_5_inputQ_D_OUT;
  wire main_nn_pes_5_inputQ_CLR,
       main_nn_pes_5_inputQ_DEQ,
       main_nn_pes_5_inputQ_EMPTY_N,
       main_nn_pes_5_inputQ_ENQ,
       main_nn_pes_5_inputQ_FULL_N;

  // ports of submodule main_nn_pes_5_outputQ
  wire [47 : 0] main_nn_pes_5_outputQ_D_IN, main_nn_pes_5_outputQ_D_OUT;
  wire main_nn_pes_5_outputQ_CLR,
       main_nn_pes_5_outputQ_DEQ,
       main_nn_pes_5_outputQ_EMPTY_N,
       main_nn_pes_5_outputQ_ENQ,
       main_nn_pes_5_outputQ_FULL_N;

  // ports of submodule main_nn_pes_5_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_5_partialSumIdxQ1_D_IN,
		main_nn_pes_5_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_5_partialSumIdxQ1_CLR,
       main_nn_pes_5_partialSumIdxQ1_DEQ,
       main_nn_pes_5_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_5_partialSumIdxQ1_ENQ,
       main_nn_pes_5_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_5_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_5_partialSumIdxQ2_memory_DIA,
		main_nn_pes_5_partialSumIdxQ2_memory_DIB,
		main_nn_pes_5_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_5_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_5_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_5_partialSumIdxQ2_memory_ENA,
       main_nn_pes_5_partialSumIdxQ2_memory_ENB,
       main_nn_pes_5_partialSumIdxQ2_memory_WEA,
       main_nn_pes_5_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_5_partialSumQ2
  wire [31 : 0] main_nn_pes_5_partialSumQ2_D_IN,
		main_nn_pes_5_partialSumQ2_D_OUT;
  wire main_nn_pes_5_partialSumQ2_CLR,
       main_nn_pes_5_partialSumQ2_DEQ,
       main_nn_pes_5_partialSumQ2_EMPTY_N,
       main_nn_pes_5_partialSumQ2_ENQ,
       main_nn_pes_5_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_5_partialSumQ_memory
  wire [31 : 0] main_nn_pes_5_partialSumQ_memory_DIA,
		main_nn_pes_5_partialSumQ_memory_DIB,
		main_nn_pes_5_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_5_partialSumQ_memory_ADDRA,
	       main_nn_pes_5_partialSumQ_memory_ADDRB;
  wire main_nn_pes_5_partialSumQ_memory_ENA,
       main_nn_pes_5_partialSumQ_memory_ENB,
       main_nn_pes_5_partialSumQ_memory_WEA,
       main_nn_pes_5_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_5_weightInQ
  wire [31 : 0] main_nn_pes_5_weightInQ_D_IN, main_nn_pes_5_weightInQ_D_OUT;
  wire main_nn_pes_5_weightInQ_CLR,
       main_nn_pes_5_weightInQ_DEQ,
       main_nn_pes_5_weightInQ_EMPTY_N,
       main_nn_pes_5_weightInQ_ENQ,
       main_nn_pes_5_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_5_weightQ
  wire [31 : 0] main_nn_pes_5_weightQ_D_IN, main_nn_pes_5_weightQ_D_OUT;
  wire main_nn_pes_5_weightQ_CLR,
       main_nn_pes_5_weightQ_DEQ,
       main_nn_pes_5_weightQ_EMPTY_N,
       main_nn_pes_5_weightQ_ENQ,
       main_nn_pes_5_weightQ_FULL_N;

  // ports of submodule main_nn_pes_6_addForwardQ
  wire [31 : 0] main_nn_pes_6_addForwardQ_D_IN,
		main_nn_pes_6_addForwardQ_D_OUT;
  wire main_nn_pes_6_addForwardQ_CLR,
       main_nn_pes_6_addForwardQ_DEQ,
       main_nn_pes_6_addForwardQ_EMPTY_N,
       main_nn_pes_6_addForwardQ_ENQ,
       main_nn_pes_6_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_calcQ
  wire [54 : 0] main_nn_pes_6_fadd_calcQ_D_IN, main_nn_pes_6_fadd_calcQ_D_OUT;
  wire main_nn_pes_6_fadd_calcQ_CLR,
       main_nn_pes_6_fadd_calcQ_DEQ,
       main_nn_pes_6_fadd_calcQ_EMPTY_N,
       main_nn_pes_6_fadd_calcQ_ENQ,
       main_nn_pes_6_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_inProcQ
  wire [62 : 0] main_nn_pes_6_fadd_inProcQ_D_IN,
		main_nn_pes_6_fadd_inProcQ_D_OUT;
  wire main_nn_pes_6_fadd_inProcQ_CLR,
       main_nn_pes_6_fadd_inProcQ_DEQ,
       main_nn_pes_6_fadd_inProcQ_EMPTY_N,
       main_nn_pes_6_fadd_inProcQ_ENQ,
       main_nn_pes_6_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_inQ
  wire [63 : 0] main_nn_pes_6_fadd_inQ_D_IN, main_nn_pes_6_fadd_inQ_D_OUT;
  wire main_nn_pes_6_fadd_inQ_CLR,
       main_nn_pes_6_fadd_inQ_DEQ,
       main_nn_pes_6_fadd_inQ_EMPTY_N,
       main_nn_pes_6_fadd_inQ_ENQ,
       main_nn_pes_6_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_6_fadd_normalizeQ_D_IN,
		main_nn_pes_6_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_6_fadd_normalizeQ_CLR,
       main_nn_pes_6_fadd_normalizeQ_DEQ,
       main_nn_pes_6_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_6_fadd_normalizeQ_ENQ,
       main_nn_pes_6_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_6_fadd_normalizeQ1_D_IN,
		main_nn_pes_6_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_6_fadd_normalizeQ1_CLR,
       main_nn_pes_6_fadd_normalizeQ1_DEQ,
       main_nn_pes_6_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_6_fadd_normalizeQ1_ENQ,
       main_nn_pes_6_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_6_fadd_normalizeQ2_D_IN,
		main_nn_pes_6_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_6_fadd_normalizeQ2_CLR,
       main_nn_pes_6_fadd_normalizeQ2_DEQ,
       main_nn_pes_6_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_6_fadd_normalizeQ2_ENQ,
       main_nn_pes_6_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_6_fadd_normalizeQ3_D_IN,
		main_nn_pes_6_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_6_fadd_normalizeQ3_CLR,
       main_nn_pes_6_fadd_normalizeQ3_DEQ,
       main_nn_pes_6_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_6_fadd_normalizeQ3_ENQ,
       main_nn_pes_6_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_6_fadd_normalizeQ4_D_IN,
		main_nn_pes_6_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_6_fadd_normalizeQ4_CLR,
       main_nn_pes_6_fadd_normalizeQ4_DEQ,
       main_nn_pes_6_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_6_fadd_normalizeQ4_ENQ,
       main_nn_pes_6_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_6_fadd_outQ
  wire [31 : 0] main_nn_pes_6_fadd_outQ_D_IN, main_nn_pes_6_fadd_outQ_D_OUT;
  wire main_nn_pes_6_fadd_outQ_CLR,
       main_nn_pes_6_fadd_outQ_DEQ,
       main_nn_pes_6_fadd_outQ_EMPTY_N,
       main_nn_pes_6_fadd_outQ_ENQ,
       main_nn_pes_6_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_6_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_6_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_6_fmult_mult18_multin_dataax,
		main_nn_pes_6_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_6_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_6_fmult_mult18_outQ_D_IN,
		main_nn_pes_6_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_6_fmult_mult18_outQ_CLR,
       main_nn_pes_6_fmult_mult18_outQ_DEQ,
       main_nn_pes_6_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_6_fmult_mult18_outQ_ENQ,
       main_nn_pes_6_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_6_fmult_outQ
  wire [31 : 0] main_nn_pes_6_fmult_outQ_D_IN, main_nn_pes_6_fmult_outQ_D_OUT;
  wire main_nn_pes_6_fmult_outQ_CLR,
       main_nn_pes_6_fmult_outQ_DEQ,
       main_nn_pes_6_fmult_outQ_EMPTY_N,
       main_nn_pes_6_fmult_outQ_ENQ,
       main_nn_pes_6_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_6_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_6_fmult_signExpZeroQ_D_IN,
		main_nn_pes_6_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_6_fmult_signExpZeroQ_CLR,
       main_nn_pes_6_fmult_signExpZeroQ_DEQ,
       main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_6_fmult_signExpZeroQ_ENQ,
       main_nn_pes_6_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_6_inputQ
  wire [39 : 0] main_nn_pes_6_inputQ_D_IN, main_nn_pes_6_inputQ_D_OUT;
  wire main_nn_pes_6_inputQ_CLR,
       main_nn_pes_6_inputQ_DEQ,
       main_nn_pes_6_inputQ_EMPTY_N,
       main_nn_pes_6_inputQ_ENQ,
       main_nn_pes_6_inputQ_FULL_N;

  // ports of submodule main_nn_pes_6_outputQ
  wire [47 : 0] main_nn_pes_6_outputQ_D_IN, main_nn_pes_6_outputQ_D_OUT;
  wire main_nn_pes_6_outputQ_CLR,
       main_nn_pes_6_outputQ_DEQ,
       main_nn_pes_6_outputQ_EMPTY_N,
       main_nn_pes_6_outputQ_ENQ,
       main_nn_pes_6_outputQ_FULL_N;

  // ports of submodule main_nn_pes_6_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_6_partialSumIdxQ1_D_IN,
		main_nn_pes_6_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_6_partialSumIdxQ1_CLR,
       main_nn_pes_6_partialSumIdxQ1_DEQ,
       main_nn_pes_6_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_6_partialSumIdxQ1_ENQ,
       main_nn_pes_6_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_6_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_6_partialSumIdxQ2_memory_DIA,
		main_nn_pes_6_partialSumIdxQ2_memory_DIB,
		main_nn_pes_6_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_6_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_6_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_6_partialSumIdxQ2_memory_ENA,
       main_nn_pes_6_partialSumIdxQ2_memory_ENB,
       main_nn_pes_6_partialSumIdxQ2_memory_WEA,
       main_nn_pes_6_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_6_partialSumQ2
  wire [31 : 0] main_nn_pes_6_partialSumQ2_D_IN,
		main_nn_pes_6_partialSumQ2_D_OUT;
  wire main_nn_pes_6_partialSumQ2_CLR,
       main_nn_pes_6_partialSumQ2_DEQ,
       main_nn_pes_6_partialSumQ2_EMPTY_N,
       main_nn_pes_6_partialSumQ2_ENQ,
       main_nn_pes_6_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_6_partialSumQ_memory
  wire [31 : 0] main_nn_pes_6_partialSumQ_memory_DIA,
		main_nn_pes_6_partialSumQ_memory_DIB,
		main_nn_pes_6_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_6_partialSumQ_memory_ADDRA,
	       main_nn_pes_6_partialSumQ_memory_ADDRB;
  wire main_nn_pes_6_partialSumQ_memory_ENA,
       main_nn_pes_6_partialSumQ_memory_ENB,
       main_nn_pes_6_partialSumQ_memory_WEA,
       main_nn_pes_6_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_6_weightInQ
  wire [31 : 0] main_nn_pes_6_weightInQ_D_IN, main_nn_pes_6_weightInQ_D_OUT;
  wire main_nn_pes_6_weightInQ_CLR,
       main_nn_pes_6_weightInQ_DEQ,
       main_nn_pes_6_weightInQ_EMPTY_N,
       main_nn_pes_6_weightInQ_ENQ,
       main_nn_pes_6_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_6_weightQ
  wire [31 : 0] main_nn_pes_6_weightQ_D_IN, main_nn_pes_6_weightQ_D_OUT;
  wire main_nn_pes_6_weightQ_CLR,
       main_nn_pes_6_weightQ_DEQ,
       main_nn_pes_6_weightQ_EMPTY_N,
       main_nn_pes_6_weightQ_ENQ,
       main_nn_pes_6_weightQ_FULL_N;

  // ports of submodule main_nn_pes_7_addForwardQ
  wire [31 : 0] main_nn_pes_7_addForwardQ_D_IN,
		main_nn_pes_7_addForwardQ_D_OUT;
  wire main_nn_pes_7_addForwardQ_CLR,
       main_nn_pes_7_addForwardQ_DEQ,
       main_nn_pes_7_addForwardQ_EMPTY_N,
       main_nn_pes_7_addForwardQ_ENQ,
       main_nn_pes_7_addForwardQ_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_calcQ
  wire [54 : 0] main_nn_pes_7_fadd_calcQ_D_IN, main_nn_pes_7_fadd_calcQ_D_OUT;
  wire main_nn_pes_7_fadd_calcQ_CLR,
       main_nn_pes_7_fadd_calcQ_DEQ,
       main_nn_pes_7_fadd_calcQ_EMPTY_N,
       main_nn_pes_7_fadd_calcQ_ENQ,
       main_nn_pes_7_fadd_calcQ_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_inProcQ
  wire [62 : 0] main_nn_pes_7_fadd_inProcQ_D_IN,
		main_nn_pes_7_fadd_inProcQ_D_OUT;
  wire main_nn_pes_7_fadd_inProcQ_CLR,
       main_nn_pes_7_fadd_inProcQ_DEQ,
       main_nn_pes_7_fadd_inProcQ_EMPTY_N,
       main_nn_pes_7_fadd_inProcQ_ENQ,
       main_nn_pes_7_fadd_inProcQ_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_inQ
  wire [63 : 0] main_nn_pes_7_fadd_inQ_D_IN, main_nn_pes_7_fadd_inQ_D_OUT;
  wire main_nn_pes_7_fadd_inQ_CLR,
       main_nn_pes_7_fadd_inQ_DEQ,
       main_nn_pes_7_fadd_inQ_EMPTY_N,
       main_nn_pes_7_fadd_inQ_ENQ,
       main_nn_pes_7_fadd_inQ_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_normalizeQ
  wire [27 : 0] main_nn_pes_7_fadd_normalizeQ_D_IN,
		main_nn_pes_7_fadd_normalizeQ_D_OUT;
  wire main_nn_pes_7_fadd_normalizeQ_CLR,
       main_nn_pes_7_fadd_normalizeQ_DEQ,
       main_nn_pes_7_fadd_normalizeQ_EMPTY_N,
       main_nn_pes_7_fadd_normalizeQ_ENQ,
       main_nn_pes_7_fadd_normalizeQ_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_normalizeQ1
  wire [27 : 0] main_nn_pes_7_fadd_normalizeQ1_D_IN,
		main_nn_pes_7_fadd_normalizeQ1_D_OUT;
  wire main_nn_pes_7_fadd_normalizeQ1_CLR,
       main_nn_pes_7_fadd_normalizeQ1_DEQ,
       main_nn_pes_7_fadd_normalizeQ1_EMPTY_N,
       main_nn_pes_7_fadd_normalizeQ1_ENQ,
       main_nn_pes_7_fadd_normalizeQ1_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_normalizeQ2
  wire [27 : 0] main_nn_pes_7_fadd_normalizeQ2_D_IN,
		main_nn_pes_7_fadd_normalizeQ2_D_OUT;
  wire main_nn_pes_7_fadd_normalizeQ2_CLR,
       main_nn_pes_7_fadd_normalizeQ2_DEQ,
       main_nn_pes_7_fadd_normalizeQ2_EMPTY_N,
       main_nn_pes_7_fadd_normalizeQ2_ENQ,
       main_nn_pes_7_fadd_normalizeQ2_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_normalizeQ3
  wire [27 : 0] main_nn_pes_7_fadd_normalizeQ3_D_IN,
		main_nn_pes_7_fadd_normalizeQ3_D_OUT;
  wire main_nn_pes_7_fadd_normalizeQ3_CLR,
       main_nn_pes_7_fadd_normalizeQ3_DEQ,
       main_nn_pes_7_fadd_normalizeQ3_EMPTY_N,
       main_nn_pes_7_fadd_normalizeQ3_ENQ,
       main_nn_pes_7_fadd_normalizeQ3_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_normalizeQ4
  wire [27 : 0] main_nn_pes_7_fadd_normalizeQ4_D_IN,
		main_nn_pes_7_fadd_normalizeQ4_D_OUT;
  wire main_nn_pes_7_fadd_normalizeQ4_CLR,
       main_nn_pes_7_fadd_normalizeQ4_DEQ,
       main_nn_pes_7_fadd_normalizeQ4_EMPTY_N,
       main_nn_pes_7_fadd_normalizeQ4_ENQ,
       main_nn_pes_7_fadd_normalizeQ4_FULL_N;

  // ports of submodule main_nn_pes_7_fadd_outQ
  wire [31 : 0] main_nn_pes_7_fadd_outQ_D_IN, main_nn_pes_7_fadd_outQ_D_OUT;
  wire main_nn_pes_7_fadd_outQ_CLR,
       main_nn_pes_7_fadd_outQ_DEQ,
       main_nn_pes_7_fadd_outQ_EMPTY_N,
       main_nn_pes_7_fadd_outQ_ENQ,
       main_nn_pes_7_fadd_outQ_FULL_N;

  // ports of submodule main_nn_pes_7_fmult_mult18_multin
  wire [35 : 0] main_nn_pes_7_fmult_mult18_multin_dataout;
  wire [17 : 0] main_nn_pes_7_fmult_mult18_multin_dataax,
		main_nn_pes_7_fmult_mult18_multin_dataay;

  // ports of submodule main_nn_pes_7_fmult_mult18_outQ
  wire [35 : 0] main_nn_pes_7_fmult_mult18_outQ_D_IN,
		main_nn_pes_7_fmult_mult18_outQ_D_OUT;
  wire main_nn_pes_7_fmult_mult18_outQ_CLR,
       main_nn_pes_7_fmult_mult18_outQ_DEQ,
       main_nn_pes_7_fmult_mult18_outQ_EMPTY_N,
       main_nn_pes_7_fmult_mult18_outQ_ENQ,
       main_nn_pes_7_fmult_mult18_outQ_FULL_N;

  // ports of submodule main_nn_pes_7_fmult_outQ
  wire [31 : 0] main_nn_pes_7_fmult_outQ_D_IN, main_nn_pes_7_fmult_outQ_D_OUT;
  wire main_nn_pes_7_fmult_outQ_CLR,
       main_nn_pes_7_fmult_outQ_DEQ,
       main_nn_pes_7_fmult_outQ_EMPTY_N,
       main_nn_pes_7_fmult_outQ_ENQ,
       main_nn_pes_7_fmult_outQ_FULL_N;

  // ports of submodule main_nn_pes_7_fmult_signExpZeroQ
  wire [10 : 0] main_nn_pes_7_fmult_signExpZeroQ_D_IN,
		main_nn_pes_7_fmult_signExpZeroQ_D_OUT;
  wire main_nn_pes_7_fmult_signExpZeroQ_CLR,
       main_nn_pes_7_fmult_signExpZeroQ_DEQ,
       main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N,
       main_nn_pes_7_fmult_signExpZeroQ_ENQ,
       main_nn_pes_7_fmult_signExpZeroQ_FULL_N;

  // ports of submodule main_nn_pes_7_inputQ
  wire [39 : 0] main_nn_pes_7_inputQ_D_IN, main_nn_pes_7_inputQ_D_OUT;
  wire main_nn_pes_7_inputQ_CLR,
       main_nn_pes_7_inputQ_DEQ,
       main_nn_pes_7_inputQ_EMPTY_N,
       main_nn_pes_7_inputQ_ENQ,
       main_nn_pes_7_inputQ_FULL_N;

  // ports of submodule main_nn_pes_7_outputQ
  wire [47 : 0] main_nn_pes_7_outputQ_D_IN, main_nn_pes_7_outputQ_D_OUT;
  wire main_nn_pes_7_outputQ_CLR,
       main_nn_pes_7_outputQ_DEQ,
       main_nn_pes_7_outputQ_EMPTY_N,
       main_nn_pes_7_outputQ_ENQ,
       main_nn_pes_7_outputQ_FULL_N;

  // ports of submodule main_nn_pes_7_partialSumIdxQ1
  wire [31 : 0] main_nn_pes_7_partialSumIdxQ1_D_IN,
		main_nn_pes_7_partialSumIdxQ1_D_OUT;
  wire main_nn_pes_7_partialSumIdxQ1_CLR,
       main_nn_pes_7_partialSumIdxQ1_DEQ,
       main_nn_pes_7_partialSumIdxQ1_EMPTY_N,
       main_nn_pes_7_partialSumIdxQ1_ENQ,
       main_nn_pes_7_partialSumIdxQ1_FULL_N;

  // ports of submodule main_nn_pes_7_partialSumIdxQ2_memory
  wire [31 : 0] main_nn_pes_7_partialSumIdxQ2_memory_DIA,
		main_nn_pes_7_partialSumIdxQ2_memory_DIB,
		main_nn_pes_7_partialSumIdxQ2_memory_DOB;
  wire [6 : 0] main_nn_pes_7_partialSumIdxQ2_memory_ADDRA,
	       main_nn_pes_7_partialSumIdxQ2_memory_ADDRB;
  wire main_nn_pes_7_partialSumIdxQ2_memory_ENA,
       main_nn_pes_7_partialSumIdxQ2_memory_ENB,
       main_nn_pes_7_partialSumIdxQ2_memory_WEA,
       main_nn_pes_7_partialSumIdxQ2_memory_WEB;

  // ports of submodule main_nn_pes_7_partialSumQ2
  wire [31 : 0] main_nn_pes_7_partialSumQ2_D_IN,
		main_nn_pes_7_partialSumQ2_D_OUT;
  wire main_nn_pes_7_partialSumQ2_CLR,
       main_nn_pes_7_partialSumQ2_DEQ,
       main_nn_pes_7_partialSumQ2_EMPTY_N,
       main_nn_pes_7_partialSumQ2_ENQ,
       main_nn_pes_7_partialSumQ2_FULL_N;

  // ports of submodule main_nn_pes_7_partialSumQ_memory
  wire [31 : 0] main_nn_pes_7_partialSumQ_memory_DIA,
		main_nn_pes_7_partialSumQ_memory_DIB,
		main_nn_pes_7_partialSumQ_memory_DOB;
  wire [6 : 0] main_nn_pes_7_partialSumQ_memory_ADDRA,
	       main_nn_pes_7_partialSumQ_memory_ADDRB;
  wire main_nn_pes_7_partialSumQ_memory_ENA,
       main_nn_pes_7_partialSumQ_memory_ENB,
       main_nn_pes_7_partialSumQ_memory_WEA,
       main_nn_pes_7_partialSumQ_memory_WEB;

  // ports of submodule main_nn_pes_7_weightInQ
  wire [31 : 0] main_nn_pes_7_weightInQ_D_IN, main_nn_pes_7_weightInQ_D_OUT;
  wire main_nn_pes_7_weightInQ_CLR,
       main_nn_pes_7_weightInQ_DEQ,
       main_nn_pes_7_weightInQ_EMPTY_N,
       main_nn_pes_7_weightInQ_ENQ,
       main_nn_pes_7_weightInQ_FULL_N;

  // ports of submodule main_nn_pes_7_weightQ
  wire [31 : 0] main_nn_pes_7_weightQ_D_IN, main_nn_pes_7_weightQ_D_OUT;
  wire main_nn_pes_7_weightQ_CLR,
       main_nn_pes_7_weightQ_DEQ,
       main_nn_pes_7_weightQ_EMPTY_N,
       main_nn_pes_7_weightQ_ENQ,
       main_nn_pes_7_weightQ_FULL_N;

  // ports of submodule main_nn_resultOutQs_0
  wire [47 : 0] main_nn_resultOutQs_0_D_IN, main_nn_resultOutQs_0_D_OUT;
  wire main_nn_resultOutQs_0_CLR,
       main_nn_resultOutQs_0_DEQ,
       main_nn_resultOutQs_0_EMPTY_N,
       main_nn_resultOutQs_0_ENQ,
       main_nn_resultOutQs_0_FULL_N;

  // ports of submodule main_nn_resultOutQs_1
  wire [47 : 0] main_nn_resultOutQs_1_D_IN, main_nn_resultOutQs_1_D_OUT;
  wire main_nn_resultOutQs_1_CLR,
       main_nn_resultOutQs_1_DEQ,
       main_nn_resultOutQs_1_EMPTY_N,
       main_nn_resultOutQs_1_ENQ,
       main_nn_resultOutQs_1_FULL_N;

  // ports of submodule main_nn_resultOutQs_2
  wire [47 : 0] main_nn_resultOutQs_2_D_IN, main_nn_resultOutQs_2_D_OUT;
  wire main_nn_resultOutQs_2_CLR,
       main_nn_resultOutQs_2_DEQ,
       main_nn_resultOutQs_2_EMPTY_N,
       main_nn_resultOutQs_2_ENQ,
       main_nn_resultOutQs_2_FULL_N;

  // ports of submodule main_nn_resultOutQs_3
  wire [47 : 0] main_nn_resultOutQs_3_D_IN, main_nn_resultOutQs_3_D_OUT;
  wire main_nn_resultOutQs_3_CLR,
       main_nn_resultOutQs_3_DEQ,
       main_nn_resultOutQs_3_EMPTY_N,
       main_nn_resultOutQs_3_ENQ,
       main_nn_resultOutQs_3_FULL_N;

  // ports of submodule main_nn_resultOutQs_4
  wire [47 : 0] main_nn_resultOutQs_4_D_IN, main_nn_resultOutQs_4_D_OUT;
  wire main_nn_resultOutQs_4_CLR,
       main_nn_resultOutQs_4_DEQ,
       main_nn_resultOutQs_4_EMPTY_N,
       main_nn_resultOutQs_4_ENQ,
       main_nn_resultOutQs_4_FULL_N;

  // ports of submodule main_nn_resultOutQs_5
  wire [47 : 0] main_nn_resultOutQs_5_D_IN, main_nn_resultOutQs_5_D_OUT;
  wire main_nn_resultOutQs_5_CLR,
       main_nn_resultOutQs_5_DEQ,
       main_nn_resultOutQs_5_EMPTY_N,
       main_nn_resultOutQs_5_ENQ,
       main_nn_resultOutQs_5_FULL_N;

  // ports of submodule main_nn_resultOutQs_6
  wire [47 : 0] main_nn_resultOutQs_6_D_IN, main_nn_resultOutQs_6_D_OUT;
  wire main_nn_resultOutQs_6_CLR,
       main_nn_resultOutQs_6_DEQ,
       main_nn_resultOutQs_6_EMPTY_N,
       main_nn_resultOutQs_6_ENQ,
       main_nn_resultOutQs_6_FULL_N;

  // ports of submodule main_nn_resultOutQs_7
  wire [47 : 0] main_nn_resultOutQs_7_D_IN, main_nn_resultOutQs_7_D_OUT;
  wire main_nn_resultOutQs_7_CLR,
       main_nn_resultOutQs_7_DEQ,
       main_nn_resultOutQs_7_EMPTY_N,
       main_nn_resultOutQs_7_ENQ,
       main_nn_resultOutQs_7_FULL_N;

  // ports of submodule main_nn_testQ
  wire [31 : 0] main_nn_testQ_D_IN;
  wire main_nn_testQ_CLR, main_nn_testQ_DEQ, main_nn_testQ_ENQ;

  // ports of submodule main_nn_weightInQs_0
  wire [31 : 0] main_nn_weightInQs_0_D_IN, main_nn_weightInQs_0_D_OUT;
  wire main_nn_weightInQs_0_CLR,
       main_nn_weightInQs_0_DEQ,
       main_nn_weightInQs_0_EMPTY_N,
       main_nn_weightInQs_0_ENQ,
       main_nn_weightInQs_0_FULL_N;

  // ports of submodule main_nn_weightInQs_1
  wire [31 : 0] main_nn_weightInQs_1_D_IN, main_nn_weightInQs_1_D_OUT;
  wire main_nn_weightInQs_1_CLR,
       main_nn_weightInQs_1_DEQ,
       main_nn_weightInQs_1_EMPTY_N,
       main_nn_weightInQs_1_ENQ,
       main_nn_weightInQs_1_FULL_N;

  // ports of submodule main_nn_weightInQs_2
  wire [31 : 0] main_nn_weightInQs_2_D_IN, main_nn_weightInQs_2_D_OUT;
  wire main_nn_weightInQs_2_CLR,
       main_nn_weightInQs_2_DEQ,
       main_nn_weightInQs_2_EMPTY_N,
       main_nn_weightInQs_2_ENQ,
       main_nn_weightInQs_2_FULL_N;

  // ports of submodule main_nn_weightInQs_3
  wire [31 : 0] main_nn_weightInQs_3_D_IN, main_nn_weightInQs_3_D_OUT;
  wire main_nn_weightInQs_3_CLR,
       main_nn_weightInQs_3_DEQ,
       main_nn_weightInQs_3_EMPTY_N,
       main_nn_weightInQs_3_ENQ,
       main_nn_weightInQs_3_FULL_N;

  // ports of submodule main_nn_weightInQs_4
  wire [31 : 0] main_nn_weightInQs_4_D_IN, main_nn_weightInQs_4_D_OUT;
  wire main_nn_weightInQs_4_CLR,
       main_nn_weightInQs_4_DEQ,
       main_nn_weightInQs_4_EMPTY_N,
       main_nn_weightInQs_4_ENQ,
       main_nn_weightInQs_4_FULL_N;

  // ports of submodule main_nn_weightInQs_5
  wire [31 : 0] main_nn_weightInQs_5_D_IN, main_nn_weightInQs_5_D_OUT;
  wire main_nn_weightInQs_5_CLR,
       main_nn_weightInQs_5_DEQ,
       main_nn_weightInQs_5_EMPTY_N,
       main_nn_weightInQs_5_ENQ,
       main_nn_weightInQs_5_FULL_N;

  // ports of submodule main_nn_weightInQs_6
  wire [31 : 0] main_nn_weightInQs_6_D_IN, main_nn_weightInQs_6_D_OUT;
  wire main_nn_weightInQs_6_CLR,
       main_nn_weightInQs_6_DEQ,
       main_nn_weightInQs_6_EMPTY_N,
       main_nn_weightInQs_6_ENQ,
       main_nn_weightInQs_6_FULL_N;

  // ports of submodule main_nn_weightInQs_7
  wire [31 : 0] main_nn_weightInQs_7_D_IN, main_nn_weightInQs_7_D_OUT;
  wire main_nn_weightInQs_7_CLR,
       main_nn_weightInQs_7_DEQ,
       main_nn_weightInQs_7_EMPTY_N,
       main_nn_weightInQs_7_ENQ,
       main_nn_weightInQs_7_FULL_N;

  // ports of submodule main_serialrxQ
  wire [7 : 0] main_serialrxQ_D_IN, main_serialrxQ_D_OUT;
  wire main_serialrxQ_CLR,
       main_serialrxQ_DEQ,
       main_serialrxQ_EMPTY_N,
       main_serialrxQ_ENQ,
       main_serialrxQ_FULL_N;

  // ports of submodule main_serialtxQ
  wire [7 : 0] main_serialtxQ_D_IN, main_serialtxQ_D_OUT;
  wire main_serialtxQ_CLR,
       main_serialtxQ_DEQ,
       main_serialtxQ_EMPTY_N,
       main_serialtxQ_ENQ,
       main_serialtxQ_FULL_N;

  // ports of submodule mem_readRespQ
  wire [15 : 0] mem_readRespQ_D_IN, mem_readRespQ_D_OUT;
  wire mem_readRespQ_CLR,
       mem_readRespQ_DEQ,
       mem_readRespQ_EMPTY_N,
       mem_readRespQ_ENQ,
       mem_readRespQ_FULL_N;

  // ports of submodule mem_reqQ
  wire [40 : 0] mem_reqQ_D_IN, mem_reqQ_D_OUT;
  wire mem_reqQ_CLR,
       mem_reqQ_DEQ,
       mem_reqQ_EMPTY_N,
       mem_reqQ_ENQ,
       mem_reqQ_FULL_N;

  // ports of submodule mem_xx_inout16_XX
  wire [15 : 0] sdram_d,
		mem_xx_inout16_XX_read_data,
		mem_xx_inout16_XX_write_data;
  wire mem_xx_inout16_XX_write_req;

  // ports of submodule pll
  wire pll_clk_100mhz, pll_lockedn;

  // ports of submodule serialToMainQ
  wire [7 : 0] serialToMainQ_dD_OUT, serialToMainQ_sD_IN;
  wire serialToMainQ_dDEQ,
       serialToMainQ_dEMPTY_N,
       serialToMainQ_sENQ,
       serialToMainQ_sFULL_N;

  // ports of submodule uart_inQ
  wire [7 : 0] uart_inQ_D_IN, uart_inQ_D_OUT;
  wire uart_inQ_CLR,
       uart_inQ_DEQ,
       uart_inQ_EMPTY_N,
       uart_inQ_ENQ,
       uart_inQ_FULL_N;

  // ports of submodule uart_outQ
  wire [7 : 0] uart_outQ_D_IN, uart_outQ_D_OUT;
  wire uart_outQ_CLR,
       uart_outQ_DEQ,
       uart_outQ_EMPTY_N,
       uart_outQ_ENQ,
       uart_outQ_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_main_procMemRead,
       WILL_FIRE_RL_main_nn_forwardResult,
       WILL_FIRE_RL_main_nn_forwardResult_1,
       WILL_FIRE_RL_main_nn_forwardResult_2,
       WILL_FIRE_RL_main_nn_forwardResult_3,
       WILL_FIRE_RL_main_nn_forwardResult_4,
       WILL_FIRE_RL_main_nn_forwardResult_5,
       WILL_FIRE_RL_main_nn_forwardResult_6,
       WILL_FIRE_RL_main_nn_forwardResult_7,
       WILL_FIRE_RL_main_nn_pes_0_enqMac,
       WILL_FIRE_RL_main_nn_pes_0_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_0_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_1_enqMac,
       WILL_FIRE_RL_main_nn_pes_1_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_1_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_2_enqMac,
       WILL_FIRE_RL_main_nn_pes_2_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_2_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_3_enqMac,
       WILL_FIRE_RL_main_nn_pes_3_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_3_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_4_enqMac,
       WILL_FIRE_RL_main_nn_pes_4_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_4_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_5_enqMac,
       WILL_FIRE_RL_main_nn_pes_5_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_5_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_6_enqMac,
       WILL_FIRE_RL_main_nn_pes_6_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_6_relayWeightIn,
       WILL_FIRE_RL_main_nn_pes_7_enqMac,
       WILL_FIRE_RL_main_nn_pes_7_filterDoneResults,
       WILL_FIRE_RL_main_nn_pes_7_relayWeightIn,
       WILL_FIRE_RL_main_procMemWrite,
       WILL_FIRE_RL_main_recvInputDst,
       WILL_FIRE_RL_main_recvInputFloat,
       WILL_FIRE_RL_main_serializeOutput,
       WILL_FIRE_RL_mem_controllerFSM,
       WILL_FIRE_RL_mem_init,
       WILL_FIRE_RL_uart_insample,
       WILL_FIRE_RL_uart_outcntclk;

  // inputs to muxes for submodule ports
  reg [2 : 0] MUX_mem_state_write_1__VAL_2;
  wire [40 : 0] MUX_mem_reqQ_enq_1__VAL_1, MUX_mem_reqQ_enq_1__VAL_2;
  wire [15 : 0] MUX_mem_counter_write_1__VAL_1,
		MUX_mem_counter_write_1__VAL_2;
  wire [8 : 0] MUX_main_inputDst_write_1__VAL_2;
  wire MUX_main_inputDst_write_1__SEL_1,
       MUX_mem_reqQ_enq_1__SEL_2,
       MUX_mem_state_write_1__SEL_1;

  // remaining internal signals
  reg [12 : 0] CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1;
  wire [39 : 0] x__h72825, x__h72951;
  wire [31 : 0] nv__h72186,
		x__h13268,
		x__h13296,
		x__h13468,
		x__h17609,
		x__h22129,
		x__h22157,
		x__h22329,
		x__h25557,
		x__h30077,
		x__h30105,
		x__h30277,
		x__h33505,
		x__h38025,
		x__h38053,
		x__h38225,
		x__h41453,
		x__h45973,
		x__h46001,
		x__h46173,
		x__h49401,
		x__h53921,
		x__h53949,
		x__h54121,
		x__h57349,
		x__h61869,
		x__h61897,
		x__h62069,
		x__h65297,
		x__h69817,
		x__h69845,
		x__h70017,
		x__h72843,
		x__h8745;
  wire [23 : 0] x__h73463;
  wire [18 : 0] newfrac___1__h10365,
		newfrac___1__h10464,
		newfrac___1__h10563,
		newfrac___1__h10662,
		newfrac___1__h10756,
		newfrac___1__h19226,
		newfrac___1__h19325,
		newfrac___1__h19424,
		newfrac___1__h19523,
		newfrac___1__h19617,
		newfrac___1__h27174,
		newfrac___1__h27273,
		newfrac___1__h27372,
		newfrac___1__h27471,
		newfrac___1__h27565,
		newfrac___1__h35122,
		newfrac___1__h35221,
		newfrac___1__h35320,
		newfrac___1__h35419,
		newfrac___1__h35513,
		newfrac___1__h43070,
		newfrac___1__h43169,
		newfrac___1__h43268,
		newfrac___1__h43367,
		newfrac___1__h43461,
		newfrac___1__h51018,
		newfrac___1__h51117,
		newfrac___1__h51216,
		newfrac___1__h51315,
		newfrac___1__h51409,
		newfrac___1__h58966,
		newfrac___1__h59065,
		newfrac___1__h59164,
		newfrac___1__h59263,
		newfrac___1__h59357,
		newfrac___1__h66914,
		newfrac___1__h67013,
		newfrac___1__h67112,
		newfrac___1__h67211,
		newfrac___1__h67305,
		newfrac__h10238,
		newfrac__h10247,
		newfrac__h19099,
		newfrac__h19108,
		newfrac__h27047,
		newfrac__h27056,
		newfrac__h34995,
		newfrac__h35004,
		newfrac__h42943,
		newfrac__h42952,
		newfrac__h50891,
		newfrac__h50900,
		newfrac__h58839,
		newfrac__h58848,
		newfrac__h66787,
		newfrac__h66796,
		x__h10236,
		x__h10762,
		x__h19097,
		x__h19623,
		x__h27045,
		x__h27571,
		x__h34993,
		x__h35519,
		x__h42941,
		x__h43467,
		x__h50889,
		x__h51415,
		x__h58837,
		x__h59363,
		x__h66785,
		x__h67311;
  wire [17 : 0] _theResult___fst__h17652,
		_theResult___fst__h25600,
		_theResult___fst__h33548,
		_theResult___fst__h41496,
		_theResult___fst__h49444,
		_theResult___fst__h57392,
		_theResult___fst__h65340,
		_theResult___fst__h8788,
		fraca__h10003,
		fraca__h18584,
		fraca__h18864,
		fraca__h26532,
		fraca__h26812,
		fraca__h34480,
		fraca__h34760,
		fraca__h42428,
		fraca__h42708,
		fraca__h50376,
		fraca__h50656,
		fraca__h58324,
		fraca__h58604,
		fraca__h66272,
		fraca__h66552,
		fraca__h9720,
		fracb__h10004,
		fracb__h18585,
		fracb__h18865,
		fracb__h26533,
		fracb__h26813,
		fracb__h34481,
		fracb__h34761,
		fracb__h42429,
		fracb__h42709,
		fracb__h50377,
		fracb__h50657,
		fracb__h58325,
		fracb__h58605,
		fracb__h66273,
		fracb__h66553,
		fracb__h9721,
		x__h10257,
		x__h10274,
		x__h19118,
		x__h19135,
		x__h27066,
		x__h27083,
		x__h35014,
		x__h35031,
		x__h42962,
		x__h42979,
		x__h50910,
		x__h50927,
		x__h58858,
		x__h58875,
		x__h66806,
		x__h66823,
		x_wget__h16971,
		x_wget__h17042,
		x_wget__h24919,
		x_wget__h24990,
		x_wget__h32867,
		x_wget__h32938,
		x_wget__h40815,
		x_wget__h40886,
		x_wget__h48763,
		x_wget__h48834,
		x_wget__h56711,
		x_wget__h56782,
		x_wget__h64659,
		x_wget__h64730,
		x_wget__h8107,
		x_wget__h8178;
  wire [15 : 0] x__h2456, x__h440, x__h852;
  wire [12 : 0] IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d151,
		x__h3670,
		x__h3841,
		x__h3991;
  wire [10 : 0] x__h483, x__h607;
  wire [8 : 0] x__h13766,
	       x__h17658,
	       x__h17667,
	       x__h22627,
	       x__h25606,
	       x__h25615,
	       x__h30575,
	       x__h33554,
	       x__h33563,
	       x__h38523,
	       x__h41502,
	       x__h41511,
	       x__h46471,
	       x__h49450,
	       x__h49459,
	       x__h54419,
	       x__h57398,
	       x__h57407,
	       x__h62367,
	       x__h65346,
	       x__h65355,
	       x__h70315,
	       x__h8794,
	       x__h8803;
  wire [7 : 0] _theResult___snd__h10755,
	       _theResult___snd__h17653,
	       _theResult___snd__h19616,
	       _theResult___snd__h25601,
	       _theResult___snd__h27564,
	       _theResult___snd__h33549,
	       _theResult___snd__h35512,
	       _theResult___snd__h41497,
	       _theResult___snd__h43460,
	       _theResult___snd__h49445,
	       _theResult___snd__h51408,
	       _theResult___snd__h57393,
	       _theResult___snd__h59356,
	       _theResult___snd__h65341,
	       _theResult___snd__h67304,
	       _theResult___snd__h8789,
	       newexp___1__h10366,
	       newexp___1__h10465,
	       newexp___1__h10564,
	       newexp___1__h10663,
	       newexp___1__h10757,
	       newexp___1__h19227,
	       newexp___1__h19326,
	       newexp___1__h19425,
	       newexp___1__h19524,
	       newexp___1__h19618,
	       newexp___1__h27175,
	       newexp___1__h27274,
	       newexp___1__h27373,
	       newexp___1__h27472,
	       newexp___1__h27566,
	       newexp___1__h35123,
	       newexp___1__h35222,
	       newexp___1__h35321,
	       newexp___1__h35420,
	       newexp___1__h35514,
	       newexp___1__h43071,
	       newexp___1__h43170,
	       newexp___1__h43269,
	       newexp___1__h43368,
	       newexp___1__h43462,
	       newexp___1__h51019,
	       newexp___1__h51118,
	       newexp___1__h51217,
	       newexp___1__h51316,
	       newexp___1__h51410,
	       newexp___1__h58967,
	       newexp___1__h59066,
	       newexp___1__h59165,
	       newexp___1__h59264,
	       newexp___1__h59358,
	       newexp___1__h66915,
	       newexp___1__h67014,
	       newexp___1__h67113,
	       newexp___1__h67212,
	       newexp___1__h67306,
	       x__h10232,
	       x__h11614,
	       x__h11737,
	       x__h12716,
	       x__h12823,
	       x__h13409,
	       x__h14601,
	       x__h18753,
	       x__h19093,
	       x__h20475,
	       x__h20598,
	       x__h21577,
	       x__h21684,
	       x__h22270,
	       x__h23462,
	       x__h26701,
	       x__h27041,
	       x__h28423,
	       x__h28546,
	       x__h29525,
	       x__h29632,
	       x__h30218,
	       x__h31410,
	       x__h34649,
	       x__h34989,
	       x__h36371,
	       x__h36494,
	       x__h37473,
	       x__h37580,
	       x__h38166,
	       x__h39358,
	       x__h42597,
	       x__h42937,
	       x__h44319,
	       x__h44442,
	       x__h45421,
	       x__h45528,
	       x__h46114,
	       x__h47306,
	       x__h50545,
	       x__h50885,
	       x__h52267,
	       x__h52390,
	       x__h53369,
	       x__h53476,
	       x__h54062,
	       x__h55254,
	       x__h58493,
	       x__h58833,
	       x__h60215,
	       x__h60338,
	       x__h61317,
	       x__h61424,
	       x__h62010,
	       x__h63202,
	       x__h66441,
	       x__h66781,
	       x__h68163,
	       x__h68286,
	       x__h69265,
	       x__h69372,
	       x__h69958,
	       x__h71150,
	       x__h9889;
  wire [4 : 0] x__h591;
  wire [3 : 0] IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d137,
	       x__h2827,
	       x__h3174,
	       x__h3186,
	       x__h3730,
	       x__h983,
	       y__h3755;
  wire [2 : 0] IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d171,
	       x__h72591;
  wire [1 : 0] x__h72236;
  wire NOT_main_inputBufferCnt_424_EQ_3_425_426_OR_IF_ETC___d3436,
       NOT_main_nn_pes_0_fadd_inQ_first__58_BITS_62_T_ETC___d271,
       NOT_main_nn_pes_1_fadd_inQ_first__60_BITS_62_T_ETC___d673,
       NOT_main_nn_pes_2_fadd_inQ_first__062_BITS_62__ETC___d1075,
       NOT_main_nn_pes_3_fadd_inQ_first__464_BITS_62__ETC___d1477,
       NOT_main_nn_pes_4_fadd_inQ_first__866_BITS_62__ETC___d1879,
       NOT_main_nn_pes_5_fadd_inQ_first__268_BITS_62__ETC___d2281,
       NOT_main_nn_pes_6_fadd_inQ_first__670_BITS_62__ETC___d2683,
       NOT_main_nn_pes_7_fadd_inQ_first__072_BITS_62__ETC___d3085,
       SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133,
       main_nn_pes_0_curMacIdx_85_PLUS_1_01_SRL_6_02__ETC___d503,
       main_nn_pes_0_curMacIdx_85_ULT_64___d486,
       main_nn_pes_0_fadd_inQ_first__58_BITS_62_TO_55_ETC___d261,
       main_nn_pes_0_inputQ_i_notEmpty__80_AND_main_n_ETC___d493,
       main_nn_pes_1_curMacIdx_87_PLUS_1_03_SRL_6_04__ETC___d905,
       main_nn_pes_1_curMacIdx_87_ULT_64___d888,
       main_nn_pes_1_fadd_inQ_first__60_BITS_62_TO_55_ETC___d663,
       main_nn_pes_1_inputQ_i_notEmpty__82_AND_main_n_ETC___d895,
       main_nn_pes_2_curMacIdx_289_PLUS_1_305_SRL_6_3_ETC___d1307,
       main_nn_pes_2_curMacIdx_289_ULT_64___d1290,
       main_nn_pes_2_fadd_inQ_first__062_BITS_62_TO_5_ETC___d1065,
       main_nn_pes_2_inputQ_i_notEmpty__284_AND_main__ETC___d1297,
       main_nn_pes_3_curMacIdx_691_PLUS_1_707_SRL_6_7_ETC___d1709,
       main_nn_pes_3_curMacIdx_691_ULT_64___d1692,
       main_nn_pes_3_fadd_inQ_first__464_BITS_62_TO_5_ETC___d1467,
       main_nn_pes_3_inputQ_i_notEmpty__686_AND_main__ETC___d1699,
       main_nn_pes_4_curMacIdx_093_PLUS_1_109_SRL_6_1_ETC___d2111,
       main_nn_pes_4_curMacIdx_093_ULT_64___d2094,
       main_nn_pes_4_fadd_inQ_first__866_BITS_62_TO_5_ETC___d1869,
       main_nn_pes_4_inputQ_i_notEmpty__088_AND_main__ETC___d2101,
       main_nn_pes_5_curMacIdx_495_PLUS_1_511_SRL_6_5_ETC___d2513,
       main_nn_pes_5_curMacIdx_495_ULT_64___d2496,
       main_nn_pes_5_fadd_inQ_first__268_BITS_62_TO_5_ETC___d2271,
       main_nn_pes_5_inputQ_i_notEmpty__490_AND_main__ETC___d2503,
       main_nn_pes_6_curMacIdx_897_PLUS_1_913_SRL_6_9_ETC___d2915,
       main_nn_pes_6_curMacIdx_897_ULT_64___d2898,
       main_nn_pes_6_fadd_inQ_first__670_BITS_62_TO_5_ETC___d2673,
       main_nn_pes_6_inputQ_i_notEmpty__892_AND_main__ETC___d2905,
       main_nn_pes_7_curMacIdx_299_PLUS_1_315_SRL_6_3_ETC___d3317,
       main_nn_pes_7_curMacIdx_299_ULT_64___d3300,
       main_nn_pes_7_fadd_inQ_first__072_BITS_62_TO_5_ETC___d3075,
       main_nn_pes_7_inputQ_i_notEmpty__294_AND_main__ETC___d3307,
       mem_counter_9_PLUS_1_0_ULT_10000___d61,
       mem_counter_9_ULT_780___d64,
       mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124,
       mem_state_6_EQ_0_7_AND_mem_reqQ_notEmpty__6_OR_ETC___d104,
       uart_clkcnt_PLUS_1_ULT_217___d3,
       x__h10185,
       x__h13721,
       x__h19046,
       x__h22582,
       x__h26994,
       x__h30530,
       x__h34942,
       x__h38478,
       x__h42890,
       x__h46426,
       x__h50838,
       x__h54374,
       x__h58786,
       x__h62322,
       x__h66734,
       x__h70270;

  // oscillator and gates for output clock CLK_sdram_clk
  assign CLK_sdram_clk = pll_clk_100mhz ;
  assign CLK_GATE_sdram_clk = 1'b1 ;

  // value method ftdi_rxd
  assign ftdi_rxd = uart_txdr ;

  // value method led
  assign led = uartInWord ;

  // value method sdram_pins_sdram_csn
  assign sdram_csn = mem_command_out[3] ;

  // value method sdram_pins_sdram_rasn
  assign sdram_rasn = mem_command_out[1] ;

  // value method sdram_pins_sdram_casn
  assign sdram_casn = mem_command_out[0] ;

  // value method sdram_pins_sdram_wen
  assign sdram_wen = mem_command_out[2] ;

  // value method sdram_pins_sdram_a
  assign sdram_a = mem_addr_out ;

  // value method sdram_pins_sdram_ba
  assign sdram_ba = (mem_state == 3'd3) ? 2'd0 : mem_cur_cmd_address[10:9] ;

  // value method sdram_pins_sdram_dqm
  assign sdram_dqm = mem_dqm ;

  // submodule mainToSerialQ
  SyncFIFO #(.dataWidth(32'd8),
	     .depth(32'd4),
	     .indxWidth(32'd2)) mainToSerialQ(.sCLK(pll_clk_100mhz),
					      .dCLK(CLK_clk_25mhz),
					      .sRST(pll_lockedn),
					      .sD_IN(mainToSerialQ_sD_IN),
					      .sENQ(mainToSerialQ_sENQ),
					      .dDEQ(mainToSerialQ_dDEQ),
					      .sFULL_N(mainToSerialQ_sFULL_N),
					      .dEMPTY_N(mainToSerialQ_dEMPTY_N),
					      .dD_OUT(mainToSerialQ_dD_OUT));

  // submodule main_memWriteQ
  FIFO2 #(.width(32'd32), .guarded(1'd1)) main_memWriteQ(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_memWriteQ_D_IN),
							 .ENQ(main_memWriteQ_ENQ),
							 .DEQ(main_memWriteQ_DEQ),
							 .CLR(main_memWriteQ_CLR),
							 .D_OUT(main_memWriteQ_D_OUT),
							 .FULL_N(main_memWriteQ_FULL_N),
							 .EMPTY_N(main_memWriteQ_EMPTY_N));

  // submodule main_nn_dataInQs_0
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_0(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_0_D_IN),
					     .ENQ(main_nn_dataInQs_0_ENQ),
					     .DEQ(main_nn_dataInQs_0_DEQ),
					     .CLR(main_nn_dataInQs_0_CLR),
					     .D_OUT(main_nn_dataInQs_0_D_OUT),
					     .FULL_N(main_nn_dataInQs_0_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_0_EMPTY_N));

  // submodule main_nn_dataInQs_1
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_1(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_1_D_IN),
					     .ENQ(main_nn_dataInQs_1_ENQ),
					     .DEQ(main_nn_dataInQs_1_DEQ),
					     .CLR(main_nn_dataInQs_1_CLR),
					     .D_OUT(main_nn_dataInQs_1_D_OUT),
					     .FULL_N(main_nn_dataInQs_1_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_1_EMPTY_N));

  // submodule main_nn_dataInQs_2
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_2(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_2_D_IN),
					     .ENQ(main_nn_dataInQs_2_ENQ),
					     .DEQ(main_nn_dataInQs_2_DEQ),
					     .CLR(main_nn_dataInQs_2_CLR),
					     .D_OUT(main_nn_dataInQs_2_D_OUT),
					     .FULL_N(main_nn_dataInQs_2_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_2_EMPTY_N));

  // submodule main_nn_dataInQs_3
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_3(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_3_D_IN),
					     .ENQ(main_nn_dataInQs_3_ENQ),
					     .DEQ(main_nn_dataInQs_3_DEQ),
					     .CLR(main_nn_dataInQs_3_CLR),
					     .D_OUT(main_nn_dataInQs_3_D_OUT),
					     .FULL_N(main_nn_dataInQs_3_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_3_EMPTY_N));

  // submodule main_nn_dataInQs_4
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_4(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_4_D_IN),
					     .ENQ(main_nn_dataInQs_4_ENQ),
					     .DEQ(main_nn_dataInQs_4_DEQ),
					     .CLR(main_nn_dataInQs_4_CLR),
					     .D_OUT(main_nn_dataInQs_4_D_OUT),
					     .FULL_N(main_nn_dataInQs_4_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_4_EMPTY_N));

  // submodule main_nn_dataInQs_5
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_5(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_5_D_IN),
					     .ENQ(main_nn_dataInQs_5_ENQ),
					     .DEQ(main_nn_dataInQs_5_DEQ),
					     .CLR(main_nn_dataInQs_5_CLR),
					     .D_OUT(main_nn_dataInQs_5_D_OUT),
					     .FULL_N(main_nn_dataInQs_5_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_5_EMPTY_N));

  // submodule main_nn_dataInQs_6
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_6(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_6_D_IN),
					     .ENQ(main_nn_dataInQs_6_ENQ),
					     .DEQ(main_nn_dataInQs_6_DEQ),
					     .CLR(main_nn_dataInQs_6_CLR),
					     .D_OUT(main_nn_dataInQs_6_D_OUT),
					     .FULL_N(main_nn_dataInQs_6_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_6_EMPTY_N));

  // submodule main_nn_dataInQs_7
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_dataInQs_7(.RST(pll_lockedn),
					     .CLK(pll_clk_100mhz),
					     .D_IN(main_nn_dataInQs_7_D_IN),
					     .ENQ(main_nn_dataInQs_7_ENQ),
					     .DEQ(main_nn_dataInQs_7_DEQ),
					     .CLR(main_nn_dataInQs_7_CLR),
					     .D_OUT(main_nn_dataInQs_7_D_OUT),
					     .FULL_N(main_nn_dataInQs_7_FULL_N),
					     .EMPTY_N(main_nn_dataInQs_7_EMPTY_N));

  // submodule main_nn_pes_0_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_0_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_0_addForwardQ_D_IN),
							.ENQ(main_nn_pes_0_addForwardQ_ENQ),
							.DEQ(main_nn_pes_0_addForwardQ_DEQ),
							.CLR(main_nn_pes_0_addForwardQ_CLR),
							.D_OUT(main_nn_pes_0_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_0_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_0_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_0_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_0_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_0_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_0_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_0_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_0_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_0_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_0_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_0_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_0_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_0_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_0_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_0_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_0_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_0_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_0_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_0_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_0_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_0_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_0_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_0_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_0_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_0_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_0_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_0_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_0_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_0_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_0_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_0_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_0_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_0_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_0_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_0_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_0_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_0_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_0_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_0_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_0_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_0_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_0_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_0_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_0_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_0_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_0_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_0_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_0_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_0_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_0_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_0_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_0_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_0_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_0_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_0_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_0_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_0_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_0_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_0_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_0_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_0_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_0_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_0_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_0_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_0_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_0_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_0_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_0_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_0_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_0_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_0_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_0_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_0_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_0_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_0_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_0_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_0_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_0_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_0_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_0_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_0_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_0_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_0_fmult_mult18_multin
  mult18x18d main_nn_pes_0_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_0_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_0_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_0_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_0_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_0_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_0_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_0_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_0_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_0_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_0_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_0_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_0_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_0_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_0_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_0_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_0_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_0_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_0_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_0_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_0_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_0_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_0_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_0_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_0_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_0_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_0_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_0_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_0_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_0_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_0_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_0_inputQ_D_IN),
					       .ENQ(main_nn_pes_0_inputQ_ENQ),
					       .DEQ(main_nn_pes_0_inputQ_DEQ),
					       .CLR(main_nn_pes_0_inputQ_CLR),
					       .D_OUT(main_nn_pes_0_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_0_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_0_inputQ_EMPTY_N));

  // submodule main_nn_pes_0_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_0_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_0_outputQ_D_IN),
						.ENQ(main_nn_pes_0_outputQ_ENQ),
						.DEQ(main_nn_pes_0_outputQ_DEQ),
						.CLR(main_nn_pes_0_outputQ_CLR),
						.D_OUT(main_nn_pes_0_outputQ_D_OUT),
						.FULL_N(main_nn_pes_0_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_0_outputQ_EMPTY_N));

  // submodule main_nn_pes_0_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_0_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_0_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_0_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_0_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_0_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_0_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_0_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_0_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_0_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_0_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_0_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_0_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_0_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_0_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_0_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_0_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_0_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_0_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_0_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_0_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_0_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_0_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_0_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_0_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_0_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_0_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_0_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_0_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_0_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_0_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_0_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_0_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_0_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_0_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_0_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_0_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_0_partialSumQ_memory_DOB));

  // submodule main_nn_pes_0_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_0_weightInQ_D_IN),
						  .ENQ(main_nn_pes_0_weightInQ_ENQ),
						  .DEQ(main_nn_pes_0_weightInQ_DEQ),
						  .CLR(main_nn_pes_0_weightInQ_CLR),
						  .D_OUT(main_nn_pes_0_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_0_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_0_weightInQ_EMPTY_N));

  // submodule main_nn_pes_0_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_0_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_0_weightQ_D_IN),
						.ENQ(main_nn_pes_0_weightQ_ENQ),
						.DEQ(main_nn_pes_0_weightQ_DEQ),
						.CLR(main_nn_pes_0_weightQ_CLR),
						.D_OUT(main_nn_pes_0_weightQ_D_OUT),
						.FULL_N(main_nn_pes_0_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_0_weightQ_EMPTY_N));

  // submodule main_nn_pes_1_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_1_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_1_addForwardQ_D_IN),
							.ENQ(main_nn_pes_1_addForwardQ_ENQ),
							.DEQ(main_nn_pes_1_addForwardQ_DEQ),
							.CLR(main_nn_pes_1_addForwardQ_CLR),
							.D_OUT(main_nn_pes_1_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_1_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_1_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_1_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_1_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_1_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_1_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_1_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_1_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_1_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_1_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_1_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_1_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_1_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_1_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_1_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_1_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_1_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_1_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_1_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_1_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_1_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_1_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_1_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_1_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_1_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_1_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_1_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_1_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_1_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_1_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_1_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_1_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_1_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_1_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_1_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_1_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_1_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_1_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_1_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_1_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_1_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_1_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_1_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_1_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_1_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_1_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_1_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_1_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_1_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_1_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_1_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_1_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_1_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_1_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_1_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_1_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_1_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_1_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_1_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_1_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_1_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_1_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_1_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_1_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_1_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_1_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_1_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_1_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_1_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_1_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_1_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_1_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_1_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_1_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_1_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_1_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_1_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_1_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_1_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_1_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_1_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_1_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_1_fmult_mult18_multin
  mult18x18d main_nn_pes_1_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_1_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_1_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_1_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_1_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_1_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_1_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_1_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_1_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_1_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_1_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_1_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_1_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_1_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_1_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_1_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_1_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_1_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_1_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_1_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_1_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_1_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_1_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_1_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_1_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_1_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_1_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_1_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_1_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_1_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_1_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_1_inputQ_D_IN),
					       .ENQ(main_nn_pes_1_inputQ_ENQ),
					       .DEQ(main_nn_pes_1_inputQ_DEQ),
					       .CLR(main_nn_pes_1_inputQ_CLR),
					       .D_OUT(main_nn_pes_1_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_1_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_1_inputQ_EMPTY_N));

  // submodule main_nn_pes_1_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_1_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_1_outputQ_D_IN),
						.ENQ(main_nn_pes_1_outputQ_ENQ),
						.DEQ(main_nn_pes_1_outputQ_DEQ),
						.CLR(main_nn_pes_1_outputQ_CLR),
						.D_OUT(main_nn_pes_1_outputQ_D_OUT),
						.FULL_N(main_nn_pes_1_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_1_outputQ_EMPTY_N));

  // submodule main_nn_pes_1_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_1_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_1_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_1_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_1_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_1_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_1_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_1_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_1_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_1_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_1_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_1_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_1_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_1_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_1_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_1_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_1_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_1_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_1_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_1_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_1_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_1_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_1_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_1_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_1_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_1_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_1_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_1_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_1_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_1_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_1_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_1_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_1_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_1_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_1_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_1_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_1_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_1_partialSumQ_memory_DOB));

  // submodule main_nn_pes_1_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_1_weightInQ_D_IN),
						  .ENQ(main_nn_pes_1_weightInQ_ENQ),
						  .DEQ(main_nn_pes_1_weightInQ_DEQ),
						  .CLR(main_nn_pes_1_weightInQ_CLR),
						  .D_OUT(main_nn_pes_1_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_1_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_1_weightInQ_EMPTY_N));

  // submodule main_nn_pes_1_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_1_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_1_weightQ_D_IN),
						.ENQ(main_nn_pes_1_weightQ_ENQ),
						.DEQ(main_nn_pes_1_weightQ_DEQ),
						.CLR(main_nn_pes_1_weightQ_CLR),
						.D_OUT(main_nn_pes_1_weightQ_D_OUT),
						.FULL_N(main_nn_pes_1_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_1_weightQ_EMPTY_N));

  // submodule main_nn_pes_2_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_2_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_2_addForwardQ_D_IN),
							.ENQ(main_nn_pes_2_addForwardQ_ENQ),
							.DEQ(main_nn_pes_2_addForwardQ_DEQ),
							.CLR(main_nn_pes_2_addForwardQ_CLR),
							.D_OUT(main_nn_pes_2_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_2_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_2_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_2_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_2_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_2_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_2_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_2_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_2_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_2_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_2_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_2_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_2_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_2_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_2_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_2_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_2_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_2_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_2_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_2_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_2_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_2_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_2_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_2_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_2_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_2_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_2_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_2_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_2_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_2_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_2_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_2_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_2_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_2_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_2_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_2_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_2_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_2_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_2_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_2_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_2_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_2_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_2_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_2_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_2_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_2_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_2_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_2_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_2_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_2_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_2_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_2_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_2_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_2_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_2_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_2_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_2_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_2_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_2_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_2_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_2_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_2_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_2_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_2_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_2_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_2_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_2_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_2_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_2_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_2_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_2_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_2_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_2_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_2_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_2_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_2_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_2_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_2_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_2_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_2_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_2_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_2_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_2_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_2_fmult_mult18_multin
  mult18x18d main_nn_pes_2_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_2_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_2_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_2_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_2_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_2_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_2_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_2_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_2_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_2_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_2_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_2_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_2_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_2_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_2_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_2_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_2_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_2_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_2_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_2_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_2_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_2_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_2_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_2_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_2_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_2_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_2_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_2_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_2_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_2_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_2_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_2_inputQ_D_IN),
					       .ENQ(main_nn_pes_2_inputQ_ENQ),
					       .DEQ(main_nn_pes_2_inputQ_DEQ),
					       .CLR(main_nn_pes_2_inputQ_CLR),
					       .D_OUT(main_nn_pes_2_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_2_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_2_inputQ_EMPTY_N));

  // submodule main_nn_pes_2_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_2_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_2_outputQ_D_IN),
						.ENQ(main_nn_pes_2_outputQ_ENQ),
						.DEQ(main_nn_pes_2_outputQ_DEQ),
						.CLR(main_nn_pes_2_outputQ_CLR),
						.D_OUT(main_nn_pes_2_outputQ_D_OUT),
						.FULL_N(main_nn_pes_2_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_2_outputQ_EMPTY_N));

  // submodule main_nn_pes_2_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_2_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_2_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_2_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_2_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_2_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_2_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_2_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_2_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_2_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_2_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_2_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_2_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_2_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_2_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_2_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_2_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_2_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_2_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_2_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_2_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_2_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_2_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_2_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_2_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_2_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_2_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_2_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_2_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_2_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_2_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_2_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_2_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_2_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_2_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_2_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_2_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_2_partialSumQ_memory_DOB));

  // submodule main_nn_pes_2_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_2_weightInQ_D_IN),
						  .ENQ(main_nn_pes_2_weightInQ_ENQ),
						  .DEQ(main_nn_pes_2_weightInQ_DEQ),
						  .CLR(main_nn_pes_2_weightInQ_CLR),
						  .D_OUT(main_nn_pes_2_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_2_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_2_weightInQ_EMPTY_N));

  // submodule main_nn_pes_2_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_2_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_2_weightQ_D_IN),
						.ENQ(main_nn_pes_2_weightQ_ENQ),
						.DEQ(main_nn_pes_2_weightQ_DEQ),
						.CLR(main_nn_pes_2_weightQ_CLR),
						.D_OUT(main_nn_pes_2_weightQ_D_OUT),
						.FULL_N(main_nn_pes_2_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_2_weightQ_EMPTY_N));

  // submodule main_nn_pes_3_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_3_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_3_addForwardQ_D_IN),
							.ENQ(main_nn_pes_3_addForwardQ_ENQ),
							.DEQ(main_nn_pes_3_addForwardQ_DEQ),
							.CLR(main_nn_pes_3_addForwardQ_CLR),
							.D_OUT(main_nn_pes_3_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_3_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_3_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_3_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_3_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_3_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_3_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_3_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_3_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_3_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_3_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_3_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_3_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_3_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_3_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_3_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_3_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_3_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_3_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_3_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_3_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_3_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_3_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_3_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_3_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_3_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_3_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_3_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_3_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_3_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_3_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_3_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_3_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_3_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_3_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_3_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_3_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_3_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_3_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_3_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_3_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_3_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_3_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_3_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_3_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_3_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_3_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_3_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_3_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_3_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_3_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_3_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_3_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_3_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_3_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_3_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_3_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_3_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_3_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_3_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_3_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_3_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_3_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_3_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_3_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_3_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_3_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_3_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_3_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_3_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_3_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_3_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_3_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_3_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_3_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_3_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_3_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_3_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_3_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_3_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_3_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_3_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_3_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_3_fmult_mult18_multin
  mult18x18d main_nn_pes_3_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_3_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_3_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_3_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_3_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_3_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_3_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_3_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_3_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_3_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_3_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_3_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_3_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_3_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_3_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_3_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_3_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_3_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_3_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_3_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_3_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_3_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_3_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_3_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_3_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_3_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_3_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_3_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_3_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_3_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_3_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_3_inputQ_D_IN),
					       .ENQ(main_nn_pes_3_inputQ_ENQ),
					       .DEQ(main_nn_pes_3_inputQ_DEQ),
					       .CLR(main_nn_pes_3_inputQ_CLR),
					       .D_OUT(main_nn_pes_3_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_3_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_3_inputQ_EMPTY_N));

  // submodule main_nn_pes_3_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_3_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_3_outputQ_D_IN),
						.ENQ(main_nn_pes_3_outputQ_ENQ),
						.DEQ(main_nn_pes_3_outputQ_DEQ),
						.CLR(main_nn_pes_3_outputQ_CLR),
						.D_OUT(main_nn_pes_3_outputQ_D_OUT),
						.FULL_N(main_nn_pes_3_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_3_outputQ_EMPTY_N));

  // submodule main_nn_pes_3_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_3_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_3_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_3_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_3_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_3_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_3_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_3_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_3_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_3_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_3_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_3_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_3_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_3_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_3_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_3_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_3_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_3_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_3_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_3_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_3_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_3_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_3_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_3_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_3_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_3_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_3_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_3_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_3_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_3_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_3_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_3_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_3_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_3_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_3_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_3_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_3_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_3_partialSumQ_memory_DOB));

  // submodule main_nn_pes_3_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_3_weightInQ_D_IN),
						  .ENQ(main_nn_pes_3_weightInQ_ENQ),
						  .DEQ(main_nn_pes_3_weightInQ_DEQ),
						  .CLR(main_nn_pes_3_weightInQ_CLR),
						  .D_OUT(main_nn_pes_3_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_3_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_3_weightInQ_EMPTY_N));

  // submodule main_nn_pes_3_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_3_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_3_weightQ_D_IN),
						.ENQ(main_nn_pes_3_weightQ_ENQ),
						.DEQ(main_nn_pes_3_weightQ_DEQ),
						.CLR(main_nn_pes_3_weightQ_CLR),
						.D_OUT(main_nn_pes_3_weightQ_D_OUT),
						.FULL_N(main_nn_pes_3_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_3_weightQ_EMPTY_N));

  // submodule main_nn_pes_4_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_4_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_4_addForwardQ_D_IN),
							.ENQ(main_nn_pes_4_addForwardQ_ENQ),
							.DEQ(main_nn_pes_4_addForwardQ_DEQ),
							.CLR(main_nn_pes_4_addForwardQ_CLR),
							.D_OUT(main_nn_pes_4_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_4_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_4_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_4_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_4_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_4_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_4_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_4_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_4_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_4_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_4_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_4_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_4_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_4_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_4_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_4_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_4_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_4_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_4_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_4_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_4_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_4_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_4_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_4_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_4_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_4_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_4_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_4_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_4_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_4_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_4_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_4_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_4_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_4_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_4_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_4_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_4_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_4_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_4_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_4_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_4_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_4_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_4_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_4_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_4_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_4_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_4_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_4_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_4_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_4_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_4_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_4_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_4_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_4_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_4_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_4_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_4_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_4_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_4_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_4_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_4_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_4_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_4_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_4_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_4_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_4_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_4_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_4_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_4_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_4_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_4_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_4_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_4_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_4_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_4_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_4_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_4_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_4_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_4_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_4_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_4_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_4_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_4_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_4_fmult_mult18_multin
  mult18x18d main_nn_pes_4_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_4_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_4_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_4_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_4_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_4_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_4_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_4_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_4_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_4_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_4_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_4_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_4_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_4_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_4_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_4_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_4_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_4_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_4_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_4_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_4_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_4_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_4_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_4_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_4_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_4_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_4_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_4_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_4_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_4_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_4_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_4_inputQ_D_IN),
					       .ENQ(main_nn_pes_4_inputQ_ENQ),
					       .DEQ(main_nn_pes_4_inputQ_DEQ),
					       .CLR(main_nn_pes_4_inputQ_CLR),
					       .D_OUT(main_nn_pes_4_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_4_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_4_inputQ_EMPTY_N));

  // submodule main_nn_pes_4_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_4_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_4_outputQ_D_IN),
						.ENQ(main_nn_pes_4_outputQ_ENQ),
						.DEQ(main_nn_pes_4_outputQ_DEQ),
						.CLR(main_nn_pes_4_outputQ_CLR),
						.D_OUT(main_nn_pes_4_outputQ_D_OUT),
						.FULL_N(main_nn_pes_4_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_4_outputQ_EMPTY_N));

  // submodule main_nn_pes_4_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_4_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_4_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_4_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_4_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_4_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_4_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_4_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_4_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_4_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_4_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_4_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_4_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_4_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_4_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_4_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_4_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_4_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_4_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_4_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_4_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_4_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_4_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_4_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_4_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_4_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_4_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_4_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_4_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_4_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_4_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_4_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_4_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_4_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_4_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_4_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_4_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_4_partialSumQ_memory_DOB));

  // submodule main_nn_pes_4_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_4_weightInQ_D_IN),
						  .ENQ(main_nn_pes_4_weightInQ_ENQ),
						  .DEQ(main_nn_pes_4_weightInQ_DEQ),
						  .CLR(main_nn_pes_4_weightInQ_CLR),
						  .D_OUT(main_nn_pes_4_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_4_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_4_weightInQ_EMPTY_N));

  // submodule main_nn_pes_4_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_4_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_4_weightQ_D_IN),
						.ENQ(main_nn_pes_4_weightQ_ENQ),
						.DEQ(main_nn_pes_4_weightQ_DEQ),
						.CLR(main_nn_pes_4_weightQ_CLR),
						.D_OUT(main_nn_pes_4_weightQ_D_OUT),
						.FULL_N(main_nn_pes_4_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_4_weightQ_EMPTY_N));

  // submodule main_nn_pes_5_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_5_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_5_addForwardQ_D_IN),
							.ENQ(main_nn_pes_5_addForwardQ_ENQ),
							.DEQ(main_nn_pes_5_addForwardQ_DEQ),
							.CLR(main_nn_pes_5_addForwardQ_CLR),
							.D_OUT(main_nn_pes_5_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_5_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_5_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_5_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_5_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_5_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_5_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_5_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_5_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_5_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_5_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_5_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_5_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_5_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_5_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_5_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_5_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_5_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_5_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_5_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_5_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_5_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_5_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_5_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_5_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_5_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_5_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_5_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_5_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_5_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_5_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_5_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_5_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_5_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_5_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_5_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_5_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_5_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_5_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_5_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_5_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_5_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_5_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_5_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_5_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_5_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_5_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_5_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_5_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_5_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_5_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_5_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_5_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_5_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_5_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_5_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_5_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_5_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_5_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_5_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_5_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_5_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_5_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_5_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_5_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_5_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_5_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_5_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_5_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_5_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_5_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_5_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_5_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_5_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_5_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_5_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_5_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_5_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_5_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_5_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_5_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_5_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_5_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_5_fmult_mult18_multin
  mult18x18d main_nn_pes_5_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_5_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_5_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_5_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_5_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_5_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_5_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_5_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_5_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_5_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_5_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_5_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_5_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_5_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_5_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_5_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_5_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_5_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_5_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_5_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_5_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_5_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_5_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_5_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_5_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_5_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_5_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_5_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_5_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_5_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_5_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_5_inputQ_D_IN),
					       .ENQ(main_nn_pes_5_inputQ_ENQ),
					       .DEQ(main_nn_pes_5_inputQ_DEQ),
					       .CLR(main_nn_pes_5_inputQ_CLR),
					       .D_OUT(main_nn_pes_5_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_5_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_5_inputQ_EMPTY_N));

  // submodule main_nn_pes_5_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_5_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_5_outputQ_D_IN),
						.ENQ(main_nn_pes_5_outputQ_ENQ),
						.DEQ(main_nn_pes_5_outputQ_DEQ),
						.CLR(main_nn_pes_5_outputQ_CLR),
						.D_OUT(main_nn_pes_5_outputQ_D_OUT),
						.FULL_N(main_nn_pes_5_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_5_outputQ_EMPTY_N));

  // submodule main_nn_pes_5_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_5_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_5_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_5_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_5_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_5_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_5_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_5_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_5_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_5_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_5_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_5_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_5_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_5_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_5_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_5_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_5_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_5_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_5_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_5_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_5_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_5_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_5_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_5_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_5_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_5_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_5_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_5_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_5_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_5_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_5_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_5_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_5_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_5_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_5_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_5_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_5_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_5_partialSumQ_memory_DOB));

  // submodule main_nn_pes_5_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_5_weightInQ_D_IN),
						  .ENQ(main_nn_pes_5_weightInQ_ENQ),
						  .DEQ(main_nn_pes_5_weightInQ_DEQ),
						  .CLR(main_nn_pes_5_weightInQ_CLR),
						  .D_OUT(main_nn_pes_5_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_5_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_5_weightInQ_EMPTY_N));

  // submodule main_nn_pes_5_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_5_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_5_weightQ_D_IN),
						.ENQ(main_nn_pes_5_weightQ_ENQ),
						.DEQ(main_nn_pes_5_weightQ_DEQ),
						.CLR(main_nn_pes_5_weightQ_CLR),
						.D_OUT(main_nn_pes_5_weightQ_D_OUT),
						.FULL_N(main_nn_pes_5_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_5_weightQ_EMPTY_N));

  // submodule main_nn_pes_6_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_6_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_6_addForwardQ_D_IN),
							.ENQ(main_nn_pes_6_addForwardQ_ENQ),
							.DEQ(main_nn_pes_6_addForwardQ_DEQ),
							.CLR(main_nn_pes_6_addForwardQ_CLR),
							.D_OUT(main_nn_pes_6_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_6_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_6_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_6_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_6_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_6_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_6_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_6_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_6_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_6_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_6_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_6_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_6_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_6_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_6_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_6_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_6_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_6_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_6_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_6_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_6_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_6_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_6_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_6_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_6_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_6_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_6_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_6_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_6_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_6_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_6_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_6_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_6_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_6_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_6_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_6_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_6_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_6_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_6_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_6_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_6_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_6_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_6_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_6_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_6_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_6_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_6_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_6_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_6_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_6_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_6_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_6_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_6_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_6_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_6_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_6_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_6_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_6_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_6_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_6_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_6_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_6_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_6_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_6_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_6_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_6_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_6_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_6_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_6_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_6_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_6_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_6_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_6_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_6_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_6_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_6_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_6_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_6_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_6_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_6_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_6_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_6_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_6_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_6_fmult_mult18_multin
  mult18x18d main_nn_pes_6_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_6_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_6_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_6_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_6_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_6_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_6_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_6_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_6_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_6_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_6_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_6_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_6_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_6_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_6_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_6_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_6_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_6_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_6_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_6_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_6_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_6_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_6_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_6_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_6_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_6_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_6_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_6_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_6_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_6_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_6_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_6_inputQ_D_IN),
					       .ENQ(main_nn_pes_6_inputQ_ENQ),
					       .DEQ(main_nn_pes_6_inputQ_DEQ),
					       .CLR(main_nn_pes_6_inputQ_CLR),
					       .D_OUT(main_nn_pes_6_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_6_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_6_inputQ_EMPTY_N));

  // submodule main_nn_pes_6_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_6_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_6_outputQ_D_IN),
						.ENQ(main_nn_pes_6_outputQ_ENQ),
						.DEQ(main_nn_pes_6_outputQ_DEQ),
						.CLR(main_nn_pes_6_outputQ_CLR),
						.D_OUT(main_nn_pes_6_outputQ_D_OUT),
						.FULL_N(main_nn_pes_6_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_6_outputQ_EMPTY_N));

  // submodule main_nn_pes_6_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_6_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_6_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_6_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_6_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_6_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_6_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_6_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_6_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_6_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_6_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_6_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_6_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_6_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_6_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_6_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_6_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_6_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_6_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_6_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_6_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_6_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_6_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_6_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_6_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_6_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_6_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_6_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_6_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_6_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_6_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_6_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_6_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_6_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_6_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_6_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_6_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_6_partialSumQ_memory_DOB));

  // submodule main_nn_pes_6_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_6_weightInQ_D_IN),
						  .ENQ(main_nn_pes_6_weightInQ_ENQ),
						  .DEQ(main_nn_pes_6_weightInQ_DEQ),
						  .CLR(main_nn_pes_6_weightInQ_CLR),
						  .D_OUT(main_nn_pes_6_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_6_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_6_weightInQ_EMPTY_N));

  // submodule main_nn_pes_6_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_6_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_6_weightQ_D_IN),
						.ENQ(main_nn_pes_6_weightQ_ENQ),
						.DEQ(main_nn_pes_6_weightQ_DEQ),
						.CLR(main_nn_pes_6_weightQ_CLR),
						.D_OUT(main_nn_pes_6_weightQ_D_OUT),
						.FULL_N(main_nn_pes_6_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_6_weightQ_EMPTY_N));

  // submodule main_nn_pes_7_addForwardQ
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_7_addForwardQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_7_addForwardQ_D_IN),
							.ENQ(main_nn_pes_7_addForwardQ_ENQ),
							.DEQ(main_nn_pes_7_addForwardQ_DEQ),
							.CLR(main_nn_pes_7_addForwardQ_CLR),
							.D_OUT(main_nn_pes_7_addForwardQ_D_OUT),
							.FULL_N(main_nn_pes_7_addForwardQ_FULL_N),
							.EMPTY_N(main_nn_pes_7_addForwardQ_EMPTY_N));

  // submodule main_nn_pes_7_fadd_calcQ
  FIFO2 #(.width(32'd55),
	  .guarded(1'd1)) main_nn_pes_7_fadd_calcQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_7_fadd_calcQ_D_IN),
						   .ENQ(main_nn_pes_7_fadd_calcQ_ENQ),
						   .DEQ(main_nn_pes_7_fadd_calcQ_DEQ),
						   .CLR(main_nn_pes_7_fadd_calcQ_CLR),
						   .D_OUT(main_nn_pes_7_fadd_calcQ_D_OUT),
						   .FULL_N(main_nn_pes_7_fadd_calcQ_FULL_N),
						   .EMPTY_N(main_nn_pes_7_fadd_calcQ_EMPTY_N));

  // submodule main_nn_pes_7_fadd_inProcQ
  FIFO2 #(.width(32'd63),
	  .guarded(1'd1)) main_nn_pes_7_fadd_inProcQ(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_7_fadd_inProcQ_D_IN),
						     .ENQ(main_nn_pes_7_fadd_inProcQ_ENQ),
						     .DEQ(main_nn_pes_7_fadd_inProcQ_DEQ),
						     .CLR(main_nn_pes_7_fadd_inProcQ_CLR),
						     .D_OUT(main_nn_pes_7_fadd_inProcQ_D_OUT),
						     .FULL_N(main_nn_pes_7_fadd_inProcQ_FULL_N),
						     .EMPTY_N(main_nn_pes_7_fadd_inProcQ_EMPTY_N));

  // submodule main_nn_pes_7_fadd_inQ
  FIFO2 #(.width(32'd64),
	  .guarded(1'd1)) main_nn_pes_7_fadd_inQ(.RST(pll_lockedn),
						 .CLK(pll_clk_100mhz),
						 .D_IN(main_nn_pes_7_fadd_inQ_D_IN),
						 .ENQ(main_nn_pes_7_fadd_inQ_ENQ),
						 .DEQ(main_nn_pes_7_fadd_inQ_DEQ),
						 .CLR(main_nn_pes_7_fadd_inQ_CLR),
						 .D_OUT(main_nn_pes_7_fadd_inQ_D_OUT),
						 .FULL_N(main_nn_pes_7_fadd_inQ_FULL_N),
						 .EMPTY_N(main_nn_pes_7_fadd_inQ_EMPTY_N));

  // submodule main_nn_pes_7_fadd_normalizeQ
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_7_fadd_normalizeQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_7_fadd_normalizeQ_D_IN),
							.ENQ(main_nn_pes_7_fadd_normalizeQ_ENQ),
							.DEQ(main_nn_pes_7_fadd_normalizeQ_DEQ),
							.CLR(main_nn_pes_7_fadd_normalizeQ_CLR),
							.D_OUT(main_nn_pes_7_fadd_normalizeQ_D_OUT),
							.FULL_N(main_nn_pes_7_fadd_normalizeQ_FULL_N),
							.EMPTY_N(main_nn_pes_7_fadd_normalizeQ_EMPTY_N));

  // submodule main_nn_pes_7_fadd_normalizeQ1
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_7_fadd_normalizeQ1(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_7_fadd_normalizeQ1_D_IN),
							 .ENQ(main_nn_pes_7_fadd_normalizeQ1_ENQ),
							 .DEQ(main_nn_pes_7_fadd_normalizeQ1_DEQ),
							 .CLR(main_nn_pes_7_fadd_normalizeQ1_CLR),
							 .D_OUT(main_nn_pes_7_fadd_normalizeQ1_D_OUT),
							 .FULL_N(main_nn_pes_7_fadd_normalizeQ1_FULL_N),
							 .EMPTY_N(main_nn_pes_7_fadd_normalizeQ1_EMPTY_N));

  // submodule main_nn_pes_7_fadd_normalizeQ2
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_7_fadd_normalizeQ2(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_7_fadd_normalizeQ2_D_IN),
							 .ENQ(main_nn_pes_7_fadd_normalizeQ2_ENQ),
							 .DEQ(main_nn_pes_7_fadd_normalizeQ2_DEQ),
							 .CLR(main_nn_pes_7_fadd_normalizeQ2_CLR),
							 .D_OUT(main_nn_pes_7_fadd_normalizeQ2_D_OUT),
							 .FULL_N(main_nn_pes_7_fadd_normalizeQ2_FULL_N),
							 .EMPTY_N(main_nn_pes_7_fadd_normalizeQ2_EMPTY_N));

  // submodule main_nn_pes_7_fadd_normalizeQ3
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_7_fadd_normalizeQ3(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_7_fadd_normalizeQ3_D_IN),
							 .ENQ(main_nn_pes_7_fadd_normalizeQ3_ENQ),
							 .DEQ(main_nn_pes_7_fadd_normalizeQ3_DEQ),
							 .CLR(main_nn_pes_7_fadd_normalizeQ3_CLR),
							 .D_OUT(main_nn_pes_7_fadd_normalizeQ3_D_OUT),
							 .FULL_N(main_nn_pes_7_fadd_normalizeQ3_FULL_N),
							 .EMPTY_N(main_nn_pes_7_fadd_normalizeQ3_EMPTY_N));

  // submodule main_nn_pes_7_fadd_normalizeQ4
  FIFO2 #(.width(32'd28),
	  .guarded(1'd1)) main_nn_pes_7_fadd_normalizeQ4(.RST(pll_lockedn),
							 .CLK(pll_clk_100mhz),
							 .D_IN(main_nn_pes_7_fadd_normalizeQ4_D_IN),
							 .ENQ(main_nn_pes_7_fadd_normalizeQ4_ENQ),
							 .DEQ(main_nn_pes_7_fadd_normalizeQ4_DEQ),
							 .CLR(main_nn_pes_7_fadd_normalizeQ4_CLR),
							 .D_OUT(main_nn_pes_7_fadd_normalizeQ4_D_OUT),
							 .FULL_N(main_nn_pes_7_fadd_normalizeQ4_FULL_N),
							 .EMPTY_N(main_nn_pes_7_fadd_normalizeQ4_EMPTY_N));

  // submodule main_nn_pes_7_fadd_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_fadd_outQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_7_fadd_outQ_D_IN),
						  .ENQ(main_nn_pes_7_fadd_outQ_ENQ),
						  .DEQ(main_nn_pes_7_fadd_outQ_DEQ),
						  .CLR(main_nn_pes_7_fadd_outQ_CLR),
						  .D_OUT(main_nn_pes_7_fadd_outQ_D_OUT),
						  .FULL_N(main_nn_pes_7_fadd_outQ_FULL_N),
						  .EMPTY_N(main_nn_pes_7_fadd_outQ_EMPTY_N));

  // submodule main_nn_pes_7_fmult_mult18_multin
  mult18x18d main_nn_pes_7_fmult_mult18_multin(.clk(pll_clk_100mhz),
					       .rstn(pll_lockedn),
					       .dataax(main_nn_pes_7_fmult_mult18_multin_dataax),
					       .dataay(main_nn_pes_7_fmult_mult18_multin_dataay),
					       .dataout(main_nn_pes_7_fmult_mult18_multin_dataout));

  // submodule main_nn_pes_7_fmult_mult18_outQ
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) main_nn_pes_7_fmult_mult18_outQ(.RST(pll_lockedn),
							  .CLK(pll_clk_100mhz),
							  .D_IN(main_nn_pes_7_fmult_mult18_outQ_D_IN),
							  .ENQ(main_nn_pes_7_fmult_mult18_outQ_ENQ),
							  .DEQ(main_nn_pes_7_fmult_mult18_outQ_DEQ),
							  .CLR(main_nn_pes_7_fmult_mult18_outQ_CLR),
							  .D_OUT(main_nn_pes_7_fmult_mult18_outQ_D_OUT),
							  .FULL_N(main_nn_pes_7_fmult_mult18_outQ_FULL_N),
							  .EMPTY_N(main_nn_pes_7_fmult_mult18_outQ_EMPTY_N));

  // submodule main_nn_pes_7_fmult_outQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_fmult_outQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(main_nn_pes_7_fmult_outQ_D_IN),
						   .ENQ(main_nn_pes_7_fmult_outQ_ENQ),
						   .DEQ(main_nn_pes_7_fmult_outQ_DEQ),
						   .CLR(main_nn_pes_7_fmult_outQ_CLR),
						   .D_OUT(main_nn_pes_7_fmult_outQ_D_OUT),
						   .FULL_N(main_nn_pes_7_fmult_outQ_FULL_N),
						   .EMPTY_N(main_nn_pes_7_fmult_outQ_EMPTY_N));

  // submodule main_nn_pes_7_fmult_signExpZeroQ
  SizedFIFO #(.p1width(32'd11),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) main_nn_pes_7_fmult_signExpZeroQ(.RST(pll_lockedn),
							       .CLK(pll_clk_100mhz),
							       .D_IN(main_nn_pes_7_fmult_signExpZeroQ_D_IN),
							       .ENQ(main_nn_pes_7_fmult_signExpZeroQ_ENQ),
							       .DEQ(main_nn_pes_7_fmult_signExpZeroQ_DEQ),
							       .CLR(main_nn_pes_7_fmult_signExpZeroQ_CLR),
							       .D_OUT(main_nn_pes_7_fmult_signExpZeroQ_D_OUT),
							       .FULL_N(main_nn_pes_7_fmult_signExpZeroQ_FULL_N),
							       .EMPTY_N(main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N));

  // submodule main_nn_pes_7_inputQ
  FIFO2 #(.width(32'd40),
	  .guarded(1'd1)) main_nn_pes_7_inputQ(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_pes_7_inputQ_D_IN),
					       .ENQ(main_nn_pes_7_inputQ_ENQ),
					       .DEQ(main_nn_pes_7_inputQ_DEQ),
					       .CLR(main_nn_pes_7_inputQ_CLR),
					       .D_OUT(main_nn_pes_7_inputQ_D_OUT),
					       .FULL_N(main_nn_pes_7_inputQ_FULL_N),
					       .EMPTY_N(main_nn_pes_7_inputQ_EMPTY_N));

  // submodule main_nn_pes_7_outputQ
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_pes_7_outputQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_7_outputQ_D_IN),
						.ENQ(main_nn_pes_7_outputQ_ENQ),
						.DEQ(main_nn_pes_7_outputQ_DEQ),
						.CLR(main_nn_pes_7_outputQ_CLR),
						.D_OUT(main_nn_pes_7_outputQ_D_OUT),
						.FULL_N(main_nn_pes_7_outputQ_FULL_N),
						.EMPTY_N(main_nn_pes_7_outputQ_EMPTY_N));

  // submodule main_nn_pes_7_partialSumIdxQ1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_partialSumIdxQ1(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_pes_7_partialSumIdxQ1_D_IN),
							.ENQ(main_nn_pes_7_partialSumIdxQ1_ENQ),
							.DEQ(main_nn_pes_7_partialSumIdxQ1_DEQ),
							.CLR(main_nn_pes_7_partialSumIdxQ1_CLR),
							.D_OUT(main_nn_pes_7_partialSumIdxQ1_D_OUT),
							.FULL_N(main_nn_pes_7_partialSumIdxQ1_FULL_N),
							.EMPTY_N(main_nn_pes_7_partialSumIdxQ1_EMPTY_N));

  // submodule main_nn_pes_7_partialSumIdxQ2_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_7_partialSumIdxQ2_memory(.CLKA(pll_clk_100mhz),
								 .CLKB(pll_clk_100mhz),
								 .ADDRA(main_nn_pes_7_partialSumIdxQ2_memory_ADDRA),
								 .ADDRB(main_nn_pes_7_partialSumIdxQ2_memory_ADDRB),
								 .DIA(main_nn_pes_7_partialSumIdxQ2_memory_DIA),
								 .DIB(main_nn_pes_7_partialSumIdxQ2_memory_DIB),
								 .WEA(main_nn_pes_7_partialSumIdxQ2_memory_WEA),
								 .WEB(main_nn_pes_7_partialSumIdxQ2_memory_WEB),
								 .ENA(main_nn_pes_7_partialSumIdxQ2_memory_ENA),
								 .ENB(main_nn_pes_7_partialSumIdxQ2_memory_ENB),
								 .DOA(),
								 .DOB(main_nn_pes_7_partialSumIdxQ2_memory_DOB));

  // submodule main_nn_pes_7_partialSumQ2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_partialSumQ2(.RST(pll_lockedn),
						     .CLK(pll_clk_100mhz),
						     .D_IN(main_nn_pes_7_partialSumQ2_D_IN),
						     .ENQ(main_nn_pes_7_partialSumQ2_ENQ),
						     .DEQ(main_nn_pes_7_partialSumQ2_DEQ),
						     .CLR(main_nn_pes_7_partialSumQ2_CLR),
						     .D_OUT(main_nn_pes_7_partialSumQ2_D_OUT),
						     .FULL_N(main_nn_pes_7_partialSumQ2_FULL_N),
						     .EMPTY_N(main_nn_pes_7_partialSumQ2_EMPTY_N));

  // submodule main_nn_pes_7_partialSumQ_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd32),
	  .MEMSIZE(8'd128)) main_nn_pes_7_partialSumQ_memory(.CLKA(pll_clk_100mhz),
							     .CLKB(pll_clk_100mhz),
							     .ADDRA(main_nn_pes_7_partialSumQ_memory_ADDRA),
							     .ADDRB(main_nn_pes_7_partialSumQ_memory_ADDRB),
							     .DIA(main_nn_pes_7_partialSumQ_memory_DIA),
							     .DIB(main_nn_pes_7_partialSumQ_memory_DIB),
							     .WEA(main_nn_pes_7_partialSumQ_memory_WEA),
							     .WEB(main_nn_pes_7_partialSumQ_memory_WEB),
							     .ENA(main_nn_pes_7_partialSumQ_memory_ENA),
							     .ENB(main_nn_pes_7_partialSumQ_memory_ENB),
							     .DOA(),
							     .DOB(main_nn_pes_7_partialSumQ_memory_DOB));

  // submodule main_nn_pes_7_weightInQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_weightInQ(.RST(pll_lockedn),
						  .CLK(pll_clk_100mhz),
						  .D_IN(main_nn_pes_7_weightInQ_D_IN),
						  .ENQ(main_nn_pes_7_weightInQ_ENQ),
						  .DEQ(main_nn_pes_7_weightInQ_DEQ),
						  .CLR(main_nn_pes_7_weightInQ_CLR),
						  .D_OUT(main_nn_pes_7_weightInQ_D_OUT),
						  .FULL_N(main_nn_pes_7_weightInQ_FULL_N),
						  .EMPTY_N(main_nn_pes_7_weightInQ_EMPTY_N));

  // submodule main_nn_pes_7_weightQ
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_pes_7_weightQ(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_pes_7_weightQ_D_IN),
						.ENQ(main_nn_pes_7_weightQ_ENQ),
						.DEQ(main_nn_pes_7_weightQ_DEQ),
						.CLR(main_nn_pes_7_weightQ_CLR),
						.D_OUT(main_nn_pes_7_weightQ_D_OUT),
						.FULL_N(main_nn_pes_7_weightQ_FULL_N),
						.EMPTY_N(main_nn_pes_7_weightQ_EMPTY_N));

  // submodule main_nn_resultOutQs_0
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_0(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_0_D_IN),
						.ENQ(main_nn_resultOutQs_0_ENQ),
						.DEQ(main_nn_resultOutQs_0_DEQ),
						.CLR(main_nn_resultOutQs_0_CLR),
						.D_OUT(main_nn_resultOutQs_0_D_OUT),
						.FULL_N(main_nn_resultOutQs_0_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_0_EMPTY_N));

  // submodule main_nn_resultOutQs_1
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_1(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_1_D_IN),
						.ENQ(main_nn_resultOutQs_1_ENQ),
						.DEQ(main_nn_resultOutQs_1_DEQ),
						.CLR(main_nn_resultOutQs_1_CLR),
						.D_OUT(main_nn_resultOutQs_1_D_OUT),
						.FULL_N(main_nn_resultOutQs_1_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_1_EMPTY_N));

  // submodule main_nn_resultOutQs_2
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_2(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_2_D_IN),
						.ENQ(main_nn_resultOutQs_2_ENQ),
						.DEQ(main_nn_resultOutQs_2_DEQ),
						.CLR(main_nn_resultOutQs_2_CLR),
						.D_OUT(main_nn_resultOutQs_2_D_OUT),
						.FULL_N(main_nn_resultOutQs_2_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_2_EMPTY_N));

  // submodule main_nn_resultOutQs_3
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_3(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_3_D_IN),
						.ENQ(main_nn_resultOutQs_3_ENQ),
						.DEQ(main_nn_resultOutQs_3_DEQ),
						.CLR(main_nn_resultOutQs_3_CLR),
						.D_OUT(main_nn_resultOutQs_3_D_OUT),
						.FULL_N(main_nn_resultOutQs_3_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_3_EMPTY_N));

  // submodule main_nn_resultOutQs_4
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_4(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_4_D_IN),
						.ENQ(main_nn_resultOutQs_4_ENQ),
						.DEQ(main_nn_resultOutQs_4_DEQ),
						.CLR(main_nn_resultOutQs_4_CLR),
						.D_OUT(main_nn_resultOutQs_4_D_OUT),
						.FULL_N(main_nn_resultOutQs_4_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_4_EMPTY_N));

  // submodule main_nn_resultOutQs_5
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_5(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_5_D_IN),
						.ENQ(main_nn_resultOutQs_5_ENQ),
						.DEQ(main_nn_resultOutQs_5_DEQ),
						.CLR(main_nn_resultOutQs_5_CLR),
						.D_OUT(main_nn_resultOutQs_5_D_OUT),
						.FULL_N(main_nn_resultOutQs_5_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_5_EMPTY_N));

  // submodule main_nn_resultOutQs_6
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_6(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_6_D_IN),
						.ENQ(main_nn_resultOutQs_6_ENQ),
						.DEQ(main_nn_resultOutQs_6_DEQ),
						.CLR(main_nn_resultOutQs_6_CLR),
						.D_OUT(main_nn_resultOutQs_6_D_OUT),
						.FULL_N(main_nn_resultOutQs_6_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_6_EMPTY_N));

  // submodule main_nn_resultOutQs_7
  FIFO2 #(.width(32'd48),
	  .guarded(1'd1)) main_nn_resultOutQs_7(.RST(pll_lockedn),
						.CLK(pll_clk_100mhz),
						.D_IN(main_nn_resultOutQs_7_D_IN),
						.ENQ(main_nn_resultOutQs_7_ENQ),
						.DEQ(main_nn_resultOutQs_7_DEQ),
						.CLR(main_nn_resultOutQs_7_CLR),
						.D_OUT(main_nn_resultOutQs_7_D_OUT),
						.FULL_N(main_nn_resultOutQs_7_FULL_N),
						.EMPTY_N(main_nn_resultOutQs_7_EMPTY_N));

  // submodule main_nn_testQ
  FIFO2 #(.width(32'd32), .guarded(1'd1)) main_nn_testQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_nn_testQ_D_IN),
							.ENQ(main_nn_testQ_ENQ),
							.DEQ(main_nn_testQ_DEQ),
							.CLR(main_nn_testQ_CLR),
							.D_OUT(),
							.FULL_N(),
							.EMPTY_N());

  // submodule main_nn_weightInQs_0
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_0(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_0_D_IN),
					       .ENQ(main_nn_weightInQs_0_ENQ),
					       .DEQ(main_nn_weightInQs_0_DEQ),
					       .CLR(main_nn_weightInQs_0_CLR),
					       .D_OUT(main_nn_weightInQs_0_D_OUT),
					       .FULL_N(main_nn_weightInQs_0_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_0_EMPTY_N));

  // submodule main_nn_weightInQs_1
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_1(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_1_D_IN),
					       .ENQ(main_nn_weightInQs_1_ENQ),
					       .DEQ(main_nn_weightInQs_1_DEQ),
					       .CLR(main_nn_weightInQs_1_CLR),
					       .D_OUT(main_nn_weightInQs_1_D_OUT),
					       .FULL_N(main_nn_weightInQs_1_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_1_EMPTY_N));

  // submodule main_nn_weightInQs_2
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_2(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_2_D_IN),
					       .ENQ(main_nn_weightInQs_2_ENQ),
					       .DEQ(main_nn_weightInQs_2_DEQ),
					       .CLR(main_nn_weightInQs_2_CLR),
					       .D_OUT(main_nn_weightInQs_2_D_OUT),
					       .FULL_N(main_nn_weightInQs_2_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_2_EMPTY_N));

  // submodule main_nn_weightInQs_3
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_3(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_3_D_IN),
					       .ENQ(main_nn_weightInQs_3_ENQ),
					       .DEQ(main_nn_weightInQs_3_DEQ),
					       .CLR(main_nn_weightInQs_3_CLR),
					       .D_OUT(main_nn_weightInQs_3_D_OUT),
					       .FULL_N(main_nn_weightInQs_3_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_3_EMPTY_N));

  // submodule main_nn_weightInQs_4
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_4(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_4_D_IN),
					       .ENQ(main_nn_weightInQs_4_ENQ),
					       .DEQ(main_nn_weightInQs_4_DEQ),
					       .CLR(main_nn_weightInQs_4_CLR),
					       .D_OUT(main_nn_weightInQs_4_D_OUT),
					       .FULL_N(main_nn_weightInQs_4_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_4_EMPTY_N));

  // submodule main_nn_weightInQs_5
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_5(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_5_D_IN),
					       .ENQ(main_nn_weightInQs_5_ENQ),
					       .DEQ(main_nn_weightInQs_5_DEQ),
					       .CLR(main_nn_weightInQs_5_CLR),
					       .D_OUT(main_nn_weightInQs_5_D_OUT),
					       .FULL_N(main_nn_weightInQs_5_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_5_EMPTY_N));

  // submodule main_nn_weightInQs_6
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_6(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_6_D_IN),
					       .ENQ(main_nn_weightInQs_6_ENQ),
					       .DEQ(main_nn_weightInQs_6_DEQ),
					       .CLR(main_nn_weightInQs_6_CLR),
					       .D_OUT(main_nn_weightInQs_6_D_OUT),
					       .FULL_N(main_nn_weightInQs_6_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_6_EMPTY_N));

  // submodule main_nn_weightInQs_7
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) main_nn_weightInQs_7(.RST(pll_lockedn),
					       .CLK(pll_clk_100mhz),
					       .D_IN(main_nn_weightInQs_7_D_IN),
					       .ENQ(main_nn_weightInQs_7_ENQ),
					       .DEQ(main_nn_weightInQs_7_DEQ),
					       .CLR(main_nn_weightInQs_7_CLR),
					       .D_OUT(main_nn_weightInQs_7_D_OUT),
					       .FULL_N(main_nn_weightInQs_7_FULL_N),
					       .EMPTY_N(main_nn_weightInQs_7_EMPTY_N));

  // submodule main_serialrxQ
  FIFO2 #(.width(32'd8), .guarded(1'd1)) main_serialrxQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_serialrxQ_D_IN),
							.ENQ(main_serialrxQ_ENQ),
							.DEQ(main_serialrxQ_DEQ),
							.CLR(main_serialrxQ_CLR),
							.D_OUT(main_serialrxQ_D_OUT),
							.FULL_N(main_serialrxQ_FULL_N),
							.EMPTY_N(main_serialrxQ_EMPTY_N));

  // submodule main_serialtxQ
  FIFO2 #(.width(32'd8), .guarded(1'd1)) main_serialtxQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(main_serialtxQ_D_IN),
							.ENQ(main_serialtxQ_ENQ),
							.DEQ(main_serialtxQ_DEQ),
							.CLR(main_serialtxQ_CLR),
							.D_OUT(main_serialtxQ_D_OUT),
							.FULL_N(main_serialtxQ_FULL_N),
							.EMPTY_N(main_serialtxQ_EMPTY_N));

  // submodule mem_readRespQ
  FIFO2 #(.width(32'd16), .guarded(1'd1)) mem_readRespQ(.RST(pll_lockedn),
							.CLK(pll_clk_100mhz),
							.D_IN(mem_readRespQ_D_IN),
							.ENQ(mem_readRespQ_ENQ),
							.DEQ(mem_readRespQ_DEQ),
							.CLR(mem_readRespQ_CLR),
							.D_OUT(mem_readRespQ_D_OUT),
							.FULL_N(mem_readRespQ_FULL_N),
							.EMPTY_N(mem_readRespQ_EMPTY_N));

  // submodule mem_reqQ
  FIFO2 #(.width(32'd41), .guarded(1'd1)) mem_reqQ(.RST(pll_lockedn),
						   .CLK(pll_clk_100mhz),
						   .D_IN(mem_reqQ_D_IN),
						   .ENQ(mem_reqQ_ENQ),
						   .DEQ(mem_reqQ_DEQ),
						   .CLR(mem_reqQ_CLR),
						   .D_OUT(mem_reqQ_D_OUT),
						   .FULL_N(mem_reqQ_FULL_N),
						   .EMPTY_N(mem_reqQ_EMPTY_N));

  // submodule mem_xx_inout16_XX
  inout16 mem_xx_inout16_XX(.clk(pll_clk_100mhz),
			    .write_data(mem_xx_inout16_XX_write_data),
			    .write_req(mem_xx_inout16_XX_write_req),
			    .read_data(mem_xx_inout16_XX_read_data),
			    .inout_pins(sdram_d));

  // submodule pll
  pll_fastclk pll(.clki_25mhz(CLK_clk_25mhz),
		  .clk_25mhz(),
		  .clk_125mhz(),
		  .clk_100mhz(pll_clk_100mhz),
		  .lockedn(pll_lockedn));

  // submodule serialToMainQ
  SyncFIFO #(.dataWidth(32'd8),
	     .depth(32'd4),
	     .indxWidth(32'd2)) serialToMainQ(.sCLK(CLK_clk_25mhz),
					      .dCLK(pll_clk_100mhz),
					      .sRST(!`BSV_RESET_VALUE),
					      .sD_IN(serialToMainQ_sD_IN),
					      .sENQ(serialToMainQ_sENQ),
					      .dDEQ(serialToMainQ_dDEQ),
					      .sFULL_N(serialToMainQ_sFULL_N),
					      .dEMPTY_N(serialToMainQ_dEMPTY_N),
					      .dD_OUT(serialToMainQ_dD_OUT));

  // submodule uart_inQ
  FIFO2 #(.width(32'd8), .guarded(1'd1)) uart_inQ(.RST(!`BSV_RESET_VALUE),
						  .CLK(CLK_clk_25mhz),
						  .D_IN(uart_inQ_D_IN),
						  .ENQ(uart_inQ_ENQ),
						  .DEQ(uart_inQ_DEQ),
						  .CLR(uart_inQ_CLR),
						  .D_OUT(uart_inQ_D_OUT),
						  .FULL_N(uart_inQ_FULL_N),
						  .EMPTY_N(uart_inQ_EMPTY_N));

  // submodule uart_outQ
  FIFO2 #(.width(32'd8), .guarded(1'd1)) uart_outQ(.RST(!`BSV_RESET_VALUE),
						   .CLK(CLK_clk_25mhz),
						   .D_IN(uart_outQ_D_IN),
						   .ENQ(uart_outQ_ENQ),
						   .DEQ(uart_outQ_DEQ),
						   .CLR(uart_outQ_CLR),
						   .D_OUT(uart_outQ_D_OUT),
						   .FULL_N(uart_outQ_FULL_N),
						   .EMPTY_N(uart_outQ_EMPTY_N));

  // rule RL_uart_outcntclk
  assign WILL_FIRE_RL_uart_outcntclk =
	     uart_clkcnt_PLUS_1_ULT_217___d3 || uart_curoutoff != 5'd0 ||
	     uart_inQ_EMPTY_N ;

  // rule RL_uart_insample
  assign WILL_FIRE_RL_uart_insample =
	     uart_samplecountdown != 16'd0 || uart_bleft != 4'd1 ||
	     uart_outQ_FULL_N ;

  // rule RL_mem_init
  assign WILL_FIRE_RL_mem_init = mem_dqm != 2'd0 && mem_state == 3'd0 ;

  // rule RL_mem_controllerFSM
  assign WILL_FIRE_RL_mem_controllerFSM =
	     mem_state != 3'd0 || mem_dqm == 2'd0 ;

  // rule RL_main_recvInputDst
  assign WILL_FIRE_RL_main_recvInputDst =
	     main_serialrxQ_EMPTY_N && !main_inputDst[8] ;

  // rule RL_main_serializeOutput
  assign WILL_FIRE_RL_main_serializeOutput =
	     main_serialtxQ_FULL_N &&
	     (main_outputBufferCnt != 3'd0 || main_nn_resultOutQs_0_EMPTY_N) ;

  // rule RL_main_procMemWrite
  assign WILL_FIRE_RL_main_procMemWrite =
	     mem_reqQ_FULL_N &&
	     (main_memWriteBuffer[16] || main_memWriteQ_EMPTY_N) ;

  // rule RL_main_procMemRead
  assign CAN_FIRE_RL_main_procMemRead = mem_reqQ_FULL_N && main_memWriteDone ;

  // rule RL_main_recvInputFloat
  assign WILL_FIRE_RL_main_recvInputFloat =
	     main_serialrxQ_EMPTY_N &&
	     NOT_main_inputBufferCnt_424_EQ_3_425_426_OR_IF_ETC___d3436 &&
	     main_inputDst[8] ;

  // rule RL_main_nn_forwardResult
  assign WILL_FIRE_RL_main_nn_forwardResult =
	     main_nn_resultOutQs_0_FULL_N &&
	     (main_nn_pes_0_outputQ_EMPTY_N ?
		main_nn_pes_0_outputQ_EMPTY_N :
		main_nn_resultOutQs_1_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_1
  assign WILL_FIRE_RL_main_nn_forwardResult_1 =
	     main_nn_resultOutQs_1_FULL_N &&
	     (main_nn_pes_1_outputQ_EMPTY_N ?
		main_nn_pes_1_outputQ_EMPTY_N :
		main_nn_resultOutQs_2_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_2
  assign WILL_FIRE_RL_main_nn_forwardResult_2 =
	     main_nn_resultOutQs_2_FULL_N &&
	     (main_nn_pes_2_outputQ_EMPTY_N ?
		main_nn_pes_2_outputQ_EMPTY_N :
		main_nn_resultOutQs_3_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_3
  assign WILL_FIRE_RL_main_nn_forwardResult_3 =
	     main_nn_resultOutQs_3_FULL_N &&
	     (main_nn_pes_3_outputQ_EMPTY_N ?
		main_nn_pes_3_outputQ_EMPTY_N :
		main_nn_resultOutQs_4_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_4
  assign WILL_FIRE_RL_main_nn_forwardResult_4 =
	     main_nn_resultOutQs_4_FULL_N &&
	     (main_nn_pes_4_outputQ_EMPTY_N ?
		main_nn_pes_4_outputQ_EMPTY_N :
		main_nn_resultOutQs_5_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_5
  assign WILL_FIRE_RL_main_nn_forwardResult_5 =
	     main_nn_resultOutQs_5_FULL_N &&
	     (main_nn_pes_5_outputQ_EMPTY_N ?
		main_nn_pes_5_outputQ_EMPTY_N :
		main_nn_resultOutQs_6_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_6
  assign WILL_FIRE_RL_main_nn_forwardResult_6 =
	     main_nn_resultOutQs_6_FULL_N &&
	     (main_nn_pes_6_outputQ_EMPTY_N ?
		main_nn_pes_6_outputQ_EMPTY_N :
		main_nn_resultOutQs_7_EMPTY_N) ;

  // rule RL_main_nn_forwardResult_7
  assign WILL_FIRE_RL_main_nn_forwardResult_7 =
	     !main_nn_pes_7_outputQ_EMPTY_N || main_nn_resultOutQs_7_FULL_N ;

  // rule RL_main_nn_pes_0_enqMac
  assign WILL_FIRE_RL_main_nn_pes_0_enqMac =
	     main_nn_pes_0_fmult_mult18_dataInFlightUp -
	     main_nn_pes_0_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_0_inputQ_i_notEmpty__80_AND_main_n_ETC___d493 ;

  // rule RL_main_nn_pes_0_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_0_relayWeightIn =
	     main_nn_pes_0_weightQ_FULL_N &&
	     (main_nn_pes_0_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_0_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_0_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_0_filterDoneResults =
	     main_nn_pes_0_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_0_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_0_partialSumQ_rRdPtr !=
	     main_nn_pes_0_partialSumQ_rWrPtr &&
	     ((main_nn_pes_0_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_0_outputQ_FULL_N :
		main_nn_pes_0_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_1_enqMac
  assign WILL_FIRE_RL_main_nn_pes_1_enqMac =
	     main_nn_pes_1_fmult_mult18_dataInFlightUp -
	     main_nn_pes_1_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_1_inputQ_i_notEmpty__82_AND_main_n_ETC___d895 ;

  // rule RL_main_nn_pes_1_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_1_relayWeightIn =
	     main_nn_pes_1_weightQ_FULL_N &&
	     (main_nn_pes_1_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_1_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_1_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_1_filterDoneResults =
	     main_nn_pes_1_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_1_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_1_partialSumQ_rRdPtr !=
	     main_nn_pes_1_partialSumQ_rWrPtr &&
	     ((main_nn_pes_1_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_1_outputQ_FULL_N :
		main_nn_pes_1_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_2_enqMac
  assign WILL_FIRE_RL_main_nn_pes_2_enqMac =
	     main_nn_pes_2_fmult_mult18_dataInFlightUp -
	     main_nn_pes_2_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_2_inputQ_i_notEmpty__284_AND_main__ETC___d1297 ;

  // rule RL_main_nn_pes_2_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_2_relayWeightIn =
	     main_nn_pes_2_weightQ_FULL_N &&
	     (main_nn_pes_2_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_2_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_2_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_2_filterDoneResults =
	     main_nn_pes_2_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_2_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_2_partialSumQ_rRdPtr !=
	     main_nn_pes_2_partialSumQ_rWrPtr &&
	     ((main_nn_pes_2_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_2_outputQ_FULL_N :
		main_nn_pes_2_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_3_enqMac
  assign WILL_FIRE_RL_main_nn_pes_3_enqMac =
	     main_nn_pes_3_fmult_mult18_dataInFlightUp -
	     main_nn_pes_3_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_3_inputQ_i_notEmpty__686_AND_main__ETC___d1699 ;

  // rule RL_main_nn_pes_3_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_3_relayWeightIn =
	     main_nn_pes_3_weightQ_FULL_N &&
	     (main_nn_pes_3_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_3_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_3_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_3_filterDoneResults =
	     main_nn_pes_3_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_3_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_3_partialSumQ_rRdPtr !=
	     main_nn_pes_3_partialSumQ_rWrPtr &&
	     ((main_nn_pes_3_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_3_outputQ_FULL_N :
		main_nn_pes_3_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_4_enqMac
  assign WILL_FIRE_RL_main_nn_pes_4_enqMac =
	     main_nn_pes_4_fmult_mult18_dataInFlightUp -
	     main_nn_pes_4_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_4_inputQ_i_notEmpty__088_AND_main__ETC___d2101 ;

  // rule RL_main_nn_pes_4_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_4_relayWeightIn =
	     main_nn_pes_4_weightQ_FULL_N &&
	     (main_nn_pes_4_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_4_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_4_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_4_filterDoneResults =
	     main_nn_pes_4_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_4_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_4_partialSumQ_rRdPtr !=
	     main_nn_pes_4_partialSumQ_rWrPtr &&
	     ((main_nn_pes_4_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_4_outputQ_FULL_N :
		main_nn_pes_4_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_5_enqMac
  assign WILL_FIRE_RL_main_nn_pes_5_enqMac =
	     main_nn_pes_5_fmult_mult18_dataInFlightUp -
	     main_nn_pes_5_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_5_inputQ_i_notEmpty__490_AND_main__ETC___d2503 ;

  // rule RL_main_nn_pes_5_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_5_relayWeightIn =
	     main_nn_pes_5_weightQ_FULL_N &&
	     (main_nn_pes_5_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_5_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_5_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_5_filterDoneResults =
	     main_nn_pes_5_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_5_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_5_partialSumQ_rRdPtr !=
	     main_nn_pes_5_partialSumQ_rWrPtr &&
	     ((main_nn_pes_5_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_5_outputQ_FULL_N :
		main_nn_pes_5_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_6_enqMac
  assign WILL_FIRE_RL_main_nn_pes_6_enqMac =
	     main_nn_pes_6_fmult_mult18_dataInFlightUp -
	     main_nn_pes_6_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_6_inputQ_i_notEmpty__892_AND_main__ETC___d2905 ;

  // rule RL_main_nn_pes_6_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_6_relayWeightIn =
	     main_nn_pes_6_weightQ_FULL_N &&
	     (main_nn_pes_6_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_6_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_6_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_6_filterDoneResults =
	     main_nn_pes_6_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_6_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_6_partialSumQ_rRdPtr !=
	     main_nn_pes_6_partialSumQ_rWrPtr &&
	     ((main_nn_pes_6_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_6_outputQ_FULL_N :
		main_nn_pes_6_partialSumQ2_FULL_N) ;

  // rule RL_main_nn_pes_7_enqMac
  assign WILL_FIRE_RL_main_nn_pes_7_enqMac =
	     main_nn_pes_7_fmult_mult18_dataInFlightUp -
	     main_nn_pes_7_fmult_mult18_dataInFlightDn <
	     3'd4 &&
	     main_nn_pes_7_inputQ_i_notEmpty__294_AND_main__ETC___d3307 ;

  // rule RL_main_nn_pes_7_relayWeightIn
  assign WILL_FIRE_RL_main_nn_pes_7_relayWeightIn =
	     main_nn_pes_7_weightQ_FULL_N &&
	     (main_nn_pes_7_weightReplicateCnt != 8'd0 ||
	      main_nn_pes_7_weightInQ_EMPTY_N) ;

  // rule RL_main_nn_pes_7_filterDoneResults
  assign WILL_FIRE_RL_main_nn_pes_7_filterDoneResults =
	     main_nn_pes_7_partialSumIdxQ2_rRdPtr !=
	     main_nn_pes_7_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_7_partialSumQ_rRdPtr !=
	     main_nn_pes_7_partialSumQ_rWrPtr &&
	     ((main_nn_pes_7_partialSumIdxQ2_wDataOut_wget[15:0] ==
	       16'd1023) ?
		main_nn_pes_7_outputQ_FULL_N :
		main_nn_pes_7_partialSumQ2_FULL_N) ;

  // inputs to muxes for submodule ports
  assign MUX_main_inputDst_write_1__SEL_1 =
	     WILL_FIRE_RL_main_recvInputFloat && main_inputBufferCnt == 2'd3 ;
  assign MUX_mem_reqQ_enq_1__SEL_2 =
	     CAN_FIRE_RL_main_procMemRead && !WILL_FIRE_RL_main_procMemWrite ;
  assign MUX_mem_state_write_1__SEL_1 =
	     WILL_FIRE_RL_mem_init &&
	     !mem_counter_9_PLUS_1_0_ULT_10000___d61 ;
  assign MUX_main_inputDst_write_1__VAL_2 = { 1'd1, main_serialrxQ_D_OUT } ;
  assign MUX_mem_counter_write_1__VAL_1 =
	     mem_counter_9_PLUS_1_0_ULT_10000___d61 ? x__h2456 : 16'd0 ;
  assign MUX_mem_counter_write_1__VAL_2 =
	     (mem_state == 3'd2) ? 16'd0 : x__h2456 ;
  assign MUX_mem_reqQ_enq_1__VAL_1 =
	     { main_memWriteAddr,
	       main_memWriteBuffer[16] ?
		 main_memWriteBuffer[15:0] :
		 main_memWriteQ_D_OUT[15:0],
	       1'd1 } ;
  assign MUX_mem_reqQ_enq_1__VAL_2 = { main_memReadAddr, 17'h15554 } ;
  always@(mem_state or mem_state_next or mem_counter_9_ULT_780___d64)
  begin
    case (mem_state)
      3'd0:
	  MUX_mem_state_write_1__VAL_2 =
	      mem_counter_9_ULT_780___d64 ? 3'd4 : 3'd1;
      3'd1, 3'd2, 3'd3, 3'd4: MUX_mem_state_write_1__VAL_2 = 3'd6;
      3'd5: MUX_mem_state_write_1__VAL_2 = 3'd0;
      default: MUX_mem_state_write_1__VAL_2 = mem_state_next;
    endcase
  end

  // inlined wires
  assign main_nn_pes_0_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_0_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_0_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_0_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_0_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_0_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_0_partialSumQ_wDataOut_wget =
	     (main_nn_pes_0_partialSumQ_rCache[40] &&
	      main_nn_pes_0_partialSumQ_rCache[39:32] ==
	      main_nn_pes_0_partialSumQ_rRdPtr) ?
	       main_nn_pes_0_partialSumQ_rCache[31:0] :
	       main_nn_pes_0_partialSumQ_memory_DOB ;
  assign main_nn_pes_1_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_1_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_1_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_1_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_1_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_1_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_1_partialSumQ_wDataOut_wget =
	     (main_nn_pes_1_partialSumQ_rCache[40] &&
	      main_nn_pes_1_partialSumQ_rCache[39:32] ==
	      main_nn_pes_1_partialSumQ_rRdPtr) ?
	       main_nn_pes_1_partialSumQ_rCache[31:0] :
	       main_nn_pes_1_partialSumQ_memory_DOB ;
  assign main_nn_pes_2_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_2_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_2_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_2_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_2_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_2_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_2_partialSumQ_wDataOut_wget =
	     (main_nn_pes_2_partialSumQ_rCache[40] &&
	      main_nn_pes_2_partialSumQ_rCache[39:32] ==
	      main_nn_pes_2_partialSumQ_rRdPtr) ?
	       main_nn_pes_2_partialSumQ_rCache[31:0] :
	       main_nn_pes_2_partialSumQ_memory_DOB ;
  assign main_nn_pes_3_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_3_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_3_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_3_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_3_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_3_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_3_partialSumQ_wDataOut_wget =
	     (main_nn_pes_3_partialSumQ_rCache[40] &&
	      main_nn_pes_3_partialSumQ_rCache[39:32] ==
	      main_nn_pes_3_partialSumQ_rRdPtr) ?
	       main_nn_pes_3_partialSumQ_rCache[31:0] :
	       main_nn_pes_3_partialSumQ_memory_DOB ;
  assign main_nn_pes_4_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_4_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_4_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_4_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_4_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_4_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_4_partialSumQ_wDataOut_wget =
	     (main_nn_pes_4_partialSumQ_rCache[40] &&
	      main_nn_pes_4_partialSumQ_rCache[39:32] ==
	      main_nn_pes_4_partialSumQ_rRdPtr) ?
	       main_nn_pes_4_partialSumQ_rCache[31:0] :
	       main_nn_pes_4_partialSumQ_memory_DOB ;
  assign main_nn_pes_5_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_5_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_5_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_5_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_5_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_5_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_5_partialSumQ_wDataOut_wget =
	     (main_nn_pes_5_partialSumQ_rCache[40] &&
	      main_nn_pes_5_partialSumQ_rCache[39:32] ==
	      main_nn_pes_5_partialSumQ_rRdPtr) ?
	       main_nn_pes_5_partialSumQ_rCache[31:0] :
	       main_nn_pes_5_partialSumQ_memory_DOB ;
  assign main_nn_pes_6_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_6_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_6_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_6_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_6_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_6_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_6_partialSumQ_wDataOut_wget =
	     (main_nn_pes_6_partialSumQ_rCache[40] &&
	      main_nn_pes_6_partialSumQ_rCache[39:32] ==
	      main_nn_pes_6_partialSumQ_rRdPtr) ?
	       main_nn_pes_6_partialSumQ_rCache[31:0] :
	       main_nn_pes_6_partialSumQ_memory_DOB ;
  assign main_nn_pes_7_partialSumIdxQ2_wDataOut_wget =
	     (main_nn_pes_7_partialSumIdxQ2_rCache[40] &&
	      main_nn_pes_7_partialSumIdxQ2_rCache[39:32] ==
	      main_nn_pes_7_partialSumIdxQ2_rRdPtr) ?
	       main_nn_pes_7_partialSumIdxQ2_rCache[31:0] :
	       main_nn_pes_7_partialSumIdxQ2_memory_DOB ;
  assign main_nn_pes_7_partialSumQ_wDataOut_wget =
	     (main_nn_pes_7_partialSumQ_rCache[40] &&
	      main_nn_pes_7_partialSumQ_rCache[39:32] ==
	      main_nn_pes_7_partialSumQ_rRdPtr) ?
	       main_nn_pes_7_partialSumQ_rCache[31:0] :
	       main_nn_pes_7_partialSumQ_memory_DOB ;
  assign main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_0_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_0_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_0_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_0_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_0_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_0_partialSumQ_rWrPtr &&
	     main_nn_pes_0_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_1_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_1_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_1_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_1_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_1_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_1_partialSumQ_rWrPtr &&
	     main_nn_pes_1_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_2_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_2_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_2_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_2_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_2_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_2_partialSumQ_rWrPtr &&
	     main_nn_pes_2_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_3_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_3_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_3_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_3_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_3_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_3_partialSumQ_rWrPtr &&
	     main_nn_pes_3_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_4_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_4_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_4_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_4_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_4_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_4_partialSumQ_rWrPtr &&
	     main_nn_pes_4_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_5_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_5_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_5_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_5_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_5_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_5_partialSumQ_rWrPtr &&
	     main_nn_pes_5_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_6_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_6_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_6_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_6_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_6_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_6_partialSumQ_rWrPtr &&
	     main_nn_pes_6_fadd_outQ_EMPTY_N ;
  assign main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas =
	     main_nn_pes_7_partialSumIdxQ2_rRdPtr + 8'd64 !=
	     main_nn_pes_7_partialSumIdxQ2_rWrPtr &&
	     main_nn_pes_7_partialSumIdxQ1_EMPTY_N ;
  assign main_nn_pes_7_partialSumQ_pwEnqueue_whas =
	     main_nn_pes_7_partialSumQ_rRdPtr + 8'd64 !=
	     main_nn_pes_7_partialSumQ_rWrPtr &&
	     main_nn_pes_7_fadd_outQ_EMPTY_N ;

  // register main_cycleCount
  assign main_cycleCount_D_IN = main_cycleCount + 32'd1 ;
  assign main_cycleCount_EN = 1'd1 ;

  // register main_inputBuffer
  assign main_inputBuffer_D_IN = nv__h72186 ;
  assign main_inputBuffer_EN = WILL_FIRE_RL_main_recvInputFloat ;

  // register main_inputBufferCnt
  assign main_inputBufferCnt_D_IN =
	     (main_inputBufferCnt == 2'd3) ? 2'd0 : x__h72236 ;
  assign main_inputBufferCnt_EN = WILL_FIRE_RL_main_recvInputFloat ;

  // register main_inputDst
  assign main_inputDst_D_IN =
	     MUX_main_inputDst_write_1__SEL_1 ?
	       9'd170 :
	       MUX_main_inputDst_write_1__VAL_2 ;
  assign main_inputDst_EN =
	     WILL_FIRE_RL_main_recvInputFloat &&
	     main_inputBufferCnt == 2'd3 ||
	     WILL_FIRE_RL_main_recvInputDst ;

  // register main_lastCycle
  assign main_lastCycle_D_IN = main_cycleCount ;
  assign main_lastCycle_EN =
	     WILL_FIRE_RL_main_serializeOutput &&
	     main_outputBufferCnt == 3'd0 &&
	     (main_resultDataCount == 32'd0 || x__h72843[7:0] == 8'd0) ;

  // register main_lastEmitted
  assign main_lastEmitted_D_IN = main_resultDataCount ;
  assign main_lastEmitted_EN =
	     WILL_FIRE_RL_main_serializeOutput &&
	     main_outputBufferCnt == 3'd0 &&
	     (main_resultDataCount == 32'd0 || x__h72843[7:0] == 8'd0) ;

  // register main_memReadAddr
  assign main_memReadAddr_D_IN =
	     (x__h73463 == main_memWriteAddr) ? 24'd0 : x__h73463 ;
  assign main_memReadAddr_EN = MUX_mem_reqQ_enq_1__SEL_2 ;

  // register main_memReadBuffer
  assign main_memReadBuffer_D_IN =
	     { !main_memReadBuffer[16], mem_readRespQ_D_OUT } ;
  assign main_memReadBuffer_EN =
	     mem_readRespQ_EMPTY_N &&
	     (!main_memReadBuffer[16] || main_nn_weightInQs_0_FULL_N) ;

  // register main_memWriteAddr
  assign main_memWriteAddr_D_IN = main_memWriteAddr + 24'd1 ;
  assign main_memWriteAddr_EN = WILL_FIRE_RL_main_procMemWrite ;

  // register main_memWriteBuffer
  assign main_memWriteBuffer_D_IN =
	     { !main_memWriteBuffer[16], main_memWriteQ_D_OUT[31:16] } ;
  assign main_memWriteBuffer_EN = WILL_FIRE_RL_main_procMemWrite ;

  // register main_memWriteDone
  assign main_memWriteDone_D_IN = 1'd1 ;
  assign main_memWriteDone_EN =
	     WILL_FIRE_RL_main_recvInputFloat &&
	     main_inputBufferCnt == 2'd3 &&
	     main_inputDst[7:0] != 8'hFF ;

  // register main_nn_pes_0_curMacIdx
  assign main_nn_pes_0_curMacIdx_D_IN =
	     main_nn_pes_0_curMacIdx_85_PLUS_1_01_SRL_6_02__ETC___d503 ?
	       x__h13468 :
	       32'd0 ;
  assign main_nn_pes_0_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_0_enqMac ;

  // register main_nn_pes_0_curOutputIdx
  assign main_nn_pes_0_curOutputIdx_D_IN =
	     (x__h13409 < 8'd64) ? x__h13409 : 8'd0 ;
  assign main_nn_pes_0_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac &&
	     !main_nn_pes_0_curMacIdx_85_PLUS_1_01_SRL_6_02__ETC___d503 ;

  // register main_nn_pes_0_cycleCount
  assign main_nn_pes_0_cycleCount_D_IN = main_nn_pes_0_cycleCount + 32'd1 ;
  assign main_nn_pes_0_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_0_fmult_mult18_dataInFlightDn
  assign main_nn_pes_0_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_0_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_0_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_0_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_0_fmult_outQ_FULL_N ;

  // register main_nn_pes_0_fmult_mult18_dataInFlightUp
  assign main_nn_pes_0_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_0_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_0_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac ;

  // register main_nn_pes_0_fmult_mult18_validMap
  assign main_nn_pes_0_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_0_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_0_enqMac } ;
  assign main_nn_pes_0_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_0_lastInputIdx
  assign main_nn_pes_0_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_0_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_0_partialSumIdxQ2_rCache
  assign main_nn_pes_0_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_0_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_0_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_0_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_0_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_0_partialSumIdxQ2_rRdPtr_D_IN = x__h11737 ;
  assign main_nn_pes_0_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults ;

  // register main_nn_pes_0_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_0_partialSumIdxQ2_rWrPtr_D_IN = x__h11614 ;
  assign main_nn_pes_0_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_0_partialSumQ_rCache
  assign main_nn_pes_0_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_0_partialSumQ_rWrPtr,
	       main_nn_pes_0_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_0_fadd_outQ_D_OUT[31],
	       main_nn_pes_0_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_0_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_0_partialSumQ_rCache_EN =
	     main_nn_pes_0_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_0_partialSumQ_rRdPtr
  assign main_nn_pes_0_partialSumQ_rRdPtr_D_IN = x__h12823 ;
  assign main_nn_pes_0_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults ;

  // register main_nn_pes_0_partialSumQ_rWrPtr
  assign main_nn_pes_0_partialSumQ_rWrPtr_D_IN = x__h12716 ;
  assign main_nn_pes_0_partialSumQ_rWrPtr_EN =
	     main_nn_pes_0_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_0_weightReplicateCnt
  assign main_nn_pes_0_weightReplicateCnt_D_IN =
	     (main_nn_pes_0_weightReplicateCnt == 8'd0) ? 8'd63 : x__h14601 ;
  assign main_nn_pes_0_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_0_relayWeightIn ;

  // register main_nn_pes_0_weightReplicateReg
  assign main_nn_pes_0_weightReplicateReg_D_IN =
	     main_nn_pes_0_weightInQ_D_OUT ;
  assign main_nn_pes_0_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_0_relayWeightIn &&
	     main_nn_pes_0_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_1_curMacIdx
  assign main_nn_pes_1_curMacIdx_D_IN =
	     main_nn_pes_1_curMacIdx_87_PLUS_1_03_SRL_6_04__ETC___d905 ?
	       x__h22329 :
	       32'd0 ;
  assign main_nn_pes_1_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_1_enqMac ;

  // register main_nn_pes_1_curOutputIdx
  assign main_nn_pes_1_curOutputIdx_D_IN =
	     (x__h22270 < 8'd64) ? x__h22270 : 8'd1 ;
  assign main_nn_pes_1_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac &&
	     !main_nn_pes_1_curMacIdx_87_PLUS_1_03_SRL_6_04__ETC___d905 ;

  // register main_nn_pes_1_cycleCount
  assign main_nn_pes_1_cycleCount_D_IN = main_nn_pes_1_cycleCount + 32'd1 ;
  assign main_nn_pes_1_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_1_fmult_mult18_dataInFlightDn
  assign main_nn_pes_1_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_1_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_1_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_1_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_1_fmult_outQ_FULL_N ;

  // register main_nn_pes_1_fmult_mult18_dataInFlightUp
  assign main_nn_pes_1_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_1_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_1_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac ;

  // register main_nn_pes_1_fmult_mult18_validMap
  assign main_nn_pes_1_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_1_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_1_enqMac } ;
  assign main_nn_pes_1_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_1_lastInputIdx
  assign main_nn_pes_1_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_1_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_1_partialSumIdxQ2_rCache
  assign main_nn_pes_1_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_1_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_1_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_1_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_1_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_1_partialSumIdxQ2_rRdPtr_D_IN = x__h20598 ;
  assign main_nn_pes_1_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults ;

  // register main_nn_pes_1_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_1_partialSumIdxQ2_rWrPtr_D_IN = x__h20475 ;
  assign main_nn_pes_1_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_1_partialSumQ_rCache
  assign main_nn_pes_1_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_1_partialSumQ_rWrPtr,
	       main_nn_pes_1_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_1_fadd_outQ_D_OUT[31],
	       main_nn_pes_1_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_1_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_1_partialSumQ_rCache_EN =
	     main_nn_pes_1_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_1_partialSumQ_rRdPtr
  assign main_nn_pes_1_partialSumQ_rRdPtr_D_IN = x__h21684 ;
  assign main_nn_pes_1_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults ;

  // register main_nn_pes_1_partialSumQ_rWrPtr
  assign main_nn_pes_1_partialSumQ_rWrPtr_D_IN = x__h21577 ;
  assign main_nn_pes_1_partialSumQ_rWrPtr_EN =
	     main_nn_pes_1_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_1_weightReplicateCnt
  assign main_nn_pes_1_weightReplicateCnt_D_IN =
	     (main_nn_pes_1_weightReplicateCnt == 8'd0) ? 8'd63 : x__h23462 ;
  assign main_nn_pes_1_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_1_relayWeightIn ;

  // register main_nn_pes_1_weightReplicateReg
  assign main_nn_pes_1_weightReplicateReg_D_IN =
	     main_nn_pes_1_weightInQ_D_OUT ;
  assign main_nn_pes_1_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_1_relayWeightIn &&
	     main_nn_pes_1_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_2_curMacIdx
  assign main_nn_pes_2_curMacIdx_D_IN =
	     main_nn_pes_2_curMacIdx_289_PLUS_1_305_SRL_6_3_ETC___d1307 ?
	       x__h30277 :
	       32'd0 ;
  assign main_nn_pes_2_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_2_enqMac ;

  // register main_nn_pes_2_curOutputIdx
  assign main_nn_pes_2_curOutputIdx_D_IN =
	     (x__h30218 < 8'd64) ? x__h30218 : 8'd2 ;
  assign main_nn_pes_2_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac &&
	     !main_nn_pes_2_curMacIdx_289_PLUS_1_305_SRL_6_3_ETC___d1307 ;

  // register main_nn_pes_2_cycleCount
  assign main_nn_pes_2_cycleCount_D_IN = main_nn_pes_2_cycleCount + 32'd1 ;
  assign main_nn_pes_2_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_2_fmult_mult18_dataInFlightDn
  assign main_nn_pes_2_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_2_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_2_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_2_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_2_fmult_outQ_FULL_N ;

  // register main_nn_pes_2_fmult_mult18_dataInFlightUp
  assign main_nn_pes_2_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_2_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_2_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac ;

  // register main_nn_pes_2_fmult_mult18_validMap
  assign main_nn_pes_2_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_2_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_2_enqMac } ;
  assign main_nn_pes_2_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_2_lastInputIdx
  assign main_nn_pes_2_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_2_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_2_partialSumIdxQ2_rCache
  assign main_nn_pes_2_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_2_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_2_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_2_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_2_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_2_partialSumIdxQ2_rRdPtr_D_IN = x__h28546 ;
  assign main_nn_pes_2_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults ;

  // register main_nn_pes_2_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_2_partialSumIdxQ2_rWrPtr_D_IN = x__h28423 ;
  assign main_nn_pes_2_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_2_partialSumQ_rCache
  assign main_nn_pes_2_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_2_partialSumQ_rWrPtr,
	       main_nn_pes_2_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_2_fadd_outQ_D_OUT[31],
	       main_nn_pes_2_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_2_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_2_partialSumQ_rCache_EN =
	     main_nn_pes_2_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_2_partialSumQ_rRdPtr
  assign main_nn_pes_2_partialSumQ_rRdPtr_D_IN = x__h29632 ;
  assign main_nn_pes_2_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults ;

  // register main_nn_pes_2_partialSumQ_rWrPtr
  assign main_nn_pes_2_partialSumQ_rWrPtr_D_IN = x__h29525 ;
  assign main_nn_pes_2_partialSumQ_rWrPtr_EN =
	     main_nn_pes_2_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_2_weightReplicateCnt
  assign main_nn_pes_2_weightReplicateCnt_D_IN =
	     (main_nn_pes_2_weightReplicateCnt == 8'd0) ? 8'd63 : x__h31410 ;
  assign main_nn_pes_2_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_2_relayWeightIn ;

  // register main_nn_pes_2_weightReplicateReg
  assign main_nn_pes_2_weightReplicateReg_D_IN =
	     main_nn_pes_2_weightInQ_D_OUT ;
  assign main_nn_pes_2_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_2_relayWeightIn &&
	     main_nn_pes_2_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_3_curMacIdx
  assign main_nn_pes_3_curMacIdx_D_IN =
	     main_nn_pes_3_curMacIdx_691_PLUS_1_707_SRL_6_7_ETC___d1709 ?
	       x__h38225 :
	       32'd0 ;
  assign main_nn_pes_3_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_3_enqMac ;

  // register main_nn_pes_3_curOutputIdx
  assign main_nn_pes_3_curOutputIdx_D_IN =
	     (x__h38166 < 8'd64) ? x__h38166 : 8'd3 ;
  assign main_nn_pes_3_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac &&
	     !main_nn_pes_3_curMacIdx_691_PLUS_1_707_SRL_6_7_ETC___d1709 ;

  // register main_nn_pes_3_cycleCount
  assign main_nn_pes_3_cycleCount_D_IN = main_nn_pes_3_cycleCount + 32'd1 ;
  assign main_nn_pes_3_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_3_fmult_mult18_dataInFlightDn
  assign main_nn_pes_3_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_3_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_3_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_3_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_3_fmult_outQ_FULL_N ;

  // register main_nn_pes_3_fmult_mult18_dataInFlightUp
  assign main_nn_pes_3_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_3_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_3_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac ;

  // register main_nn_pes_3_fmult_mult18_validMap
  assign main_nn_pes_3_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_3_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_3_enqMac } ;
  assign main_nn_pes_3_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_3_lastInputIdx
  assign main_nn_pes_3_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_3_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_3_partialSumIdxQ2_rCache
  assign main_nn_pes_3_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_3_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_3_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_3_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_3_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_3_partialSumIdxQ2_rRdPtr_D_IN = x__h36494 ;
  assign main_nn_pes_3_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults ;

  // register main_nn_pes_3_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_3_partialSumIdxQ2_rWrPtr_D_IN = x__h36371 ;
  assign main_nn_pes_3_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_3_partialSumQ_rCache
  assign main_nn_pes_3_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_3_partialSumQ_rWrPtr,
	       main_nn_pes_3_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_3_fadd_outQ_D_OUT[31],
	       main_nn_pes_3_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_3_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_3_partialSumQ_rCache_EN =
	     main_nn_pes_3_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_3_partialSumQ_rRdPtr
  assign main_nn_pes_3_partialSumQ_rRdPtr_D_IN = x__h37580 ;
  assign main_nn_pes_3_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults ;

  // register main_nn_pes_3_partialSumQ_rWrPtr
  assign main_nn_pes_3_partialSumQ_rWrPtr_D_IN = x__h37473 ;
  assign main_nn_pes_3_partialSumQ_rWrPtr_EN =
	     main_nn_pes_3_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_3_weightReplicateCnt
  assign main_nn_pes_3_weightReplicateCnt_D_IN =
	     (main_nn_pes_3_weightReplicateCnt == 8'd0) ? 8'd63 : x__h39358 ;
  assign main_nn_pes_3_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_3_relayWeightIn ;

  // register main_nn_pes_3_weightReplicateReg
  assign main_nn_pes_3_weightReplicateReg_D_IN =
	     main_nn_pes_3_weightInQ_D_OUT ;
  assign main_nn_pes_3_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_3_relayWeightIn &&
	     main_nn_pes_3_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_4_curMacIdx
  assign main_nn_pes_4_curMacIdx_D_IN =
	     main_nn_pes_4_curMacIdx_093_PLUS_1_109_SRL_6_1_ETC___d2111 ?
	       x__h46173 :
	       32'd0 ;
  assign main_nn_pes_4_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_4_enqMac ;

  // register main_nn_pes_4_curOutputIdx
  assign main_nn_pes_4_curOutputIdx_D_IN =
	     (x__h46114 < 8'd64) ? x__h46114 : 8'd4 ;
  assign main_nn_pes_4_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac &&
	     !main_nn_pes_4_curMacIdx_093_PLUS_1_109_SRL_6_1_ETC___d2111 ;

  // register main_nn_pes_4_cycleCount
  assign main_nn_pes_4_cycleCount_D_IN = main_nn_pes_4_cycleCount + 32'd1 ;
  assign main_nn_pes_4_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_4_fmult_mult18_dataInFlightDn
  assign main_nn_pes_4_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_4_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_4_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_4_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_4_fmult_outQ_FULL_N ;

  // register main_nn_pes_4_fmult_mult18_dataInFlightUp
  assign main_nn_pes_4_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_4_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_4_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac ;

  // register main_nn_pes_4_fmult_mult18_validMap
  assign main_nn_pes_4_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_4_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_4_enqMac } ;
  assign main_nn_pes_4_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_4_lastInputIdx
  assign main_nn_pes_4_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_4_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_4_partialSumIdxQ2_rCache
  assign main_nn_pes_4_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_4_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_4_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_4_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_4_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_4_partialSumIdxQ2_rRdPtr_D_IN = x__h44442 ;
  assign main_nn_pes_4_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults ;

  // register main_nn_pes_4_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_4_partialSumIdxQ2_rWrPtr_D_IN = x__h44319 ;
  assign main_nn_pes_4_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_4_partialSumQ_rCache
  assign main_nn_pes_4_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_4_partialSumQ_rWrPtr,
	       main_nn_pes_4_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_4_fadd_outQ_D_OUT[31],
	       main_nn_pes_4_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_4_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_4_partialSumQ_rCache_EN =
	     main_nn_pes_4_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_4_partialSumQ_rRdPtr
  assign main_nn_pes_4_partialSumQ_rRdPtr_D_IN = x__h45528 ;
  assign main_nn_pes_4_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults ;

  // register main_nn_pes_4_partialSumQ_rWrPtr
  assign main_nn_pes_4_partialSumQ_rWrPtr_D_IN = x__h45421 ;
  assign main_nn_pes_4_partialSumQ_rWrPtr_EN =
	     main_nn_pes_4_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_4_weightReplicateCnt
  assign main_nn_pes_4_weightReplicateCnt_D_IN =
	     (main_nn_pes_4_weightReplicateCnt == 8'd0) ? 8'd63 : x__h47306 ;
  assign main_nn_pes_4_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_4_relayWeightIn ;

  // register main_nn_pes_4_weightReplicateReg
  assign main_nn_pes_4_weightReplicateReg_D_IN =
	     main_nn_pes_4_weightInQ_D_OUT ;
  assign main_nn_pes_4_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_4_relayWeightIn &&
	     main_nn_pes_4_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_5_curMacIdx
  assign main_nn_pes_5_curMacIdx_D_IN =
	     main_nn_pes_5_curMacIdx_495_PLUS_1_511_SRL_6_5_ETC___d2513 ?
	       x__h54121 :
	       32'd0 ;
  assign main_nn_pes_5_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_5_enqMac ;

  // register main_nn_pes_5_curOutputIdx
  assign main_nn_pes_5_curOutputIdx_D_IN =
	     (x__h54062 < 8'd64) ? x__h54062 : 8'd5 ;
  assign main_nn_pes_5_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac &&
	     !main_nn_pes_5_curMacIdx_495_PLUS_1_511_SRL_6_5_ETC___d2513 ;

  // register main_nn_pes_5_cycleCount
  assign main_nn_pes_5_cycleCount_D_IN = main_nn_pes_5_cycleCount + 32'd1 ;
  assign main_nn_pes_5_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_5_fmult_mult18_dataInFlightDn
  assign main_nn_pes_5_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_5_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_5_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_5_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_5_fmult_outQ_FULL_N ;

  // register main_nn_pes_5_fmult_mult18_dataInFlightUp
  assign main_nn_pes_5_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_5_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_5_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac ;

  // register main_nn_pes_5_fmult_mult18_validMap
  assign main_nn_pes_5_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_5_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_5_enqMac } ;
  assign main_nn_pes_5_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_5_lastInputIdx
  assign main_nn_pes_5_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_5_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_5_partialSumIdxQ2_rCache
  assign main_nn_pes_5_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_5_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_5_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_5_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_5_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_5_partialSumIdxQ2_rRdPtr_D_IN = x__h52390 ;
  assign main_nn_pes_5_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults ;

  // register main_nn_pes_5_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_5_partialSumIdxQ2_rWrPtr_D_IN = x__h52267 ;
  assign main_nn_pes_5_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_5_partialSumQ_rCache
  assign main_nn_pes_5_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_5_partialSumQ_rWrPtr,
	       main_nn_pes_5_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_5_fadd_outQ_D_OUT[31],
	       main_nn_pes_5_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_5_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_5_partialSumQ_rCache_EN =
	     main_nn_pes_5_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_5_partialSumQ_rRdPtr
  assign main_nn_pes_5_partialSumQ_rRdPtr_D_IN = x__h53476 ;
  assign main_nn_pes_5_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults ;

  // register main_nn_pes_5_partialSumQ_rWrPtr
  assign main_nn_pes_5_partialSumQ_rWrPtr_D_IN = x__h53369 ;
  assign main_nn_pes_5_partialSumQ_rWrPtr_EN =
	     main_nn_pes_5_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_5_weightReplicateCnt
  assign main_nn_pes_5_weightReplicateCnt_D_IN =
	     (main_nn_pes_5_weightReplicateCnt == 8'd0) ? 8'd63 : x__h55254 ;
  assign main_nn_pes_5_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_5_relayWeightIn ;

  // register main_nn_pes_5_weightReplicateReg
  assign main_nn_pes_5_weightReplicateReg_D_IN =
	     main_nn_pes_5_weightInQ_D_OUT ;
  assign main_nn_pes_5_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_5_relayWeightIn &&
	     main_nn_pes_5_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_6_curMacIdx
  assign main_nn_pes_6_curMacIdx_D_IN =
	     main_nn_pes_6_curMacIdx_897_PLUS_1_913_SRL_6_9_ETC___d2915 ?
	       x__h62069 :
	       32'd0 ;
  assign main_nn_pes_6_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_6_enqMac ;

  // register main_nn_pes_6_curOutputIdx
  assign main_nn_pes_6_curOutputIdx_D_IN =
	     (x__h62010 < 8'd64) ? x__h62010 : 8'd6 ;
  assign main_nn_pes_6_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac &&
	     !main_nn_pes_6_curMacIdx_897_PLUS_1_913_SRL_6_9_ETC___d2915 ;

  // register main_nn_pes_6_cycleCount
  assign main_nn_pes_6_cycleCount_D_IN = main_nn_pes_6_cycleCount + 32'd1 ;
  assign main_nn_pes_6_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_6_fmult_mult18_dataInFlightDn
  assign main_nn_pes_6_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_6_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_6_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_6_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_6_fmult_outQ_FULL_N ;

  // register main_nn_pes_6_fmult_mult18_dataInFlightUp
  assign main_nn_pes_6_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_6_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_6_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac ;

  // register main_nn_pes_6_fmult_mult18_validMap
  assign main_nn_pes_6_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_6_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_6_enqMac } ;
  assign main_nn_pes_6_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_6_lastInputIdx
  assign main_nn_pes_6_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_6_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_6_partialSumIdxQ2_rCache
  assign main_nn_pes_6_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_6_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_6_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_6_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_6_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_6_partialSumIdxQ2_rRdPtr_D_IN = x__h60338 ;
  assign main_nn_pes_6_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults ;

  // register main_nn_pes_6_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_6_partialSumIdxQ2_rWrPtr_D_IN = x__h60215 ;
  assign main_nn_pes_6_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_6_partialSumQ_rCache
  assign main_nn_pes_6_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_6_partialSumQ_rWrPtr,
	       main_nn_pes_6_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_6_fadd_outQ_D_OUT[31],
	       main_nn_pes_6_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_6_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_6_partialSumQ_rCache_EN =
	     main_nn_pes_6_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_6_partialSumQ_rRdPtr
  assign main_nn_pes_6_partialSumQ_rRdPtr_D_IN = x__h61424 ;
  assign main_nn_pes_6_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults ;

  // register main_nn_pes_6_partialSumQ_rWrPtr
  assign main_nn_pes_6_partialSumQ_rWrPtr_D_IN = x__h61317 ;
  assign main_nn_pes_6_partialSumQ_rWrPtr_EN =
	     main_nn_pes_6_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_6_weightReplicateCnt
  assign main_nn_pes_6_weightReplicateCnt_D_IN =
	     (main_nn_pes_6_weightReplicateCnt == 8'd0) ? 8'd63 : x__h63202 ;
  assign main_nn_pes_6_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_6_relayWeightIn ;

  // register main_nn_pes_6_weightReplicateReg
  assign main_nn_pes_6_weightReplicateReg_D_IN =
	     main_nn_pes_6_weightInQ_D_OUT ;
  assign main_nn_pes_6_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_6_relayWeightIn &&
	     main_nn_pes_6_weightReplicateCnt == 8'd0 ;

  // register main_nn_pes_7_curMacIdx
  assign main_nn_pes_7_curMacIdx_D_IN =
	     main_nn_pes_7_curMacIdx_299_PLUS_1_315_SRL_6_3_ETC___d3317 ?
	       x__h70017 :
	       32'd0 ;
  assign main_nn_pes_7_curMacIdx_EN = WILL_FIRE_RL_main_nn_pes_7_enqMac ;

  // register main_nn_pes_7_curOutputIdx
  assign main_nn_pes_7_curOutputIdx_D_IN =
	     (x__h69958 < 8'd64) ? x__h69958 : 8'd7 ;
  assign main_nn_pes_7_curOutputIdx_EN =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac &&
	     !main_nn_pes_7_curMacIdx_299_PLUS_1_315_SRL_6_3_ETC___d3317 ;

  // register main_nn_pes_7_cycleCount
  assign main_nn_pes_7_cycleCount_D_IN = main_nn_pes_7_cycleCount + 32'd1 ;
  assign main_nn_pes_7_cycleCount_EN = 1'd1 ;

  // register main_nn_pes_7_fmult_mult18_dataInFlightDn
  assign main_nn_pes_7_fmult_mult18_dataInFlightDn_D_IN =
	     main_nn_pes_7_fmult_mult18_dataInFlightDn + 3'd1 ;
  assign main_nn_pes_7_fmult_mult18_dataInFlightDn_EN =
	     main_nn_pes_7_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_7_fmult_outQ_FULL_N ;

  // register main_nn_pes_7_fmult_mult18_dataInFlightUp
  assign main_nn_pes_7_fmult_mult18_dataInFlightUp_D_IN =
	     main_nn_pes_7_fmult_mult18_dataInFlightUp + 3'd1 ;
  assign main_nn_pes_7_fmult_mult18_dataInFlightUp_EN =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac ;

  // register main_nn_pes_7_fmult_mult18_validMap
  assign main_nn_pes_7_fmult_mult18_validMap_D_IN =
	     { main_nn_pes_7_fmult_mult18_validMap[2:0],
	       WILL_FIRE_RL_main_nn_pes_7_enqMac } ;
  assign main_nn_pes_7_fmult_mult18_validMap_EN = 1'b1 ;

  // register main_nn_pes_7_lastInputIdx
  assign main_nn_pes_7_lastInputIdx_D_IN = 8'h0 ;
  assign main_nn_pes_7_lastInputIdx_EN = 1'b0 ;

  // register main_nn_pes_7_partialSumIdxQ2_rCache
  assign main_nn_pes_7_partialSumIdxQ2_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_7_partialSumIdxQ2_rWrPtr,
	       main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ?
		 main_nn_pes_7_partialSumIdxQ1_D_OUT :
		 32'd0 } ;
  assign main_nn_pes_7_partialSumIdxQ2_rCache_EN =
	     main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_7_partialSumIdxQ2_rRdPtr
  assign main_nn_pes_7_partialSumIdxQ2_rRdPtr_D_IN = x__h68286 ;
  assign main_nn_pes_7_partialSumIdxQ2_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults ;

  // register main_nn_pes_7_partialSumIdxQ2_rWrPtr
  assign main_nn_pes_7_partialSumIdxQ2_rWrPtr_D_IN = x__h68163 ;
  assign main_nn_pes_7_partialSumIdxQ2_rWrPtr_EN =
	     main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ;

  // register main_nn_pes_7_partialSumQ_rCache
  assign main_nn_pes_7_partialSumQ_rCache_D_IN =
	     { 1'd1,
	       main_nn_pes_7_partialSumQ_rWrPtr,
	       main_nn_pes_7_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_7_fadd_outQ_D_OUT[31],
	       main_nn_pes_7_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_7_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_7_partialSumQ_rCache_EN =
	     main_nn_pes_7_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_7_partialSumQ_rRdPtr
  assign main_nn_pes_7_partialSumQ_rRdPtr_D_IN = x__h69372 ;
  assign main_nn_pes_7_partialSumQ_rRdPtr_EN =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults ;

  // register main_nn_pes_7_partialSumQ_rWrPtr
  assign main_nn_pes_7_partialSumQ_rWrPtr_D_IN = x__h69265 ;
  assign main_nn_pes_7_partialSumQ_rWrPtr_EN =
	     main_nn_pes_7_partialSumQ_pwEnqueue_whas ;

  // register main_nn_pes_7_weightReplicateCnt
  assign main_nn_pes_7_weightReplicateCnt_D_IN =
	     (main_nn_pes_7_weightReplicateCnt == 8'd0) ? 8'd63 : x__h71150 ;
  assign main_nn_pes_7_weightReplicateCnt_EN =
	     WILL_FIRE_RL_main_nn_pes_7_relayWeightIn ;

  // register main_nn_pes_7_weightReplicateReg
  assign main_nn_pes_7_weightReplicateReg_D_IN =
	     main_nn_pes_7_weightInQ_D_OUT ;
  assign main_nn_pes_7_weightReplicateReg_EN =
	     WILL_FIRE_RL_main_nn_pes_7_relayWeightIn &&
	     main_nn_pes_7_weightReplicateCnt == 8'd0 ;

  // register main_nn_weightInIdx_0
  assign main_nn_weightInIdx_0_D_IN = main_nn_weightInIdx_0 + 16'd1 ;
  assign main_nn_weightInIdx_0_EN =
	     main_nn_weightInQs_0_EMPTY_N && main_nn_weightInQs_1_FULL_N &&
	     (main_nn_weightInIdx_0[2:0] != 3'd0 ||
	      main_nn_pes_0_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_1
  assign main_nn_weightInIdx_1_D_IN = main_nn_weightInIdx_1 + 16'd1 ;
  assign main_nn_weightInIdx_1_EN =
	     main_nn_weightInQs_1_EMPTY_N && main_nn_weightInQs_2_FULL_N &&
	     (main_nn_weightInIdx_1[2:0] != 3'd1 ||
	      main_nn_pes_1_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_2
  assign main_nn_weightInIdx_2_D_IN = main_nn_weightInIdx_2 + 16'd1 ;
  assign main_nn_weightInIdx_2_EN =
	     main_nn_weightInQs_2_EMPTY_N && main_nn_weightInQs_3_FULL_N &&
	     (main_nn_weightInIdx_2[2:0] != 3'd2 ||
	      main_nn_pes_2_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_3
  assign main_nn_weightInIdx_3_D_IN = main_nn_weightInIdx_3 + 16'd1 ;
  assign main_nn_weightInIdx_3_EN =
	     main_nn_weightInQs_3_EMPTY_N && main_nn_weightInQs_4_FULL_N &&
	     (main_nn_weightInIdx_3[2:0] != 3'd3 ||
	      main_nn_pes_3_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_4
  assign main_nn_weightInIdx_4_D_IN = main_nn_weightInIdx_4 + 16'd1 ;
  assign main_nn_weightInIdx_4_EN =
	     main_nn_weightInQs_4_EMPTY_N && main_nn_weightInQs_5_FULL_N &&
	     (main_nn_weightInIdx_4[2:0] != 3'd4 ||
	      main_nn_pes_4_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_5
  assign main_nn_weightInIdx_5_D_IN = main_nn_weightInIdx_5 + 16'd1 ;
  assign main_nn_weightInIdx_5_EN =
	     main_nn_weightInQs_5_EMPTY_N && main_nn_weightInQs_6_FULL_N &&
	     (main_nn_weightInIdx_5[2:0] != 3'd5 ||
	      main_nn_pes_5_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_6
  assign main_nn_weightInIdx_6_D_IN = main_nn_weightInIdx_6 + 16'd1 ;
  assign main_nn_weightInIdx_6_EN =
	     main_nn_weightInQs_6_EMPTY_N && main_nn_weightInQs_7_FULL_N &&
	     (main_nn_weightInIdx_6[2:0] != 3'd6 ||
	      main_nn_pes_6_weightInQ_FULL_N) ;

  // register main_nn_weightInIdx_7
  assign main_nn_weightInIdx_7_D_IN = main_nn_weightInIdx_7 + 16'd1 ;
  assign main_nn_weightInIdx_7_EN =
	     main_nn_weightInQs_7_EMPTY_N &&
	     (main_nn_weightInIdx_7[2:0] != 3'd7 ||
	      main_nn_pes_7_weightInQ_FULL_N) ;

  // register main_outputBuffer
  assign main_outputBuffer_D_IN =
	     (main_outputBufferCnt == 3'd0) ? x__h72951 : x__h72825 ;
  assign main_outputBuffer_EN = WILL_FIRE_RL_main_serializeOutput ;

  // register main_outputBufferCnt
  assign main_outputBufferCnt_D_IN =
	     (main_outputBufferCnt == 3'd0) ? 3'd5 : x__h72591 ;
  assign main_outputBufferCnt_EN = WILL_FIRE_RL_main_serializeOutput ;

  // register main_resultDataCount
  assign main_resultDataCount_D_IN = x__h72843 ;
  assign main_resultDataCount_EN =
	     WILL_FIRE_RL_main_serializeOutput &&
	     main_outputBufferCnt == 3'd0 ;

  // register mem_addr_out
  always@(mem_state or
	  x__h3991 or
	  IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d151)
  begin
    case (mem_state)
      3'd1: mem_addr_out_D_IN = x__h3991;
      3'd4:
	  mem_addr_out_D_IN =
	      IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d151;
      default: mem_addr_out_D_IN = 13'b0001000110000;
    endcase
  end
  assign mem_addr_out_EN =
	     WILL_FIRE_RL_mem_controllerFSM &&
	     (mem_state == 3'd4 || mem_state == 3'd1 || mem_state == 3'd3) ;

  // register mem_command_out
  always@(mem_state or
	  IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d137)
  begin
    case (mem_state)
      3'd1: mem_command_out_D_IN = 4'b0001;
      3'd2: mem_command_out_D_IN = 4'b0100;
      3'd4:
	  mem_command_out_D_IN =
	      IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d137;
      default: mem_command_out_D_IN = 4'b0;
    endcase
  end
  assign mem_command_out_EN =
	     WILL_FIRE_RL_mem_controllerFSM &&
	     (mem_state == 3'd4 || mem_state == 3'd1 || mem_state == 3'd2 ||
	      mem_state == 3'd3) ;

  // register mem_counter
  assign mem_counter_D_IN =
	     WILL_FIRE_RL_mem_init ?
	       MUX_mem_counter_write_1__VAL_1 :
	       MUX_mem_counter_write_1__VAL_2 ;
  assign mem_counter_EN =
	     WILL_FIRE_RL_mem_init || WILL_FIRE_RL_mem_controllerFSM ;

  // register mem_cur_cmd_address
  assign mem_cur_cmd_address_D_IN = mem_reqQ_D_OUT[40:17] ;
  assign mem_cur_cmd_address_EN =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd0 &&
	     mem_counter_9_ULT_780___d64 &&
	     mem_reqQ_EMPTY_N ;

  // register mem_cur_cmd_isRead
  assign mem_cur_cmd_isRead_D_IN = !mem_reqQ_D_OUT[0] ;
  assign mem_cur_cmd_isRead_EN =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd0 &&
	     mem_counter_9_ULT_780___d64 &&
	     mem_reqQ_EMPTY_N ;

  // register mem_cur_cmd_wdata
  assign mem_cur_cmd_wdata_D_IN = mem_reqQ_D_OUT[16:1] ;
  assign mem_cur_cmd_wdata_EN =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd0 &&
	     mem_counter_9_ULT_780___d64 &&
	     mem_reqQ_EMPTY_N ;

  // register mem_delay
  always@(mem_state or
	  x__h2827 or
	  mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 or
	  SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133)
  begin
    case (mem_state)
      3'd1: mem_delay_D_IN = 4'd1;
      3'd2: mem_delay_D_IN = 4'd7;
      3'd3: mem_delay_D_IN = 4'd0;
      3'd4:
	  mem_delay_D_IN =
	      mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ?
		(SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 ?
		   4'd2 :
		   4'd1) :
		4'd1;
      default: mem_delay_D_IN = x__h2827;
    endcase
  end
  assign mem_delay_EN =
	     WILL_FIRE_RL_mem_controllerFSM &&
	     (mem_state == 3'd4 || mem_state == 3'd1 || mem_state == 3'd2 ||
	      mem_state == 3'd3 ||
	      mem_state == 3'd6 && mem_delay != 4'd0) ;

  // register mem_dqm
  assign mem_dqm_D_IN = 2'd0 ;
  assign mem_dqm_EN = WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd2 ;

  // register mem_open_bank
  assign mem_open_bank_D_IN =
	     (mem_state == 3'd4) ?
	       (mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ?
		  x__h3730 :
		  x__h3174) :
	       4'd0 ;
  assign mem_open_bank_EN =
	     WILL_FIRE_RL_mem_controllerFSM &&
	     (mem_state == 3'd4 &&
	      (!SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 ||
	       !mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124) ||
	      mem_state == 3'd1) ;

  // register mem_open_rows
  assign mem_open_rows_D_IN =
	     { (mem_cur_cmd_address[10:9] == 2'd3) ?
		 mem_cur_cmd_address[23:11] :
		 mem_open_rows[51:39],
	       (mem_cur_cmd_address[10:9] == 2'd2) ?
		 mem_cur_cmd_address[23:11] :
		 mem_open_rows[38:26],
	       (mem_cur_cmd_address[10:9] == 2'd1) ?
		 mem_cur_cmd_address[23:11] :
		 mem_open_rows[25:13],
	       (mem_cur_cmd_address[10:9] == 2'd0) ?
		 mem_cur_cmd_address[23:11] :
		 mem_open_rows[12:0] } ;
  assign mem_open_rows_EN =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd4 &&
	     !mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ;

  // register mem_state
  assign mem_state_D_IN =
	     MUX_mem_state_write_1__SEL_1 ?
	       3'd1 :
	       MUX_mem_state_write_1__VAL_2 ;
  assign mem_state_EN =
	     WILL_FIRE_RL_mem_init &&
	     !mem_counter_9_PLUS_1_0_ULT_10000___d61 ||
	     WILL_FIRE_RL_mem_controllerFSM &&
	     mem_state_6_EQ_0_7_AND_mem_reqQ_notEmpty__6_OR_ETC___d104 ;

  // register mem_state_next
  always@(mem_state or
	  mem_dqm or
	  IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d171)
  begin
    case (mem_state)
      3'd1: mem_state_next_D_IN = (mem_dqm == 2'd0) ? 3'd2 : 3'd3;
      3'd2: mem_state_next_D_IN = (mem_dqm == 2'd0) ? 3'd0 : 3'd2;
      3'd4:
	  mem_state_next_D_IN =
	      IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d171;
      default: mem_state_next_D_IN = 3'd2;
    endcase
  end
  assign mem_state_next_EN =
	     WILL_FIRE_RL_mem_controllerFSM &&
	     (mem_state == 3'd4 || mem_state == 3'd1 || mem_state == 3'd2 ||
	      mem_state == 3'd3) ;

  // register uartInWord
  assign uartInWord_D_IN = uart_outQ_D_OUT ;
  assign uartInWord_EN = serialToMainQ_sFULL_N && uart_outQ_EMPTY_N ;

  // register uart_bleft
  assign uart_bleft_D_IN =
	     (uart_bleft == 4'd0 && !(uart_rxin != 4'd0)) ? 4'd9 : x__h983 ;
  assign uart_bleft_EN =
	     WILL_FIRE_RL_uart_insample &&
	     (uart_bleft == 4'd0 && !(uart_rxin != 4'd0) ||
	      uart_bleft != 4'd0 && uart_samplecountdown == 16'd0) ;

  // register uart_clkcnt
  assign uart_clkcnt_D_IN =
	     uart_clkcnt_PLUS_1_ULT_217___d3 ? x__h440 : 16'd0 ;
  assign uart_clkcnt_EN = WILL_FIRE_RL_uart_outcntclk ;

  // register uart_curoutd
  assign uart_curoutd_D_IN = (uart_curoutoff == 5'd0) ? x__h607 : x__h483 ;
  assign uart_curoutd_EN =
	     WILL_FIRE_RL_uart_outcntclk && !uart_clkcnt_PLUS_1_ULT_217___d3 ;

  // register uart_curoutoff
  assign uart_curoutoff_D_IN = (uart_curoutoff == 5'd0) ? 5'd11 : x__h591 ;
  assign uart_curoutoff_EN =
	     WILL_FIRE_RL_uart_outcntclk && !uart_clkcnt_PLUS_1_ULT_217___d3 ;

  // register uart_outword
  assign uart_outword_D_IN = { uart_rxin != 4'd0, uart_outword[7:1] } ;
  assign uart_outword_EN =
	     WILL_FIRE_RL_uart_insample && uart_bleft != 4'd0 &&
	     uart_samplecountdown == 16'd0 ;

  // register uart_rxin
  assign uart_rxin_D_IN = { ftdi_txd, uart_rxin[3:1] } ;
  assign uart_rxin_EN = 1'd1 ;

  // register uart_samplecountdown
  assign uart_samplecountdown_D_IN =
	     (uart_bleft == 4'd0 && !(uart_rxin != 4'd0)) ?
	       16'd325 :
	       ((uart_samplecountdown == 16'd0) ? 16'd217 : x__h852) ;
  assign uart_samplecountdown_EN =
	     WILL_FIRE_RL_uart_insample &&
	     (!(uart_rxin != 4'd0) || uart_bleft != 4'd0) ;

  // register uart_txdr
  assign uart_txdr_D_IN = uart_curoutd[0] ;
  assign uart_txdr_EN =
	     WILL_FIRE_RL_uart_outcntclk &&
	     !uart_clkcnt_PLUS_1_ULT_217___d3 &&
	     uart_curoutoff != 5'd0 ;

  // submodule mainToSerialQ
  assign mainToSerialQ_sD_IN = main_serialtxQ_D_OUT ;
  assign mainToSerialQ_sENQ =
	     mainToSerialQ_sFULL_N && main_serialtxQ_EMPTY_N ;
  assign mainToSerialQ_dDEQ = mainToSerialQ_dEMPTY_N && uart_inQ_FULL_N ;

  // submodule main_memWriteQ
  assign main_memWriteQ_D_IN = nv__h72186 ;
  assign main_memWriteQ_ENQ =
	     WILL_FIRE_RL_main_recvInputFloat &&
	     main_inputBufferCnt == 2'd3 &&
	     main_inputDst[7:0] == 8'hFF ;
  assign main_memWriteQ_DEQ =
	     WILL_FIRE_RL_main_procMemWrite && !main_memWriteBuffer[16] ;
  assign main_memWriteQ_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_0
  assign main_nn_dataInQs_0_D_IN = { nv__h72186, main_inputDst[7:0] } ;
  assign main_nn_dataInQs_0_ENQ =
	     WILL_FIRE_RL_main_recvInputFloat &&
	     main_inputBufferCnt == 2'd3 &&
	     main_inputDst[7:0] != 8'hFF ;
  assign main_nn_dataInQs_0_DEQ =
	     main_nn_dataInQs_0_EMPTY_N && main_nn_dataInQs_1_FULL_N &&
	     main_nn_pes_0_inputQ_FULL_N ;
  assign main_nn_dataInQs_0_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_1
  assign main_nn_dataInQs_1_D_IN = main_nn_dataInQs_0_D_OUT ;
  assign main_nn_dataInQs_1_ENQ =
	     main_nn_dataInQs_0_EMPTY_N && main_nn_dataInQs_1_FULL_N &&
	     main_nn_pes_0_inputQ_FULL_N ;
  assign main_nn_dataInQs_1_DEQ =
	     main_nn_dataInQs_1_EMPTY_N && main_nn_dataInQs_2_FULL_N &&
	     main_nn_pes_1_inputQ_FULL_N ;
  assign main_nn_dataInQs_1_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_2
  assign main_nn_dataInQs_2_D_IN = main_nn_dataInQs_1_D_OUT ;
  assign main_nn_dataInQs_2_ENQ =
	     main_nn_dataInQs_1_EMPTY_N && main_nn_dataInQs_2_FULL_N &&
	     main_nn_pes_1_inputQ_FULL_N ;
  assign main_nn_dataInQs_2_DEQ =
	     main_nn_dataInQs_2_EMPTY_N && main_nn_dataInQs_3_FULL_N &&
	     main_nn_pes_2_inputQ_FULL_N ;
  assign main_nn_dataInQs_2_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_3
  assign main_nn_dataInQs_3_D_IN = main_nn_dataInQs_2_D_OUT ;
  assign main_nn_dataInQs_3_ENQ =
	     main_nn_dataInQs_2_EMPTY_N && main_nn_dataInQs_3_FULL_N &&
	     main_nn_pes_2_inputQ_FULL_N ;
  assign main_nn_dataInQs_3_DEQ =
	     main_nn_dataInQs_3_EMPTY_N && main_nn_dataInQs_4_FULL_N &&
	     main_nn_pes_3_inputQ_FULL_N ;
  assign main_nn_dataInQs_3_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_4
  assign main_nn_dataInQs_4_D_IN = main_nn_dataInQs_3_D_OUT ;
  assign main_nn_dataInQs_4_ENQ =
	     main_nn_dataInQs_3_EMPTY_N && main_nn_dataInQs_4_FULL_N &&
	     main_nn_pes_3_inputQ_FULL_N ;
  assign main_nn_dataInQs_4_DEQ =
	     main_nn_dataInQs_4_EMPTY_N && main_nn_dataInQs_5_FULL_N &&
	     main_nn_pes_4_inputQ_FULL_N ;
  assign main_nn_dataInQs_4_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_5
  assign main_nn_dataInQs_5_D_IN = main_nn_dataInQs_4_D_OUT ;
  assign main_nn_dataInQs_5_ENQ =
	     main_nn_dataInQs_4_EMPTY_N && main_nn_dataInQs_5_FULL_N &&
	     main_nn_pes_4_inputQ_FULL_N ;
  assign main_nn_dataInQs_5_DEQ =
	     main_nn_dataInQs_5_EMPTY_N && main_nn_dataInQs_6_FULL_N &&
	     main_nn_pes_5_inputQ_FULL_N ;
  assign main_nn_dataInQs_5_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_6
  assign main_nn_dataInQs_6_D_IN = main_nn_dataInQs_5_D_OUT ;
  assign main_nn_dataInQs_6_ENQ =
	     main_nn_dataInQs_5_EMPTY_N && main_nn_dataInQs_6_FULL_N &&
	     main_nn_pes_5_inputQ_FULL_N ;
  assign main_nn_dataInQs_6_DEQ =
	     main_nn_dataInQs_6_EMPTY_N && main_nn_dataInQs_7_FULL_N &&
	     main_nn_pes_6_inputQ_FULL_N ;
  assign main_nn_dataInQs_6_CLR = 1'b0 ;

  // submodule main_nn_dataInQs_7
  assign main_nn_dataInQs_7_D_IN = main_nn_dataInQs_6_D_OUT ;
  assign main_nn_dataInQs_7_ENQ =
	     main_nn_dataInQs_6_EMPTY_N && main_nn_dataInQs_7_FULL_N &&
	     main_nn_pes_6_inputQ_FULL_N ;
  assign main_nn_dataInQs_7_DEQ =
	     main_nn_dataInQs_7_EMPTY_N && main_nn_pes_7_inputQ_FULL_N ;
  assign main_nn_dataInQs_7_CLR = 1'b0 ;

  // submodule main_nn_pes_0_addForwardQ
  assign main_nn_pes_0_addForwardQ_D_IN =
	     main_nn_pes_0_curMacIdx_85_ULT_64___d486 ?
	       32'd0 :
	       main_nn_pes_0_partialSumQ2_D_OUT ;
  assign main_nn_pes_0_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_0_enqMac ;
  assign main_nn_pes_0_addForwardQ_DEQ =
	     main_nn_pes_0_fmult_outQ_EMPTY_N &&
	     main_nn_pes_0_fadd_inQ_FULL_N &&
	     main_nn_pes_0_addForwardQ_EMPTY_N ;
  assign main_nn_pes_0_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_calcQ
  assign main_nn_pes_0_fadd_calcQ_D_IN =
	     { main_nn_pes_0_fadd_inProcQ_D_OUT[62],
	       fraca__h10003,
	       main_nn_pes_0_fadd_inProcQ_D_OUT[35:27],
	       fracb__h10004,
	       main_nn_pes_0_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_0_fadd_calcQ_ENQ =
	     main_nn_pes_0_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_0_fadd_calcQ_FULL_N ;
  assign main_nn_pes_0_fadd_calcQ_DEQ =
	     main_nn_pes_0_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_0_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_inProcQ
  assign main_nn_pes_0_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_0_fadd_inQ_first__58_BITS_62_T_ETC___d271,
	       x__h9889,
	       fraca__h9720,
	       main_nn_pes_0_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_0_fadd_inQ_D_OUT[63],
	       fracb__h9721,
	       main_nn_pes_0_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_0_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_0_fadd_inProcQ_ENQ =
	     main_nn_pes_0_fadd_inQ_EMPTY_N &&
	     main_nn_pes_0_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_0_fadd_inProcQ_DEQ =
	     main_nn_pes_0_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_0_fadd_calcQ_FULL_N ;
  assign main_nn_pes_0_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_inQ
  assign main_nn_pes_0_fadd_inQ_D_IN =
	     { main_nn_pes_0_fmult_outQ_D_OUT,
	       main_nn_pes_0_addForwardQ_D_OUT } ;
  assign main_nn_pes_0_fadd_inQ_ENQ =
	     main_nn_pes_0_fmult_outQ_EMPTY_N &&
	     main_nn_pes_0_fadd_inQ_FULL_N &&
	     main_nn_pes_0_addForwardQ_EMPTY_N ;
  assign main_nn_pes_0_fadd_inQ_DEQ =
	     main_nn_pes_0_fadd_inQ_EMPTY_N &&
	     main_nn_pes_0_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_0_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_normalizeQ
  assign main_nn_pes_0_fadd_normalizeQ_D_IN =
	     { x__h10185, x__h10232, x__h10236 } ;
  assign main_nn_pes_0_fadd_normalizeQ_ENQ =
	     main_nn_pes_0_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ_DEQ =
	     main_nn_pes_0_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_normalizeQ1
  assign main_nn_pes_0_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_0_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_0_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h10366, newfrac___1__h10365 } :
		 main_nn_pes_0_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_0_fadd_normalizeQ1_ENQ =
	     main_nn_pes_0_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ1_DEQ =
	     main_nn_pes_0_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_normalizeQ2
  assign main_nn_pes_0_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_0_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_0_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_0_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h10465, newfrac___1__h10464 } :
		 main_nn_pes_0_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_0_fadd_normalizeQ2_ENQ =
	     main_nn_pes_0_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ2_DEQ =
	     main_nn_pes_0_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_normalizeQ3
  assign main_nn_pes_0_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_0_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_0_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_0_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h10564, newfrac___1__h10563 } :
		 main_nn_pes_0_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_0_fadd_normalizeQ3_ENQ =
	     main_nn_pes_0_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ3_DEQ =
	     main_nn_pes_0_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_normalizeQ4
  assign main_nn_pes_0_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_0_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_0_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_0_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h10663, newfrac___1__h10662 } :
		 main_nn_pes_0_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_0_fadd_normalizeQ4_ENQ =
	     main_nn_pes_0_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_0_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ4_DEQ =
	     main_nn_pes_0_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_0_fadd_outQ_FULL_N ;
  assign main_nn_pes_0_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fadd_outQ
  assign main_nn_pes_0_fadd_outQ_D_IN =
	     { main_nn_pes_0_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h10755,
	       x__h10762[16:0],
	       6'd0 } ;
  assign main_nn_pes_0_fadd_outQ_ENQ =
	     main_nn_pes_0_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_0_fadd_outQ_FULL_N ;
  assign main_nn_pes_0_fadd_outQ_DEQ =
	     main_nn_pes_0_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_0_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fmult_mult18_multin
  assign main_nn_pes_0_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac ? x_wget__h8107 : 18'd0 ;
  assign main_nn_pes_0_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac ? x_wget__h8178 : 18'd0 ;

  // submodule main_nn_pes_0_fmult_mult18_outQ
  assign main_nn_pes_0_fmult_mult18_outQ_D_IN =
	     main_nn_pes_0_fmult_mult18_multin_dataout ;
  assign main_nn_pes_0_fmult_mult18_outQ_ENQ =
	     main_nn_pes_0_fmult_mult18_validMap[2] &&
	     main_nn_pes_0_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_0_fmult_mult18_outQ_DEQ =
	     main_nn_pes_0_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_0_fmult_outQ_FULL_N ;
  assign main_nn_pes_0_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fmult_outQ
  assign main_nn_pes_0_fmult_outQ_D_IN =
	     main_nn_pes_0_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h8745 ;
  assign main_nn_pes_0_fmult_outQ_ENQ =
	     main_nn_pes_0_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_0_fmult_outQ_FULL_N ;
  assign main_nn_pes_0_fmult_outQ_DEQ =
	     main_nn_pes_0_fmult_outQ_EMPTY_N &&
	     main_nn_pes_0_fadd_inQ_FULL_N &&
	     main_nn_pes_0_addForwardQ_EMPTY_N ;
  assign main_nn_pes_0_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_fmult_signExpZeroQ
  assign main_nn_pes_0_fmult_signExpZeroQ_D_IN =
	     { x__h13721,
	       x__h13766,
	       main_nn_pes_0_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_0_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_0_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac ;
  assign main_nn_pes_0_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_0_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_0_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_0_fmult_outQ_FULL_N ;
  assign main_nn_pes_0_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_inputQ
  assign main_nn_pes_0_inputQ_D_IN = main_nn_dataInQs_0_D_OUT ;
  assign main_nn_pes_0_inputQ_ENQ =
	     main_nn_dataInQs_0_EMPTY_N && main_nn_dataInQs_1_FULL_N &&
	     main_nn_pes_0_inputQ_FULL_N ;
  assign main_nn_pes_0_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_0_enqMac ;
  assign main_nn_pes_0_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_outputQ
  assign main_nn_pes_0_outputQ_D_IN =
	     { main_nn_pes_0_partialSumQ_wDataOut_wget,
	       main_nn_pes_0_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_0_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults &&
	     main_nn_pes_0_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_0_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult &&
	     main_nn_pes_0_outputQ_EMPTY_N ;
  assign main_nn_pes_0_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_partialSumIdxQ1
  assign main_nn_pes_0_partialSumIdxQ1_D_IN =
	     { main_nn_pes_0_inputQ_D_OUT[7:0],
	       main_nn_pes_0_curOutputIdx,
	       x__h13268[15:0] } ;
  assign main_nn_pes_0_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac ;
  assign main_nn_pes_0_partialSumIdxQ1_DEQ =
	     main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_0_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_0_partialSumIdxQ2_memory
  assign main_nn_pes_0_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_0_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults ?
	       x__h11737[6:0] :
	       main_nn_pes_0_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_0_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_0_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_0_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_0_partialSumQ2
  assign main_nn_pes_0_partialSumQ2_D_IN =
	     main_nn_pes_0_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_0_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults &&
	     main_nn_pes_0_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_0_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_0_enqMac &&
	     !main_nn_pes_0_curMacIdx_85_ULT_64___d486 ;
  assign main_nn_pes_0_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_0_partialSumQ_memory
  assign main_nn_pes_0_partialSumQ_memory_ADDRA =
	     main_nn_pes_0_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_0_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_0_filterDoneResults ?
	       x__h12823[6:0] :
	       main_nn_pes_0_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_0_partialSumQ_memory_DIA =
	     { main_nn_pes_0_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_0_fadd_outQ_D_OUT[31],
	       main_nn_pes_0_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_0_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_0_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_0_partialSumQ_memory_WEA =
	     main_nn_pes_0_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_0_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_0_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_0_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_0_weightInQ
  assign main_nn_pes_0_weightInQ_D_IN = main_nn_weightInQs_0_D_OUT ;
  assign main_nn_pes_0_weightInQ_ENQ =
	     main_nn_weightInQs_0_EMPTY_N && main_nn_weightInQs_1_FULL_N &&
	     (main_nn_weightInIdx_0[2:0] != 3'd0 ||
	      main_nn_pes_0_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_0[2:0] == 3'd0 ;
  assign main_nn_pes_0_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_0_relayWeightIn &&
	     main_nn_pes_0_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_0_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_0_weightQ
  assign main_nn_pes_0_weightQ_D_IN =
	     (main_nn_pes_0_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_0_weightInQ_D_OUT :
	       main_nn_pes_0_weightReplicateReg ;
  assign main_nn_pes_0_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_0_relayWeightIn ;
  assign main_nn_pes_0_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_0_enqMac ;
  assign main_nn_pes_0_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_addForwardQ
  assign main_nn_pes_1_addForwardQ_D_IN =
	     main_nn_pes_1_curMacIdx_87_ULT_64___d888 ?
	       32'd0 :
	       main_nn_pes_1_partialSumQ2_D_OUT ;
  assign main_nn_pes_1_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_1_enqMac ;
  assign main_nn_pes_1_addForwardQ_DEQ =
	     main_nn_pes_1_fmult_outQ_EMPTY_N &&
	     main_nn_pes_1_fadd_inQ_FULL_N &&
	     main_nn_pes_1_addForwardQ_EMPTY_N ;
  assign main_nn_pes_1_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_calcQ
  assign main_nn_pes_1_fadd_calcQ_D_IN =
	     { main_nn_pes_1_fadd_inProcQ_D_OUT[62],
	       fraca__h18864,
	       main_nn_pes_1_fadd_inProcQ_D_OUT[35:27],
	       fracb__h18865,
	       main_nn_pes_1_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_1_fadd_calcQ_ENQ =
	     main_nn_pes_1_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_1_fadd_calcQ_FULL_N ;
  assign main_nn_pes_1_fadd_calcQ_DEQ =
	     main_nn_pes_1_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_1_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_inProcQ
  assign main_nn_pes_1_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_1_fadd_inQ_first__60_BITS_62_T_ETC___d673,
	       x__h18753,
	       fraca__h18584,
	       main_nn_pes_1_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_1_fadd_inQ_D_OUT[63],
	       fracb__h18585,
	       main_nn_pes_1_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_1_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_1_fadd_inProcQ_ENQ =
	     main_nn_pes_1_fadd_inQ_EMPTY_N &&
	     main_nn_pes_1_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_1_fadd_inProcQ_DEQ =
	     main_nn_pes_1_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_1_fadd_calcQ_FULL_N ;
  assign main_nn_pes_1_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_inQ
  assign main_nn_pes_1_fadd_inQ_D_IN =
	     { main_nn_pes_1_fmult_outQ_D_OUT,
	       main_nn_pes_1_addForwardQ_D_OUT } ;
  assign main_nn_pes_1_fadd_inQ_ENQ =
	     main_nn_pes_1_fmult_outQ_EMPTY_N &&
	     main_nn_pes_1_fadd_inQ_FULL_N &&
	     main_nn_pes_1_addForwardQ_EMPTY_N ;
  assign main_nn_pes_1_fadd_inQ_DEQ =
	     main_nn_pes_1_fadd_inQ_EMPTY_N &&
	     main_nn_pes_1_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_1_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_normalizeQ
  assign main_nn_pes_1_fadd_normalizeQ_D_IN =
	     { x__h19046, x__h19093, x__h19097 } ;
  assign main_nn_pes_1_fadd_normalizeQ_ENQ =
	     main_nn_pes_1_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ_DEQ =
	     main_nn_pes_1_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_normalizeQ1
  assign main_nn_pes_1_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_1_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_1_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h19227, newfrac___1__h19226 } :
		 main_nn_pes_1_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_1_fadd_normalizeQ1_ENQ =
	     main_nn_pes_1_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ1_DEQ =
	     main_nn_pes_1_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_normalizeQ2
  assign main_nn_pes_1_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_1_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_1_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_1_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h19326, newfrac___1__h19325 } :
		 main_nn_pes_1_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_1_fadd_normalizeQ2_ENQ =
	     main_nn_pes_1_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ2_DEQ =
	     main_nn_pes_1_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_normalizeQ3
  assign main_nn_pes_1_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_1_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_1_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_1_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h19425, newfrac___1__h19424 } :
		 main_nn_pes_1_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_1_fadd_normalizeQ3_ENQ =
	     main_nn_pes_1_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ3_DEQ =
	     main_nn_pes_1_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_normalizeQ4
  assign main_nn_pes_1_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_1_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_1_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_1_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h19524, newfrac___1__h19523 } :
		 main_nn_pes_1_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_1_fadd_normalizeQ4_ENQ =
	     main_nn_pes_1_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_1_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ4_DEQ =
	     main_nn_pes_1_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_1_fadd_outQ_FULL_N ;
  assign main_nn_pes_1_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fadd_outQ
  assign main_nn_pes_1_fadd_outQ_D_IN =
	     { main_nn_pes_1_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h19616,
	       x__h19623[16:0],
	       6'd0 } ;
  assign main_nn_pes_1_fadd_outQ_ENQ =
	     main_nn_pes_1_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_1_fadd_outQ_FULL_N ;
  assign main_nn_pes_1_fadd_outQ_DEQ =
	     main_nn_pes_1_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_1_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fmult_mult18_multin
  assign main_nn_pes_1_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac ? x_wget__h16971 : 18'd0 ;
  assign main_nn_pes_1_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac ? x_wget__h17042 : 18'd0 ;

  // submodule main_nn_pes_1_fmult_mult18_outQ
  assign main_nn_pes_1_fmult_mult18_outQ_D_IN =
	     main_nn_pes_1_fmult_mult18_multin_dataout ;
  assign main_nn_pes_1_fmult_mult18_outQ_ENQ =
	     main_nn_pes_1_fmult_mult18_validMap[2] &&
	     main_nn_pes_1_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_1_fmult_mult18_outQ_DEQ =
	     main_nn_pes_1_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_1_fmult_outQ_FULL_N ;
  assign main_nn_pes_1_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fmult_outQ
  assign main_nn_pes_1_fmult_outQ_D_IN =
	     main_nn_pes_1_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h17609 ;
  assign main_nn_pes_1_fmult_outQ_ENQ =
	     main_nn_pes_1_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_1_fmult_outQ_FULL_N ;
  assign main_nn_pes_1_fmult_outQ_DEQ =
	     main_nn_pes_1_fmult_outQ_EMPTY_N &&
	     main_nn_pes_1_fadd_inQ_FULL_N &&
	     main_nn_pes_1_addForwardQ_EMPTY_N ;
  assign main_nn_pes_1_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_fmult_signExpZeroQ
  assign main_nn_pes_1_fmult_signExpZeroQ_D_IN =
	     { x__h22582,
	       x__h22627,
	       main_nn_pes_1_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_1_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_1_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac ;
  assign main_nn_pes_1_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_1_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_1_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_1_fmult_outQ_FULL_N ;
  assign main_nn_pes_1_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_inputQ
  assign main_nn_pes_1_inputQ_D_IN = main_nn_dataInQs_1_D_OUT ;
  assign main_nn_pes_1_inputQ_ENQ =
	     main_nn_dataInQs_1_EMPTY_N && main_nn_dataInQs_2_FULL_N &&
	     main_nn_pes_1_inputQ_FULL_N ;
  assign main_nn_pes_1_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_1_enqMac ;
  assign main_nn_pes_1_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_outputQ
  assign main_nn_pes_1_outputQ_D_IN =
	     { main_nn_pes_1_partialSumQ_wDataOut_wget,
	       main_nn_pes_1_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_1_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults &&
	     main_nn_pes_1_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_1_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_1 &&
	     main_nn_pes_1_outputQ_EMPTY_N ;
  assign main_nn_pes_1_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_partialSumIdxQ1
  assign main_nn_pes_1_partialSumIdxQ1_D_IN =
	     { main_nn_pes_1_inputQ_D_OUT[7:0],
	       main_nn_pes_1_curOutputIdx,
	       x__h22129[15:0] } ;
  assign main_nn_pes_1_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac ;
  assign main_nn_pes_1_partialSumIdxQ1_DEQ =
	     main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_1_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_1_partialSumIdxQ2_memory
  assign main_nn_pes_1_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_1_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults ?
	       x__h20598[6:0] :
	       main_nn_pes_1_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_1_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_1_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_1_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_1_partialSumQ2
  assign main_nn_pes_1_partialSumQ2_D_IN =
	     main_nn_pes_1_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_1_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults &&
	     main_nn_pes_1_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_1_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_1_enqMac &&
	     !main_nn_pes_1_curMacIdx_87_ULT_64___d888 ;
  assign main_nn_pes_1_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_1_partialSumQ_memory
  assign main_nn_pes_1_partialSumQ_memory_ADDRA =
	     main_nn_pes_1_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_1_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_1_filterDoneResults ?
	       x__h21684[6:0] :
	       main_nn_pes_1_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_1_partialSumQ_memory_DIA =
	     { main_nn_pes_1_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_1_fadd_outQ_D_OUT[31],
	       main_nn_pes_1_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_1_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_1_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_1_partialSumQ_memory_WEA =
	     main_nn_pes_1_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_1_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_1_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_1_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_1_weightInQ
  assign main_nn_pes_1_weightInQ_D_IN = main_nn_weightInQs_1_D_OUT ;
  assign main_nn_pes_1_weightInQ_ENQ =
	     main_nn_weightInQs_1_EMPTY_N && main_nn_weightInQs_2_FULL_N &&
	     (main_nn_weightInIdx_1[2:0] != 3'd1 ||
	      main_nn_pes_1_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_1[2:0] == 3'd1 ;
  assign main_nn_pes_1_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_1_relayWeightIn &&
	     main_nn_pes_1_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_1_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_1_weightQ
  assign main_nn_pes_1_weightQ_D_IN =
	     (main_nn_pes_1_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_1_weightInQ_D_OUT :
	       main_nn_pes_1_weightReplicateReg ;
  assign main_nn_pes_1_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_1_relayWeightIn ;
  assign main_nn_pes_1_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_1_enqMac ;
  assign main_nn_pes_1_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_addForwardQ
  assign main_nn_pes_2_addForwardQ_D_IN =
	     main_nn_pes_2_curMacIdx_289_ULT_64___d1290 ?
	       32'd0 :
	       main_nn_pes_2_partialSumQ2_D_OUT ;
  assign main_nn_pes_2_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_2_enqMac ;
  assign main_nn_pes_2_addForwardQ_DEQ =
	     main_nn_pes_2_fmult_outQ_EMPTY_N &&
	     main_nn_pes_2_fadd_inQ_FULL_N &&
	     main_nn_pes_2_addForwardQ_EMPTY_N ;
  assign main_nn_pes_2_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_calcQ
  assign main_nn_pes_2_fadd_calcQ_D_IN =
	     { main_nn_pes_2_fadd_inProcQ_D_OUT[62],
	       fraca__h26812,
	       main_nn_pes_2_fadd_inProcQ_D_OUT[35:27],
	       fracb__h26813,
	       main_nn_pes_2_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_2_fadd_calcQ_ENQ =
	     main_nn_pes_2_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_2_fadd_calcQ_FULL_N ;
  assign main_nn_pes_2_fadd_calcQ_DEQ =
	     main_nn_pes_2_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_2_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_inProcQ
  assign main_nn_pes_2_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_2_fadd_inQ_first__062_BITS_62__ETC___d1075,
	       x__h26701,
	       fraca__h26532,
	       main_nn_pes_2_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_2_fadd_inQ_D_OUT[63],
	       fracb__h26533,
	       main_nn_pes_2_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_2_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_2_fadd_inProcQ_ENQ =
	     main_nn_pes_2_fadd_inQ_EMPTY_N &&
	     main_nn_pes_2_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_2_fadd_inProcQ_DEQ =
	     main_nn_pes_2_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_2_fadd_calcQ_FULL_N ;
  assign main_nn_pes_2_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_inQ
  assign main_nn_pes_2_fadd_inQ_D_IN =
	     { main_nn_pes_2_fmult_outQ_D_OUT,
	       main_nn_pes_2_addForwardQ_D_OUT } ;
  assign main_nn_pes_2_fadd_inQ_ENQ =
	     main_nn_pes_2_fmult_outQ_EMPTY_N &&
	     main_nn_pes_2_fadd_inQ_FULL_N &&
	     main_nn_pes_2_addForwardQ_EMPTY_N ;
  assign main_nn_pes_2_fadd_inQ_DEQ =
	     main_nn_pes_2_fadd_inQ_EMPTY_N &&
	     main_nn_pes_2_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_2_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_normalizeQ
  assign main_nn_pes_2_fadd_normalizeQ_D_IN =
	     { x__h26994, x__h27041, x__h27045 } ;
  assign main_nn_pes_2_fadd_normalizeQ_ENQ =
	     main_nn_pes_2_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ_DEQ =
	     main_nn_pes_2_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_normalizeQ1
  assign main_nn_pes_2_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_2_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_2_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h27175, newfrac___1__h27174 } :
		 main_nn_pes_2_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_2_fadd_normalizeQ1_ENQ =
	     main_nn_pes_2_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ1_DEQ =
	     main_nn_pes_2_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_normalizeQ2
  assign main_nn_pes_2_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_2_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_2_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_2_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h27274, newfrac___1__h27273 } :
		 main_nn_pes_2_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_2_fadd_normalizeQ2_ENQ =
	     main_nn_pes_2_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ2_DEQ =
	     main_nn_pes_2_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_normalizeQ3
  assign main_nn_pes_2_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_2_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_2_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_2_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h27373, newfrac___1__h27372 } :
		 main_nn_pes_2_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_2_fadd_normalizeQ3_ENQ =
	     main_nn_pes_2_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ3_DEQ =
	     main_nn_pes_2_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_normalizeQ4
  assign main_nn_pes_2_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_2_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_2_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_2_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h27472, newfrac___1__h27471 } :
		 main_nn_pes_2_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_2_fadd_normalizeQ4_ENQ =
	     main_nn_pes_2_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_2_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ4_DEQ =
	     main_nn_pes_2_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_2_fadd_outQ_FULL_N ;
  assign main_nn_pes_2_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fadd_outQ
  assign main_nn_pes_2_fadd_outQ_D_IN =
	     { main_nn_pes_2_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h27564,
	       x__h27571[16:0],
	       6'd0 } ;
  assign main_nn_pes_2_fadd_outQ_ENQ =
	     main_nn_pes_2_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_2_fadd_outQ_FULL_N ;
  assign main_nn_pes_2_fadd_outQ_DEQ =
	     main_nn_pes_2_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_2_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fmult_mult18_multin
  assign main_nn_pes_2_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac ? x_wget__h24919 : 18'd0 ;
  assign main_nn_pes_2_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac ? x_wget__h24990 : 18'd0 ;

  // submodule main_nn_pes_2_fmult_mult18_outQ
  assign main_nn_pes_2_fmult_mult18_outQ_D_IN =
	     main_nn_pes_2_fmult_mult18_multin_dataout ;
  assign main_nn_pes_2_fmult_mult18_outQ_ENQ =
	     main_nn_pes_2_fmult_mult18_validMap[2] &&
	     main_nn_pes_2_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_2_fmult_mult18_outQ_DEQ =
	     main_nn_pes_2_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_2_fmult_outQ_FULL_N ;
  assign main_nn_pes_2_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fmult_outQ
  assign main_nn_pes_2_fmult_outQ_D_IN =
	     main_nn_pes_2_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h25557 ;
  assign main_nn_pes_2_fmult_outQ_ENQ =
	     main_nn_pes_2_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_2_fmult_outQ_FULL_N ;
  assign main_nn_pes_2_fmult_outQ_DEQ =
	     main_nn_pes_2_fmult_outQ_EMPTY_N &&
	     main_nn_pes_2_fadd_inQ_FULL_N &&
	     main_nn_pes_2_addForwardQ_EMPTY_N ;
  assign main_nn_pes_2_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_fmult_signExpZeroQ
  assign main_nn_pes_2_fmult_signExpZeroQ_D_IN =
	     { x__h30530,
	       x__h30575,
	       main_nn_pes_2_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_2_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_2_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac ;
  assign main_nn_pes_2_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_2_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_2_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_2_fmult_outQ_FULL_N ;
  assign main_nn_pes_2_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_inputQ
  assign main_nn_pes_2_inputQ_D_IN = main_nn_dataInQs_2_D_OUT ;
  assign main_nn_pes_2_inputQ_ENQ =
	     main_nn_dataInQs_2_EMPTY_N && main_nn_dataInQs_3_FULL_N &&
	     main_nn_pes_2_inputQ_FULL_N ;
  assign main_nn_pes_2_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_2_enqMac ;
  assign main_nn_pes_2_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_outputQ
  assign main_nn_pes_2_outputQ_D_IN =
	     { main_nn_pes_2_partialSumQ_wDataOut_wget,
	       main_nn_pes_2_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_2_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults &&
	     main_nn_pes_2_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_2_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_2 &&
	     main_nn_pes_2_outputQ_EMPTY_N ;
  assign main_nn_pes_2_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_partialSumIdxQ1
  assign main_nn_pes_2_partialSumIdxQ1_D_IN =
	     { main_nn_pes_2_inputQ_D_OUT[7:0],
	       main_nn_pes_2_curOutputIdx,
	       x__h30077[15:0] } ;
  assign main_nn_pes_2_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac ;
  assign main_nn_pes_2_partialSumIdxQ1_DEQ =
	     main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_2_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_2_partialSumIdxQ2_memory
  assign main_nn_pes_2_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_2_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults ?
	       x__h28546[6:0] :
	       main_nn_pes_2_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_2_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_2_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_2_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_2_partialSumQ2
  assign main_nn_pes_2_partialSumQ2_D_IN =
	     main_nn_pes_2_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_2_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults &&
	     main_nn_pes_2_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_2_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_2_enqMac &&
	     !main_nn_pes_2_curMacIdx_289_ULT_64___d1290 ;
  assign main_nn_pes_2_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_2_partialSumQ_memory
  assign main_nn_pes_2_partialSumQ_memory_ADDRA =
	     main_nn_pes_2_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_2_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_2_filterDoneResults ?
	       x__h29632[6:0] :
	       main_nn_pes_2_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_2_partialSumQ_memory_DIA =
	     { main_nn_pes_2_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_2_fadd_outQ_D_OUT[31],
	       main_nn_pes_2_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_2_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_2_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_2_partialSumQ_memory_WEA =
	     main_nn_pes_2_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_2_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_2_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_2_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_2_weightInQ
  assign main_nn_pes_2_weightInQ_D_IN = main_nn_weightInQs_2_D_OUT ;
  assign main_nn_pes_2_weightInQ_ENQ =
	     main_nn_weightInQs_2_EMPTY_N && main_nn_weightInQs_3_FULL_N &&
	     (main_nn_weightInIdx_2[2:0] != 3'd2 ||
	      main_nn_pes_2_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_2[2:0] == 3'd2 ;
  assign main_nn_pes_2_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_2_relayWeightIn &&
	     main_nn_pes_2_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_2_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_2_weightQ
  assign main_nn_pes_2_weightQ_D_IN =
	     (main_nn_pes_2_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_2_weightInQ_D_OUT :
	       main_nn_pes_2_weightReplicateReg ;
  assign main_nn_pes_2_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_2_relayWeightIn ;
  assign main_nn_pes_2_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_2_enqMac ;
  assign main_nn_pes_2_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_addForwardQ
  assign main_nn_pes_3_addForwardQ_D_IN =
	     main_nn_pes_3_curMacIdx_691_ULT_64___d1692 ?
	       32'd0 :
	       main_nn_pes_3_partialSumQ2_D_OUT ;
  assign main_nn_pes_3_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_3_enqMac ;
  assign main_nn_pes_3_addForwardQ_DEQ =
	     main_nn_pes_3_fmult_outQ_EMPTY_N &&
	     main_nn_pes_3_fadd_inQ_FULL_N &&
	     main_nn_pes_3_addForwardQ_EMPTY_N ;
  assign main_nn_pes_3_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_calcQ
  assign main_nn_pes_3_fadd_calcQ_D_IN =
	     { main_nn_pes_3_fadd_inProcQ_D_OUT[62],
	       fraca__h34760,
	       main_nn_pes_3_fadd_inProcQ_D_OUT[35:27],
	       fracb__h34761,
	       main_nn_pes_3_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_3_fadd_calcQ_ENQ =
	     main_nn_pes_3_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_3_fadd_calcQ_FULL_N ;
  assign main_nn_pes_3_fadd_calcQ_DEQ =
	     main_nn_pes_3_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_3_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_inProcQ
  assign main_nn_pes_3_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_3_fadd_inQ_first__464_BITS_62__ETC___d1477,
	       x__h34649,
	       fraca__h34480,
	       main_nn_pes_3_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_3_fadd_inQ_D_OUT[63],
	       fracb__h34481,
	       main_nn_pes_3_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_3_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_3_fadd_inProcQ_ENQ =
	     main_nn_pes_3_fadd_inQ_EMPTY_N &&
	     main_nn_pes_3_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_3_fadd_inProcQ_DEQ =
	     main_nn_pes_3_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_3_fadd_calcQ_FULL_N ;
  assign main_nn_pes_3_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_inQ
  assign main_nn_pes_3_fadd_inQ_D_IN =
	     { main_nn_pes_3_fmult_outQ_D_OUT,
	       main_nn_pes_3_addForwardQ_D_OUT } ;
  assign main_nn_pes_3_fadd_inQ_ENQ =
	     main_nn_pes_3_fmult_outQ_EMPTY_N &&
	     main_nn_pes_3_fadd_inQ_FULL_N &&
	     main_nn_pes_3_addForwardQ_EMPTY_N ;
  assign main_nn_pes_3_fadd_inQ_DEQ =
	     main_nn_pes_3_fadd_inQ_EMPTY_N &&
	     main_nn_pes_3_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_3_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_normalizeQ
  assign main_nn_pes_3_fadd_normalizeQ_D_IN =
	     { x__h34942, x__h34989, x__h34993 } ;
  assign main_nn_pes_3_fadd_normalizeQ_ENQ =
	     main_nn_pes_3_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ_DEQ =
	     main_nn_pes_3_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_normalizeQ1
  assign main_nn_pes_3_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_3_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_3_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h35123, newfrac___1__h35122 } :
		 main_nn_pes_3_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_3_fadd_normalizeQ1_ENQ =
	     main_nn_pes_3_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ1_DEQ =
	     main_nn_pes_3_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_normalizeQ2
  assign main_nn_pes_3_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_3_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_3_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_3_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h35222, newfrac___1__h35221 } :
		 main_nn_pes_3_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_3_fadd_normalizeQ2_ENQ =
	     main_nn_pes_3_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ2_DEQ =
	     main_nn_pes_3_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_normalizeQ3
  assign main_nn_pes_3_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_3_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_3_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_3_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h35321, newfrac___1__h35320 } :
		 main_nn_pes_3_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_3_fadd_normalizeQ3_ENQ =
	     main_nn_pes_3_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ3_DEQ =
	     main_nn_pes_3_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_normalizeQ4
  assign main_nn_pes_3_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_3_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_3_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_3_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h35420, newfrac___1__h35419 } :
		 main_nn_pes_3_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_3_fadd_normalizeQ4_ENQ =
	     main_nn_pes_3_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_3_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ4_DEQ =
	     main_nn_pes_3_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_3_fadd_outQ_FULL_N ;
  assign main_nn_pes_3_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fadd_outQ
  assign main_nn_pes_3_fadd_outQ_D_IN =
	     { main_nn_pes_3_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h35512,
	       x__h35519[16:0],
	       6'd0 } ;
  assign main_nn_pes_3_fadd_outQ_ENQ =
	     main_nn_pes_3_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_3_fadd_outQ_FULL_N ;
  assign main_nn_pes_3_fadd_outQ_DEQ =
	     main_nn_pes_3_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_3_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fmult_mult18_multin
  assign main_nn_pes_3_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac ? x_wget__h32867 : 18'd0 ;
  assign main_nn_pes_3_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac ? x_wget__h32938 : 18'd0 ;

  // submodule main_nn_pes_3_fmult_mult18_outQ
  assign main_nn_pes_3_fmult_mult18_outQ_D_IN =
	     main_nn_pes_3_fmult_mult18_multin_dataout ;
  assign main_nn_pes_3_fmult_mult18_outQ_ENQ =
	     main_nn_pes_3_fmult_mult18_validMap[2] &&
	     main_nn_pes_3_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_3_fmult_mult18_outQ_DEQ =
	     main_nn_pes_3_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_3_fmult_outQ_FULL_N ;
  assign main_nn_pes_3_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fmult_outQ
  assign main_nn_pes_3_fmult_outQ_D_IN =
	     main_nn_pes_3_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h33505 ;
  assign main_nn_pes_3_fmult_outQ_ENQ =
	     main_nn_pes_3_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_3_fmult_outQ_FULL_N ;
  assign main_nn_pes_3_fmult_outQ_DEQ =
	     main_nn_pes_3_fmult_outQ_EMPTY_N &&
	     main_nn_pes_3_fadd_inQ_FULL_N &&
	     main_nn_pes_3_addForwardQ_EMPTY_N ;
  assign main_nn_pes_3_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_fmult_signExpZeroQ
  assign main_nn_pes_3_fmult_signExpZeroQ_D_IN =
	     { x__h38478,
	       x__h38523,
	       main_nn_pes_3_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_3_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_3_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac ;
  assign main_nn_pes_3_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_3_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_3_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_3_fmult_outQ_FULL_N ;
  assign main_nn_pes_3_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_inputQ
  assign main_nn_pes_3_inputQ_D_IN = main_nn_dataInQs_3_D_OUT ;
  assign main_nn_pes_3_inputQ_ENQ =
	     main_nn_dataInQs_3_EMPTY_N && main_nn_dataInQs_4_FULL_N &&
	     main_nn_pes_3_inputQ_FULL_N ;
  assign main_nn_pes_3_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_3_enqMac ;
  assign main_nn_pes_3_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_outputQ
  assign main_nn_pes_3_outputQ_D_IN =
	     { main_nn_pes_3_partialSumQ_wDataOut_wget,
	       main_nn_pes_3_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_3_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults &&
	     main_nn_pes_3_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_3_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_3 &&
	     main_nn_pes_3_outputQ_EMPTY_N ;
  assign main_nn_pes_3_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_partialSumIdxQ1
  assign main_nn_pes_3_partialSumIdxQ1_D_IN =
	     { main_nn_pes_3_inputQ_D_OUT[7:0],
	       main_nn_pes_3_curOutputIdx,
	       x__h38025[15:0] } ;
  assign main_nn_pes_3_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac ;
  assign main_nn_pes_3_partialSumIdxQ1_DEQ =
	     main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_3_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_3_partialSumIdxQ2_memory
  assign main_nn_pes_3_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_3_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults ?
	       x__h36494[6:0] :
	       main_nn_pes_3_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_3_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_3_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_3_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_3_partialSumQ2
  assign main_nn_pes_3_partialSumQ2_D_IN =
	     main_nn_pes_3_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_3_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults &&
	     main_nn_pes_3_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_3_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_3_enqMac &&
	     !main_nn_pes_3_curMacIdx_691_ULT_64___d1692 ;
  assign main_nn_pes_3_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_3_partialSumQ_memory
  assign main_nn_pes_3_partialSumQ_memory_ADDRA =
	     main_nn_pes_3_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_3_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_3_filterDoneResults ?
	       x__h37580[6:0] :
	       main_nn_pes_3_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_3_partialSumQ_memory_DIA =
	     { main_nn_pes_3_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_3_fadd_outQ_D_OUT[31],
	       main_nn_pes_3_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_3_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_3_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_3_partialSumQ_memory_WEA =
	     main_nn_pes_3_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_3_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_3_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_3_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_3_weightInQ
  assign main_nn_pes_3_weightInQ_D_IN = main_nn_weightInQs_3_D_OUT ;
  assign main_nn_pes_3_weightInQ_ENQ =
	     main_nn_weightInQs_3_EMPTY_N && main_nn_weightInQs_4_FULL_N &&
	     (main_nn_weightInIdx_3[2:0] != 3'd3 ||
	      main_nn_pes_3_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_3[2:0] == 3'd3 ;
  assign main_nn_pes_3_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_3_relayWeightIn &&
	     main_nn_pes_3_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_3_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_3_weightQ
  assign main_nn_pes_3_weightQ_D_IN =
	     (main_nn_pes_3_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_3_weightInQ_D_OUT :
	       main_nn_pes_3_weightReplicateReg ;
  assign main_nn_pes_3_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_3_relayWeightIn ;
  assign main_nn_pes_3_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_3_enqMac ;
  assign main_nn_pes_3_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_addForwardQ
  assign main_nn_pes_4_addForwardQ_D_IN =
	     main_nn_pes_4_curMacIdx_093_ULT_64___d2094 ?
	       32'd0 :
	       main_nn_pes_4_partialSumQ2_D_OUT ;
  assign main_nn_pes_4_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_4_enqMac ;
  assign main_nn_pes_4_addForwardQ_DEQ =
	     main_nn_pes_4_fmult_outQ_EMPTY_N &&
	     main_nn_pes_4_fadd_inQ_FULL_N &&
	     main_nn_pes_4_addForwardQ_EMPTY_N ;
  assign main_nn_pes_4_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_calcQ
  assign main_nn_pes_4_fadd_calcQ_D_IN =
	     { main_nn_pes_4_fadd_inProcQ_D_OUT[62],
	       fraca__h42708,
	       main_nn_pes_4_fadd_inProcQ_D_OUT[35:27],
	       fracb__h42709,
	       main_nn_pes_4_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_4_fadd_calcQ_ENQ =
	     main_nn_pes_4_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_4_fadd_calcQ_FULL_N ;
  assign main_nn_pes_4_fadd_calcQ_DEQ =
	     main_nn_pes_4_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_4_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_inProcQ
  assign main_nn_pes_4_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_4_fadd_inQ_first__866_BITS_62__ETC___d1879,
	       x__h42597,
	       fraca__h42428,
	       main_nn_pes_4_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_4_fadd_inQ_D_OUT[63],
	       fracb__h42429,
	       main_nn_pes_4_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_4_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_4_fadd_inProcQ_ENQ =
	     main_nn_pes_4_fadd_inQ_EMPTY_N &&
	     main_nn_pes_4_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_4_fadd_inProcQ_DEQ =
	     main_nn_pes_4_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_4_fadd_calcQ_FULL_N ;
  assign main_nn_pes_4_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_inQ
  assign main_nn_pes_4_fadd_inQ_D_IN =
	     { main_nn_pes_4_fmult_outQ_D_OUT,
	       main_nn_pes_4_addForwardQ_D_OUT } ;
  assign main_nn_pes_4_fadd_inQ_ENQ =
	     main_nn_pes_4_fmult_outQ_EMPTY_N &&
	     main_nn_pes_4_fadd_inQ_FULL_N &&
	     main_nn_pes_4_addForwardQ_EMPTY_N ;
  assign main_nn_pes_4_fadd_inQ_DEQ =
	     main_nn_pes_4_fadd_inQ_EMPTY_N &&
	     main_nn_pes_4_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_4_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_normalizeQ
  assign main_nn_pes_4_fadd_normalizeQ_D_IN =
	     { x__h42890, x__h42937, x__h42941 } ;
  assign main_nn_pes_4_fadd_normalizeQ_ENQ =
	     main_nn_pes_4_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ_DEQ =
	     main_nn_pes_4_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_normalizeQ1
  assign main_nn_pes_4_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_4_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_4_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h43071, newfrac___1__h43070 } :
		 main_nn_pes_4_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_4_fadd_normalizeQ1_ENQ =
	     main_nn_pes_4_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ1_DEQ =
	     main_nn_pes_4_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_normalizeQ2
  assign main_nn_pes_4_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_4_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_4_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_4_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h43170, newfrac___1__h43169 } :
		 main_nn_pes_4_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_4_fadd_normalizeQ2_ENQ =
	     main_nn_pes_4_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ2_DEQ =
	     main_nn_pes_4_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_normalizeQ3
  assign main_nn_pes_4_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_4_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_4_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_4_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h43269, newfrac___1__h43268 } :
		 main_nn_pes_4_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_4_fadd_normalizeQ3_ENQ =
	     main_nn_pes_4_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ3_DEQ =
	     main_nn_pes_4_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_normalizeQ4
  assign main_nn_pes_4_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_4_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_4_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_4_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h43368, newfrac___1__h43367 } :
		 main_nn_pes_4_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_4_fadd_normalizeQ4_ENQ =
	     main_nn_pes_4_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_4_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ4_DEQ =
	     main_nn_pes_4_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_4_fadd_outQ_FULL_N ;
  assign main_nn_pes_4_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fadd_outQ
  assign main_nn_pes_4_fadd_outQ_D_IN =
	     { main_nn_pes_4_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h43460,
	       x__h43467[16:0],
	       6'd0 } ;
  assign main_nn_pes_4_fadd_outQ_ENQ =
	     main_nn_pes_4_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_4_fadd_outQ_FULL_N ;
  assign main_nn_pes_4_fadd_outQ_DEQ =
	     main_nn_pes_4_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_4_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fmult_mult18_multin
  assign main_nn_pes_4_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac ? x_wget__h40815 : 18'd0 ;
  assign main_nn_pes_4_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac ? x_wget__h40886 : 18'd0 ;

  // submodule main_nn_pes_4_fmult_mult18_outQ
  assign main_nn_pes_4_fmult_mult18_outQ_D_IN =
	     main_nn_pes_4_fmult_mult18_multin_dataout ;
  assign main_nn_pes_4_fmult_mult18_outQ_ENQ =
	     main_nn_pes_4_fmult_mult18_validMap[2] &&
	     main_nn_pes_4_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_4_fmult_mult18_outQ_DEQ =
	     main_nn_pes_4_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_4_fmult_outQ_FULL_N ;
  assign main_nn_pes_4_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fmult_outQ
  assign main_nn_pes_4_fmult_outQ_D_IN =
	     main_nn_pes_4_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h41453 ;
  assign main_nn_pes_4_fmult_outQ_ENQ =
	     main_nn_pes_4_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_4_fmult_outQ_FULL_N ;
  assign main_nn_pes_4_fmult_outQ_DEQ =
	     main_nn_pes_4_fmult_outQ_EMPTY_N &&
	     main_nn_pes_4_fadd_inQ_FULL_N &&
	     main_nn_pes_4_addForwardQ_EMPTY_N ;
  assign main_nn_pes_4_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_fmult_signExpZeroQ
  assign main_nn_pes_4_fmult_signExpZeroQ_D_IN =
	     { x__h46426,
	       x__h46471,
	       main_nn_pes_4_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_4_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_4_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac ;
  assign main_nn_pes_4_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_4_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_4_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_4_fmult_outQ_FULL_N ;
  assign main_nn_pes_4_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_inputQ
  assign main_nn_pes_4_inputQ_D_IN = main_nn_dataInQs_4_D_OUT ;
  assign main_nn_pes_4_inputQ_ENQ =
	     main_nn_dataInQs_4_EMPTY_N && main_nn_dataInQs_5_FULL_N &&
	     main_nn_pes_4_inputQ_FULL_N ;
  assign main_nn_pes_4_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_4_enqMac ;
  assign main_nn_pes_4_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_outputQ
  assign main_nn_pes_4_outputQ_D_IN =
	     { main_nn_pes_4_partialSumQ_wDataOut_wget,
	       main_nn_pes_4_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_4_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults &&
	     main_nn_pes_4_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_4_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_4 &&
	     main_nn_pes_4_outputQ_EMPTY_N ;
  assign main_nn_pes_4_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_partialSumIdxQ1
  assign main_nn_pes_4_partialSumIdxQ1_D_IN =
	     { main_nn_pes_4_inputQ_D_OUT[7:0],
	       main_nn_pes_4_curOutputIdx,
	       x__h45973[15:0] } ;
  assign main_nn_pes_4_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac ;
  assign main_nn_pes_4_partialSumIdxQ1_DEQ =
	     main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_4_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_4_partialSumIdxQ2_memory
  assign main_nn_pes_4_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_4_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults ?
	       x__h44442[6:0] :
	       main_nn_pes_4_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_4_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_4_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_4_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_4_partialSumQ2
  assign main_nn_pes_4_partialSumQ2_D_IN =
	     main_nn_pes_4_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_4_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults &&
	     main_nn_pes_4_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_4_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_4_enqMac &&
	     !main_nn_pes_4_curMacIdx_093_ULT_64___d2094 ;
  assign main_nn_pes_4_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_4_partialSumQ_memory
  assign main_nn_pes_4_partialSumQ_memory_ADDRA =
	     main_nn_pes_4_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_4_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_4_filterDoneResults ?
	       x__h45528[6:0] :
	       main_nn_pes_4_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_4_partialSumQ_memory_DIA =
	     { main_nn_pes_4_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_4_fadd_outQ_D_OUT[31],
	       main_nn_pes_4_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_4_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_4_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_4_partialSumQ_memory_WEA =
	     main_nn_pes_4_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_4_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_4_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_4_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_4_weightInQ
  assign main_nn_pes_4_weightInQ_D_IN = main_nn_weightInQs_4_D_OUT ;
  assign main_nn_pes_4_weightInQ_ENQ =
	     main_nn_weightInQs_4_EMPTY_N && main_nn_weightInQs_5_FULL_N &&
	     (main_nn_weightInIdx_4[2:0] != 3'd4 ||
	      main_nn_pes_4_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_4[2:0] == 3'd4 ;
  assign main_nn_pes_4_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_4_relayWeightIn &&
	     main_nn_pes_4_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_4_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_4_weightQ
  assign main_nn_pes_4_weightQ_D_IN =
	     (main_nn_pes_4_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_4_weightInQ_D_OUT :
	       main_nn_pes_4_weightReplicateReg ;
  assign main_nn_pes_4_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_4_relayWeightIn ;
  assign main_nn_pes_4_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_4_enqMac ;
  assign main_nn_pes_4_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_addForwardQ
  assign main_nn_pes_5_addForwardQ_D_IN =
	     main_nn_pes_5_curMacIdx_495_ULT_64___d2496 ?
	       32'd0 :
	       main_nn_pes_5_partialSumQ2_D_OUT ;
  assign main_nn_pes_5_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_5_enqMac ;
  assign main_nn_pes_5_addForwardQ_DEQ =
	     main_nn_pes_5_fmult_outQ_EMPTY_N &&
	     main_nn_pes_5_fadd_inQ_FULL_N &&
	     main_nn_pes_5_addForwardQ_EMPTY_N ;
  assign main_nn_pes_5_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_calcQ
  assign main_nn_pes_5_fadd_calcQ_D_IN =
	     { main_nn_pes_5_fadd_inProcQ_D_OUT[62],
	       fraca__h50656,
	       main_nn_pes_5_fadd_inProcQ_D_OUT[35:27],
	       fracb__h50657,
	       main_nn_pes_5_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_5_fadd_calcQ_ENQ =
	     main_nn_pes_5_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_5_fadd_calcQ_FULL_N ;
  assign main_nn_pes_5_fadd_calcQ_DEQ =
	     main_nn_pes_5_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_5_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_inProcQ
  assign main_nn_pes_5_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_5_fadd_inQ_first__268_BITS_62__ETC___d2281,
	       x__h50545,
	       fraca__h50376,
	       main_nn_pes_5_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_5_fadd_inQ_D_OUT[63],
	       fracb__h50377,
	       main_nn_pes_5_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_5_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_5_fadd_inProcQ_ENQ =
	     main_nn_pes_5_fadd_inQ_EMPTY_N &&
	     main_nn_pes_5_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_5_fadd_inProcQ_DEQ =
	     main_nn_pes_5_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_5_fadd_calcQ_FULL_N ;
  assign main_nn_pes_5_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_inQ
  assign main_nn_pes_5_fadd_inQ_D_IN =
	     { main_nn_pes_5_fmult_outQ_D_OUT,
	       main_nn_pes_5_addForwardQ_D_OUT } ;
  assign main_nn_pes_5_fadd_inQ_ENQ =
	     main_nn_pes_5_fmult_outQ_EMPTY_N &&
	     main_nn_pes_5_fadd_inQ_FULL_N &&
	     main_nn_pes_5_addForwardQ_EMPTY_N ;
  assign main_nn_pes_5_fadd_inQ_DEQ =
	     main_nn_pes_5_fadd_inQ_EMPTY_N &&
	     main_nn_pes_5_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_5_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_normalizeQ
  assign main_nn_pes_5_fadd_normalizeQ_D_IN =
	     { x__h50838, x__h50885, x__h50889 } ;
  assign main_nn_pes_5_fadd_normalizeQ_ENQ =
	     main_nn_pes_5_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ_DEQ =
	     main_nn_pes_5_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_normalizeQ1
  assign main_nn_pes_5_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_5_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_5_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h51019, newfrac___1__h51018 } :
		 main_nn_pes_5_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_5_fadd_normalizeQ1_ENQ =
	     main_nn_pes_5_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ1_DEQ =
	     main_nn_pes_5_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_normalizeQ2
  assign main_nn_pes_5_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_5_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_5_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_5_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h51118, newfrac___1__h51117 } :
		 main_nn_pes_5_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_5_fadd_normalizeQ2_ENQ =
	     main_nn_pes_5_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ2_DEQ =
	     main_nn_pes_5_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_normalizeQ3
  assign main_nn_pes_5_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_5_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_5_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_5_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h51217, newfrac___1__h51216 } :
		 main_nn_pes_5_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_5_fadd_normalizeQ3_ENQ =
	     main_nn_pes_5_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ3_DEQ =
	     main_nn_pes_5_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_normalizeQ4
  assign main_nn_pes_5_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_5_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_5_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_5_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h51316, newfrac___1__h51315 } :
		 main_nn_pes_5_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_5_fadd_normalizeQ4_ENQ =
	     main_nn_pes_5_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_5_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ4_DEQ =
	     main_nn_pes_5_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_5_fadd_outQ_FULL_N ;
  assign main_nn_pes_5_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fadd_outQ
  assign main_nn_pes_5_fadd_outQ_D_IN =
	     { main_nn_pes_5_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h51408,
	       x__h51415[16:0],
	       6'd0 } ;
  assign main_nn_pes_5_fadd_outQ_ENQ =
	     main_nn_pes_5_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_5_fadd_outQ_FULL_N ;
  assign main_nn_pes_5_fadd_outQ_DEQ =
	     main_nn_pes_5_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_5_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fmult_mult18_multin
  assign main_nn_pes_5_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac ? x_wget__h48763 : 18'd0 ;
  assign main_nn_pes_5_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac ? x_wget__h48834 : 18'd0 ;

  // submodule main_nn_pes_5_fmult_mult18_outQ
  assign main_nn_pes_5_fmult_mult18_outQ_D_IN =
	     main_nn_pes_5_fmult_mult18_multin_dataout ;
  assign main_nn_pes_5_fmult_mult18_outQ_ENQ =
	     main_nn_pes_5_fmult_mult18_validMap[2] &&
	     main_nn_pes_5_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_5_fmult_mult18_outQ_DEQ =
	     main_nn_pes_5_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_5_fmult_outQ_FULL_N ;
  assign main_nn_pes_5_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fmult_outQ
  assign main_nn_pes_5_fmult_outQ_D_IN =
	     main_nn_pes_5_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h49401 ;
  assign main_nn_pes_5_fmult_outQ_ENQ =
	     main_nn_pes_5_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_5_fmult_outQ_FULL_N ;
  assign main_nn_pes_5_fmult_outQ_DEQ =
	     main_nn_pes_5_fmult_outQ_EMPTY_N &&
	     main_nn_pes_5_fadd_inQ_FULL_N &&
	     main_nn_pes_5_addForwardQ_EMPTY_N ;
  assign main_nn_pes_5_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_fmult_signExpZeroQ
  assign main_nn_pes_5_fmult_signExpZeroQ_D_IN =
	     { x__h54374,
	       x__h54419,
	       main_nn_pes_5_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_5_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_5_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac ;
  assign main_nn_pes_5_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_5_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_5_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_5_fmult_outQ_FULL_N ;
  assign main_nn_pes_5_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_inputQ
  assign main_nn_pes_5_inputQ_D_IN = main_nn_dataInQs_5_D_OUT ;
  assign main_nn_pes_5_inputQ_ENQ =
	     main_nn_dataInQs_5_EMPTY_N && main_nn_dataInQs_6_FULL_N &&
	     main_nn_pes_5_inputQ_FULL_N ;
  assign main_nn_pes_5_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_5_enqMac ;
  assign main_nn_pes_5_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_outputQ
  assign main_nn_pes_5_outputQ_D_IN =
	     { main_nn_pes_5_partialSumQ_wDataOut_wget,
	       main_nn_pes_5_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_5_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults &&
	     main_nn_pes_5_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_5_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_5 &&
	     main_nn_pes_5_outputQ_EMPTY_N ;
  assign main_nn_pes_5_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_partialSumIdxQ1
  assign main_nn_pes_5_partialSumIdxQ1_D_IN =
	     { main_nn_pes_5_inputQ_D_OUT[7:0],
	       main_nn_pes_5_curOutputIdx,
	       x__h53921[15:0] } ;
  assign main_nn_pes_5_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac ;
  assign main_nn_pes_5_partialSumIdxQ1_DEQ =
	     main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_5_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_5_partialSumIdxQ2_memory
  assign main_nn_pes_5_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_5_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults ?
	       x__h52390[6:0] :
	       main_nn_pes_5_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_5_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_5_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_5_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_5_partialSumQ2
  assign main_nn_pes_5_partialSumQ2_D_IN =
	     main_nn_pes_5_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_5_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults &&
	     main_nn_pes_5_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_5_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_5_enqMac &&
	     !main_nn_pes_5_curMacIdx_495_ULT_64___d2496 ;
  assign main_nn_pes_5_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_5_partialSumQ_memory
  assign main_nn_pes_5_partialSumQ_memory_ADDRA =
	     main_nn_pes_5_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_5_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_5_filterDoneResults ?
	       x__h53476[6:0] :
	       main_nn_pes_5_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_5_partialSumQ_memory_DIA =
	     { main_nn_pes_5_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_5_fadd_outQ_D_OUT[31],
	       main_nn_pes_5_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_5_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_5_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_5_partialSumQ_memory_WEA =
	     main_nn_pes_5_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_5_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_5_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_5_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_5_weightInQ
  assign main_nn_pes_5_weightInQ_D_IN = main_nn_weightInQs_5_D_OUT ;
  assign main_nn_pes_5_weightInQ_ENQ =
	     main_nn_weightInQs_5_EMPTY_N && main_nn_weightInQs_6_FULL_N &&
	     (main_nn_weightInIdx_5[2:0] != 3'd5 ||
	      main_nn_pes_5_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_5[2:0] == 3'd5 ;
  assign main_nn_pes_5_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_5_relayWeightIn &&
	     main_nn_pes_5_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_5_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_5_weightQ
  assign main_nn_pes_5_weightQ_D_IN =
	     (main_nn_pes_5_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_5_weightInQ_D_OUT :
	       main_nn_pes_5_weightReplicateReg ;
  assign main_nn_pes_5_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_5_relayWeightIn ;
  assign main_nn_pes_5_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_5_enqMac ;
  assign main_nn_pes_5_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_addForwardQ
  assign main_nn_pes_6_addForwardQ_D_IN =
	     main_nn_pes_6_curMacIdx_897_ULT_64___d2898 ?
	       32'd0 :
	       main_nn_pes_6_partialSumQ2_D_OUT ;
  assign main_nn_pes_6_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_6_enqMac ;
  assign main_nn_pes_6_addForwardQ_DEQ =
	     main_nn_pes_6_fmult_outQ_EMPTY_N &&
	     main_nn_pes_6_fadd_inQ_FULL_N &&
	     main_nn_pes_6_addForwardQ_EMPTY_N ;
  assign main_nn_pes_6_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_calcQ
  assign main_nn_pes_6_fadd_calcQ_D_IN =
	     { main_nn_pes_6_fadd_inProcQ_D_OUT[62],
	       fraca__h58604,
	       main_nn_pes_6_fadd_inProcQ_D_OUT[35:27],
	       fracb__h58605,
	       main_nn_pes_6_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_6_fadd_calcQ_ENQ =
	     main_nn_pes_6_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_6_fadd_calcQ_FULL_N ;
  assign main_nn_pes_6_fadd_calcQ_DEQ =
	     main_nn_pes_6_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_6_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_inProcQ
  assign main_nn_pes_6_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_6_fadd_inQ_first__670_BITS_62__ETC___d2683,
	       x__h58493,
	       fraca__h58324,
	       main_nn_pes_6_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_6_fadd_inQ_D_OUT[63],
	       fracb__h58325,
	       main_nn_pes_6_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_6_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_6_fadd_inProcQ_ENQ =
	     main_nn_pes_6_fadd_inQ_EMPTY_N &&
	     main_nn_pes_6_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_6_fadd_inProcQ_DEQ =
	     main_nn_pes_6_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_6_fadd_calcQ_FULL_N ;
  assign main_nn_pes_6_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_inQ
  assign main_nn_pes_6_fadd_inQ_D_IN =
	     { main_nn_pes_6_fmult_outQ_D_OUT,
	       main_nn_pes_6_addForwardQ_D_OUT } ;
  assign main_nn_pes_6_fadd_inQ_ENQ =
	     main_nn_pes_6_fmult_outQ_EMPTY_N &&
	     main_nn_pes_6_fadd_inQ_FULL_N &&
	     main_nn_pes_6_addForwardQ_EMPTY_N ;
  assign main_nn_pes_6_fadd_inQ_DEQ =
	     main_nn_pes_6_fadd_inQ_EMPTY_N &&
	     main_nn_pes_6_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_6_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_normalizeQ
  assign main_nn_pes_6_fadd_normalizeQ_D_IN =
	     { x__h58786, x__h58833, x__h58837 } ;
  assign main_nn_pes_6_fadd_normalizeQ_ENQ =
	     main_nn_pes_6_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ_DEQ =
	     main_nn_pes_6_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_normalizeQ1
  assign main_nn_pes_6_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_6_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_6_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h58967, newfrac___1__h58966 } :
		 main_nn_pes_6_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_6_fadd_normalizeQ1_ENQ =
	     main_nn_pes_6_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ1_DEQ =
	     main_nn_pes_6_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_normalizeQ2
  assign main_nn_pes_6_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_6_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_6_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_6_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h59066, newfrac___1__h59065 } :
		 main_nn_pes_6_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_6_fadd_normalizeQ2_ENQ =
	     main_nn_pes_6_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ2_DEQ =
	     main_nn_pes_6_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_normalizeQ3
  assign main_nn_pes_6_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_6_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_6_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_6_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h59165, newfrac___1__h59164 } :
		 main_nn_pes_6_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_6_fadd_normalizeQ3_ENQ =
	     main_nn_pes_6_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ3_DEQ =
	     main_nn_pes_6_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_normalizeQ4
  assign main_nn_pes_6_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_6_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_6_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_6_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h59264, newfrac___1__h59263 } :
		 main_nn_pes_6_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_6_fadd_normalizeQ4_ENQ =
	     main_nn_pes_6_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_6_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ4_DEQ =
	     main_nn_pes_6_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_6_fadd_outQ_FULL_N ;
  assign main_nn_pes_6_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fadd_outQ
  assign main_nn_pes_6_fadd_outQ_D_IN =
	     { main_nn_pes_6_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h59356,
	       x__h59363[16:0],
	       6'd0 } ;
  assign main_nn_pes_6_fadd_outQ_ENQ =
	     main_nn_pes_6_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_6_fadd_outQ_FULL_N ;
  assign main_nn_pes_6_fadd_outQ_DEQ =
	     main_nn_pes_6_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_6_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fmult_mult18_multin
  assign main_nn_pes_6_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac ? x_wget__h56711 : 18'd0 ;
  assign main_nn_pes_6_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac ? x_wget__h56782 : 18'd0 ;

  // submodule main_nn_pes_6_fmult_mult18_outQ
  assign main_nn_pes_6_fmult_mult18_outQ_D_IN =
	     main_nn_pes_6_fmult_mult18_multin_dataout ;
  assign main_nn_pes_6_fmult_mult18_outQ_ENQ =
	     main_nn_pes_6_fmult_mult18_validMap[2] &&
	     main_nn_pes_6_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_6_fmult_mult18_outQ_DEQ =
	     main_nn_pes_6_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_6_fmult_outQ_FULL_N ;
  assign main_nn_pes_6_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fmult_outQ
  assign main_nn_pes_6_fmult_outQ_D_IN =
	     main_nn_pes_6_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h57349 ;
  assign main_nn_pes_6_fmult_outQ_ENQ =
	     main_nn_pes_6_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_6_fmult_outQ_FULL_N ;
  assign main_nn_pes_6_fmult_outQ_DEQ =
	     main_nn_pes_6_fmult_outQ_EMPTY_N &&
	     main_nn_pes_6_fadd_inQ_FULL_N &&
	     main_nn_pes_6_addForwardQ_EMPTY_N ;
  assign main_nn_pes_6_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_fmult_signExpZeroQ
  assign main_nn_pes_6_fmult_signExpZeroQ_D_IN =
	     { x__h62322,
	       x__h62367,
	       main_nn_pes_6_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_6_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_6_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac ;
  assign main_nn_pes_6_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_6_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_6_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_6_fmult_outQ_FULL_N ;
  assign main_nn_pes_6_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_inputQ
  assign main_nn_pes_6_inputQ_D_IN = main_nn_dataInQs_6_D_OUT ;
  assign main_nn_pes_6_inputQ_ENQ =
	     main_nn_dataInQs_6_EMPTY_N && main_nn_dataInQs_7_FULL_N &&
	     main_nn_pes_6_inputQ_FULL_N ;
  assign main_nn_pes_6_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_6_enqMac ;
  assign main_nn_pes_6_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_outputQ
  assign main_nn_pes_6_outputQ_D_IN =
	     { main_nn_pes_6_partialSumQ_wDataOut_wget,
	       main_nn_pes_6_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_6_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults &&
	     main_nn_pes_6_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_6_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_6 &&
	     main_nn_pes_6_outputQ_EMPTY_N ;
  assign main_nn_pes_6_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_partialSumIdxQ1
  assign main_nn_pes_6_partialSumIdxQ1_D_IN =
	     { main_nn_pes_6_inputQ_D_OUT[7:0],
	       main_nn_pes_6_curOutputIdx,
	       x__h61869[15:0] } ;
  assign main_nn_pes_6_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac ;
  assign main_nn_pes_6_partialSumIdxQ1_DEQ =
	     main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_6_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_6_partialSumIdxQ2_memory
  assign main_nn_pes_6_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_6_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults ?
	       x__h60338[6:0] :
	       main_nn_pes_6_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_6_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_6_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_6_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_6_partialSumQ2
  assign main_nn_pes_6_partialSumQ2_D_IN =
	     main_nn_pes_6_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_6_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults &&
	     main_nn_pes_6_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_6_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_6_enqMac &&
	     !main_nn_pes_6_curMacIdx_897_ULT_64___d2898 ;
  assign main_nn_pes_6_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_6_partialSumQ_memory
  assign main_nn_pes_6_partialSumQ_memory_ADDRA =
	     main_nn_pes_6_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_6_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_6_filterDoneResults ?
	       x__h61424[6:0] :
	       main_nn_pes_6_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_6_partialSumQ_memory_DIA =
	     { main_nn_pes_6_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_6_fadd_outQ_D_OUT[31],
	       main_nn_pes_6_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_6_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_6_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_6_partialSumQ_memory_WEA =
	     main_nn_pes_6_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_6_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_6_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_6_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_6_weightInQ
  assign main_nn_pes_6_weightInQ_D_IN = main_nn_weightInQs_6_D_OUT ;
  assign main_nn_pes_6_weightInQ_ENQ =
	     main_nn_weightInQs_6_EMPTY_N && main_nn_weightInQs_7_FULL_N &&
	     (main_nn_weightInIdx_6[2:0] != 3'd6 ||
	      main_nn_pes_6_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_6[2:0] == 3'd6 ;
  assign main_nn_pes_6_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_6_relayWeightIn &&
	     main_nn_pes_6_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_6_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_6_weightQ
  assign main_nn_pes_6_weightQ_D_IN =
	     (main_nn_pes_6_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_6_weightInQ_D_OUT :
	       main_nn_pes_6_weightReplicateReg ;
  assign main_nn_pes_6_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_6_relayWeightIn ;
  assign main_nn_pes_6_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_6_enqMac ;
  assign main_nn_pes_6_weightQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_addForwardQ
  assign main_nn_pes_7_addForwardQ_D_IN =
	     main_nn_pes_7_curMacIdx_299_ULT_64___d3300 ?
	       32'd0 :
	       main_nn_pes_7_partialSumQ2_D_OUT ;
  assign main_nn_pes_7_addForwardQ_ENQ = WILL_FIRE_RL_main_nn_pes_7_enqMac ;
  assign main_nn_pes_7_addForwardQ_DEQ =
	     main_nn_pes_7_fmult_outQ_EMPTY_N &&
	     main_nn_pes_7_fadd_inQ_FULL_N &&
	     main_nn_pes_7_addForwardQ_EMPTY_N ;
  assign main_nn_pes_7_addForwardQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_calcQ
  assign main_nn_pes_7_fadd_calcQ_D_IN =
	     { main_nn_pes_7_fadd_inProcQ_D_OUT[62],
	       fraca__h66552,
	       main_nn_pes_7_fadd_inProcQ_D_OUT[35:27],
	       fracb__h66553,
	       main_nn_pes_7_fadd_inProcQ_D_OUT[8:0] } ;
  assign main_nn_pes_7_fadd_calcQ_ENQ =
	     main_nn_pes_7_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_7_fadd_calcQ_FULL_N ;
  assign main_nn_pes_7_fadd_calcQ_DEQ =
	     main_nn_pes_7_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_7_fadd_calcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_inProcQ
  assign main_nn_pes_7_fadd_inProcQ_D_IN =
	     { NOT_main_nn_pes_7_fadd_inQ_first__072_BITS_62__ETC___d3085,
	       x__h66441,
	       fraca__h66272,
	       main_nn_pes_7_fadd_inQ_D_OUT[62:55],
	       main_nn_pes_7_fadd_inQ_D_OUT[63],
	       fracb__h66273,
	       main_nn_pes_7_fadd_inQ_D_OUT[30:23],
	       main_nn_pes_7_fadd_inQ_D_OUT[31] } ;
  assign main_nn_pes_7_fadd_inProcQ_ENQ =
	     main_nn_pes_7_fadd_inQ_EMPTY_N &&
	     main_nn_pes_7_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_7_fadd_inProcQ_DEQ =
	     main_nn_pes_7_fadd_inProcQ_EMPTY_N &&
	     main_nn_pes_7_fadd_calcQ_FULL_N ;
  assign main_nn_pes_7_fadd_inProcQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_inQ
  assign main_nn_pes_7_fadd_inQ_D_IN =
	     { main_nn_pes_7_fmult_outQ_D_OUT,
	       main_nn_pes_7_addForwardQ_D_OUT } ;
  assign main_nn_pes_7_fadd_inQ_ENQ =
	     main_nn_pes_7_fmult_outQ_EMPTY_N &&
	     main_nn_pes_7_fadd_inQ_FULL_N &&
	     main_nn_pes_7_addForwardQ_EMPTY_N ;
  assign main_nn_pes_7_fadd_inQ_DEQ =
	     main_nn_pes_7_fadd_inQ_EMPTY_N &&
	     main_nn_pes_7_fadd_inProcQ_FULL_N ;
  assign main_nn_pes_7_fadd_inQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_normalizeQ
  assign main_nn_pes_7_fadd_normalizeQ_D_IN =
	     { x__h66734, x__h66781, x__h66785 } ;
  assign main_nn_pes_7_fadd_normalizeQ_ENQ =
	     main_nn_pes_7_fadd_calcQ_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ_DEQ =
	     main_nn_pes_7_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_normalizeQ1
  assign main_nn_pes_7_fadd_normalizeQ1_D_IN =
	     { main_nn_pes_7_fadd_normalizeQ_D_OUT[27],
	       main_nn_pes_7_fadd_normalizeQ_D_OUT[18] ?
		 { newexp___1__h66915, newfrac___1__h66914 } :
		 main_nn_pes_7_fadd_normalizeQ_D_OUT[26:0] } ;
  assign main_nn_pes_7_fadd_normalizeQ1_ENQ =
	     main_nn_pes_7_fadd_normalizeQ_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ1_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ1_DEQ =
	     main_nn_pes_7_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_normalizeQ2
  assign main_nn_pes_7_fadd_normalizeQ2_D_IN =
	     { main_nn_pes_7_fadd_normalizeQ1_D_OUT[27],
	       (main_nn_pes_7_fadd_normalizeQ1_D_OUT[17:9] == 9'd0 &&
		main_nn_pes_7_fadd_normalizeQ1_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h67014, newfrac___1__h67013 } :
		 main_nn_pes_7_fadd_normalizeQ1_D_OUT[26:0] } ;
  assign main_nn_pes_7_fadd_normalizeQ2_ENQ =
	     main_nn_pes_7_fadd_normalizeQ1_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ2_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ2_DEQ =
	     main_nn_pes_7_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_normalizeQ3
  assign main_nn_pes_7_fadd_normalizeQ3_D_IN =
	     { main_nn_pes_7_fadd_normalizeQ2_D_OUT[27],
	       (main_nn_pes_7_fadd_normalizeQ2_D_OUT[17:14] == 4'd0 &&
		main_nn_pes_7_fadd_normalizeQ2_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h67113, newfrac___1__h67112 } :
		 main_nn_pes_7_fadd_normalizeQ2_D_OUT[26:0] } ;
  assign main_nn_pes_7_fadd_normalizeQ3_ENQ =
	     main_nn_pes_7_fadd_normalizeQ2_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ3_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ3_DEQ =
	     main_nn_pes_7_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ3_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_normalizeQ4
  assign main_nn_pes_7_fadd_normalizeQ4_D_IN =
	     { main_nn_pes_7_fadd_normalizeQ3_D_OUT[27],
	       (main_nn_pes_7_fadd_normalizeQ3_D_OUT[17:16] == 2'd0 &&
		main_nn_pes_7_fadd_normalizeQ3_D_OUT[18:0] != 19'd0) ?
		 { newexp___1__h67212, newfrac___1__h67211 } :
		 main_nn_pes_7_fadd_normalizeQ3_D_OUT[26:0] } ;
  assign main_nn_pes_7_fadd_normalizeQ4_ENQ =
	     main_nn_pes_7_fadd_normalizeQ3_EMPTY_N &&
	     main_nn_pes_7_fadd_normalizeQ4_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ4_DEQ =
	     main_nn_pes_7_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_7_fadd_outQ_FULL_N ;
  assign main_nn_pes_7_fadd_normalizeQ4_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fadd_outQ
  assign main_nn_pes_7_fadd_outQ_D_IN =
	     { main_nn_pes_7_fadd_normalizeQ4_D_OUT[27],
	       _theResult___snd__h67304,
	       x__h67311[16:0],
	       6'd0 } ;
  assign main_nn_pes_7_fadd_outQ_ENQ =
	     main_nn_pes_7_fadd_normalizeQ4_EMPTY_N &&
	     main_nn_pes_7_fadd_outQ_FULL_N ;
  assign main_nn_pes_7_fadd_outQ_DEQ =
	     main_nn_pes_7_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_7_fadd_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fmult_mult18_multin
  assign main_nn_pes_7_fmult_mult18_multin_dataax =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac ? x_wget__h64659 : 18'd0 ;
  assign main_nn_pes_7_fmult_mult18_multin_dataay =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac ? x_wget__h64730 : 18'd0 ;

  // submodule main_nn_pes_7_fmult_mult18_outQ
  assign main_nn_pes_7_fmult_mult18_outQ_D_IN =
	     main_nn_pes_7_fmult_mult18_multin_dataout ;
  assign main_nn_pes_7_fmult_mult18_outQ_ENQ =
	     main_nn_pes_7_fmult_mult18_validMap[2] &&
	     main_nn_pes_7_fmult_mult18_outQ_FULL_N ;
  assign main_nn_pes_7_fmult_mult18_outQ_DEQ =
	     main_nn_pes_7_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_7_fmult_outQ_FULL_N ;
  assign main_nn_pes_7_fmult_mult18_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fmult_outQ
  assign main_nn_pes_7_fmult_outQ_D_IN =
	     main_nn_pes_7_fmult_signExpZeroQ_D_OUT[0] ? 32'd0 : x__h65297 ;
  assign main_nn_pes_7_fmult_outQ_ENQ =
	     main_nn_pes_7_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_7_fmult_outQ_FULL_N ;
  assign main_nn_pes_7_fmult_outQ_DEQ =
	     main_nn_pes_7_fmult_outQ_EMPTY_N &&
	     main_nn_pes_7_fadd_inQ_FULL_N &&
	     main_nn_pes_7_addForwardQ_EMPTY_N ;
  assign main_nn_pes_7_fmult_outQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_fmult_signExpZeroQ
  assign main_nn_pes_7_fmult_signExpZeroQ_D_IN =
	     { x__h70270,
	       x__h70315,
	       main_nn_pes_7_inputQ_D_OUT[38:31] == 8'd0 ||
	       main_nn_pes_7_weightQ_D_OUT[30:23] == 8'd0 } ;
  assign main_nn_pes_7_fmult_signExpZeroQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac ;
  assign main_nn_pes_7_fmult_signExpZeroQ_DEQ =
	     main_nn_pes_7_fmult_mult18_outQ_EMPTY_N &&
	     main_nn_pes_7_fmult_signExpZeroQ_EMPTY_N &&
	     main_nn_pes_7_fmult_outQ_FULL_N ;
  assign main_nn_pes_7_fmult_signExpZeroQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_inputQ
  assign main_nn_pes_7_inputQ_D_IN = main_nn_dataInQs_7_D_OUT ;
  assign main_nn_pes_7_inputQ_ENQ =
	     main_nn_dataInQs_7_EMPTY_N && main_nn_pes_7_inputQ_FULL_N ;
  assign main_nn_pes_7_inputQ_DEQ = WILL_FIRE_RL_main_nn_pes_7_enqMac ;
  assign main_nn_pes_7_inputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_outputQ
  assign main_nn_pes_7_outputQ_D_IN =
	     { main_nn_pes_7_partialSumQ_wDataOut_wget,
	       main_nn_pes_7_partialSumIdxQ2_wDataOut_wget[31:16] } ;
  assign main_nn_pes_7_outputQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults &&
	     main_nn_pes_7_partialSumIdxQ2_wDataOut_wget[15:0] == 16'd1023 ;
  assign main_nn_pes_7_outputQ_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_7 &&
	     main_nn_pes_7_outputQ_EMPTY_N ;
  assign main_nn_pes_7_outputQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_partialSumIdxQ1
  assign main_nn_pes_7_partialSumIdxQ1_D_IN =
	     { main_nn_pes_7_inputQ_D_OUT[7:0],
	       main_nn_pes_7_curOutputIdx,
	       x__h69817[15:0] } ;
  assign main_nn_pes_7_partialSumIdxQ1_ENQ =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac ;
  assign main_nn_pes_7_partialSumIdxQ1_DEQ =
	     main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_7_partialSumIdxQ1_CLR = 1'b0 ;

  // submodule main_nn_pes_7_partialSumIdxQ2_memory
  assign main_nn_pes_7_partialSumIdxQ2_memory_ADDRA =
	     main_nn_pes_7_partialSumIdxQ2_rWrPtr[6:0] ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults ?
	       x__h68286[6:0] :
	       main_nn_pes_7_partialSumIdxQ2_rRdPtr[6:0] ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_DIA =
	     main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ?
	       main_nn_pes_7_partialSumIdxQ1_D_OUT :
	       32'd0 ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_WEA =
	     main_nn_pes_7_partialSumIdxQ2_pwEnqueue_whas ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_WEB = 1'd0 ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_ENA = 1'b1 ;
  assign main_nn_pes_7_partialSumIdxQ2_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_7_partialSumQ2
  assign main_nn_pes_7_partialSumQ2_D_IN =
	     main_nn_pes_7_partialSumQ_wDataOut_wget ;
  assign main_nn_pes_7_partialSumQ2_ENQ =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults &&
	     main_nn_pes_7_partialSumIdxQ2_wDataOut_wget[15:0] != 16'd1023 ;
  assign main_nn_pes_7_partialSumQ2_DEQ =
	     WILL_FIRE_RL_main_nn_pes_7_enqMac &&
	     !main_nn_pes_7_curMacIdx_299_ULT_64___d3300 ;
  assign main_nn_pes_7_partialSumQ2_CLR = 1'b0 ;

  // submodule main_nn_pes_7_partialSumQ_memory
  assign main_nn_pes_7_partialSumQ_memory_ADDRA =
	     main_nn_pes_7_partialSumQ_rWrPtr[6:0] ;
  assign main_nn_pes_7_partialSumQ_memory_ADDRB =
	     WILL_FIRE_RL_main_nn_pes_7_filterDoneResults ?
	       x__h69372[6:0] :
	       main_nn_pes_7_partialSumQ_rRdPtr[6:0] ;
  assign main_nn_pes_7_partialSumQ_memory_DIA =
	     { main_nn_pes_7_partialSumQ_pwEnqueue_whas &&
	       main_nn_pes_7_fadd_outQ_D_OUT[31],
	       main_nn_pes_7_partialSumQ_pwEnqueue_whas ?
		 main_nn_pes_7_fadd_outQ_D_OUT[30:0] :
		 31'd0 } ;
  assign main_nn_pes_7_partialSumQ_memory_DIB =
	     32'hAAAAAAAA /* unspecified value */  ;
  assign main_nn_pes_7_partialSumQ_memory_WEA =
	     main_nn_pes_7_partialSumQ_pwEnqueue_whas ;
  assign main_nn_pes_7_partialSumQ_memory_WEB = 1'd0 ;
  assign main_nn_pes_7_partialSumQ_memory_ENA = 1'b1 ;
  assign main_nn_pes_7_partialSumQ_memory_ENB = 1'b1 ;

  // submodule main_nn_pes_7_weightInQ
  assign main_nn_pes_7_weightInQ_D_IN = main_nn_weightInQs_7_D_OUT ;
  assign main_nn_pes_7_weightInQ_ENQ =
	     main_nn_weightInQs_7_EMPTY_N &&
	     (main_nn_weightInIdx_7[2:0] != 3'd7 ||
	      main_nn_pes_7_weightInQ_FULL_N) &&
	     main_nn_weightInIdx_7[2:0] == 3'd7 ;
  assign main_nn_pes_7_weightInQ_DEQ =
	     WILL_FIRE_RL_main_nn_pes_7_relayWeightIn &&
	     main_nn_pes_7_weightReplicateCnt == 8'd0 ;
  assign main_nn_pes_7_weightInQ_CLR = 1'b0 ;

  // submodule main_nn_pes_7_weightQ
  assign main_nn_pes_7_weightQ_D_IN =
	     (main_nn_pes_7_weightReplicateCnt == 8'd0) ?
	       main_nn_pes_7_weightInQ_D_OUT :
	       main_nn_pes_7_weightReplicateReg ;
  assign main_nn_pes_7_weightQ_ENQ =
	     WILL_FIRE_RL_main_nn_pes_7_relayWeightIn ;
  assign main_nn_pes_7_weightQ_DEQ = WILL_FIRE_RL_main_nn_pes_7_enqMac ;
  assign main_nn_pes_7_weightQ_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_0
  assign main_nn_resultOutQs_0_D_IN =
	     main_nn_pes_0_outputQ_EMPTY_N ?
	       main_nn_pes_0_outputQ_D_OUT :
	       main_nn_resultOutQs_1_D_OUT ;
  assign main_nn_resultOutQs_0_ENQ = WILL_FIRE_RL_main_nn_forwardResult ;
  assign main_nn_resultOutQs_0_DEQ =
	     WILL_FIRE_RL_main_serializeOutput &&
	     main_outputBufferCnt == 3'd0 ;
  assign main_nn_resultOutQs_0_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_1
  assign main_nn_resultOutQs_1_D_IN =
	     main_nn_pes_1_outputQ_EMPTY_N ?
	       main_nn_pes_1_outputQ_D_OUT :
	       main_nn_resultOutQs_2_D_OUT ;
  assign main_nn_resultOutQs_1_ENQ = WILL_FIRE_RL_main_nn_forwardResult_1 ;
  assign main_nn_resultOutQs_1_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult &&
	     !main_nn_pes_0_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_1_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_2
  assign main_nn_resultOutQs_2_D_IN =
	     main_nn_pes_2_outputQ_EMPTY_N ?
	       main_nn_pes_2_outputQ_D_OUT :
	       main_nn_resultOutQs_3_D_OUT ;
  assign main_nn_resultOutQs_2_ENQ = WILL_FIRE_RL_main_nn_forwardResult_2 ;
  assign main_nn_resultOutQs_2_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_1 &&
	     !main_nn_pes_1_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_2_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_3
  assign main_nn_resultOutQs_3_D_IN =
	     main_nn_pes_3_outputQ_EMPTY_N ?
	       main_nn_pes_3_outputQ_D_OUT :
	       main_nn_resultOutQs_4_D_OUT ;
  assign main_nn_resultOutQs_3_ENQ = WILL_FIRE_RL_main_nn_forwardResult_3 ;
  assign main_nn_resultOutQs_3_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_2 &&
	     !main_nn_pes_2_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_3_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_4
  assign main_nn_resultOutQs_4_D_IN =
	     main_nn_pes_4_outputQ_EMPTY_N ?
	       main_nn_pes_4_outputQ_D_OUT :
	       main_nn_resultOutQs_5_D_OUT ;
  assign main_nn_resultOutQs_4_ENQ = WILL_FIRE_RL_main_nn_forwardResult_4 ;
  assign main_nn_resultOutQs_4_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_3 &&
	     !main_nn_pes_3_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_4_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_5
  assign main_nn_resultOutQs_5_D_IN =
	     main_nn_pes_5_outputQ_EMPTY_N ?
	       main_nn_pes_5_outputQ_D_OUT :
	       main_nn_resultOutQs_6_D_OUT ;
  assign main_nn_resultOutQs_5_ENQ = WILL_FIRE_RL_main_nn_forwardResult_5 ;
  assign main_nn_resultOutQs_5_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_4 &&
	     !main_nn_pes_4_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_5_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_6
  assign main_nn_resultOutQs_6_D_IN =
	     main_nn_pes_6_outputQ_EMPTY_N ?
	       main_nn_pes_6_outputQ_D_OUT :
	       main_nn_resultOutQs_7_D_OUT ;
  assign main_nn_resultOutQs_6_ENQ = WILL_FIRE_RL_main_nn_forwardResult_6 ;
  assign main_nn_resultOutQs_6_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_5 &&
	     !main_nn_pes_5_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_6_CLR = 1'b0 ;

  // submodule main_nn_resultOutQs_7
  assign main_nn_resultOutQs_7_D_IN = main_nn_pes_7_outputQ_D_OUT ;
  assign main_nn_resultOutQs_7_ENQ =
	     WILL_FIRE_RL_main_nn_forwardResult_7 &&
	     main_nn_pes_7_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_7_DEQ =
	     WILL_FIRE_RL_main_nn_forwardResult_6 &&
	     !main_nn_pes_6_outputQ_EMPTY_N ;
  assign main_nn_resultOutQs_7_CLR = 1'b0 ;

  // submodule main_nn_testQ
  assign main_nn_testQ_D_IN = 32'h0 ;
  assign main_nn_testQ_ENQ = 1'b0 ;
  assign main_nn_testQ_DEQ = 1'b0 ;
  assign main_nn_testQ_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_0
  assign main_nn_weightInQs_0_D_IN =
	     { mem_readRespQ_D_OUT, main_memReadBuffer[15:0] } ;
  assign main_nn_weightInQs_0_ENQ =
	     mem_readRespQ_EMPTY_N &&
	     (!main_memReadBuffer[16] || main_nn_weightInQs_0_FULL_N) &&
	     main_memReadBuffer[16] ;
  assign main_nn_weightInQs_0_DEQ =
	     main_nn_weightInQs_0_EMPTY_N && main_nn_weightInQs_1_FULL_N &&
	     (main_nn_weightInIdx_0[2:0] != 3'd0 ||
	      main_nn_pes_0_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_0_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_1
  assign main_nn_weightInQs_1_D_IN = main_nn_weightInQs_0_D_OUT ;
  assign main_nn_weightInQs_1_ENQ =
	     main_nn_weightInQs_0_EMPTY_N && main_nn_weightInQs_1_FULL_N &&
	     (main_nn_weightInIdx_0[2:0] != 3'd0 ||
	      main_nn_pes_0_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_1_DEQ =
	     main_nn_weightInQs_1_EMPTY_N && main_nn_weightInQs_2_FULL_N &&
	     (main_nn_weightInIdx_1[2:0] != 3'd1 ||
	      main_nn_pes_1_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_1_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_2
  assign main_nn_weightInQs_2_D_IN = main_nn_weightInQs_1_D_OUT ;
  assign main_nn_weightInQs_2_ENQ =
	     main_nn_weightInQs_1_EMPTY_N && main_nn_weightInQs_2_FULL_N &&
	     (main_nn_weightInIdx_1[2:0] != 3'd1 ||
	      main_nn_pes_1_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_2_DEQ =
	     main_nn_weightInQs_2_EMPTY_N && main_nn_weightInQs_3_FULL_N &&
	     (main_nn_weightInIdx_2[2:0] != 3'd2 ||
	      main_nn_pes_2_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_2_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_3
  assign main_nn_weightInQs_3_D_IN = main_nn_weightInQs_2_D_OUT ;
  assign main_nn_weightInQs_3_ENQ =
	     main_nn_weightInQs_2_EMPTY_N && main_nn_weightInQs_3_FULL_N &&
	     (main_nn_weightInIdx_2[2:0] != 3'd2 ||
	      main_nn_pes_2_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_3_DEQ =
	     main_nn_weightInQs_3_EMPTY_N && main_nn_weightInQs_4_FULL_N &&
	     (main_nn_weightInIdx_3[2:0] != 3'd3 ||
	      main_nn_pes_3_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_3_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_4
  assign main_nn_weightInQs_4_D_IN = main_nn_weightInQs_3_D_OUT ;
  assign main_nn_weightInQs_4_ENQ =
	     main_nn_weightInQs_3_EMPTY_N && main_nn_weightInQs_4_FULL_N &&
	     (main_nn_weightInIdx_3[2:0] != 3'd3 ||
	      main_nn_pes_3_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_4_DEQ =
	     main_nn_weightInQs_4_EMPTY_N && main_nn_weightInQs_5_FULL_N &&
	     (main_nn_weightInIdx_4[2:0] != 3'd4 ||
	      main_nn_pes_4_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_4_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_5
  assign main_nn_weightInQs_5_D_IN = main_nn_weightInQs_4_D_OUT ;
  assign main_nn_weightInQs_5_ENQ =
	     main_nn_weightInQs_4_EMPTY_N && main_nn_weightInQs_5_FULL_N &&
	     (main_nn_weightInIdx_4[2:0] != 3'd4 ||
	      main_nn_pes_4_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_5_DEQ =
	     main_nn_weightInQs_5_EMPTY_N && main_nn_weightInQs_6_FULL_N &&
	     (main_nn_weightInIdx_5[2:0] != 3'd5 ||
	      main_nn_pes_5_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_5_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_6
  assign main_nn_weightInQs_6_D_IN = main_nn_weightInQs_5_D_OUT ;
  assign main_nn_weightInQs_6_ENQ =
	     main_nn_weightInQs_5_EMPTY_N && main_nn_weightInQs_6_FULL_N &&
	     (main_nn_weightInIdx_5[2:0] != 3'd5 ||
	      main_nn_pes_5_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_6_DEQ =
	     main_nn_weightInQs_6_EMPTY_N && main_nn_weightInQs_7_FULL_N &&
	     (main_nn_weightInIdx_6[2:0] != 3'd6 ||
	      main_nn_pes_6_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_6_CLR = 1'b0 ;

  // submodule main_nn_weightInQs_7
  assign main_nn_weightInQs_7_D_IN = main_nn_weightInQs_6_D_OUT ;
  assign main_nn_weightInQs_7_ENQ =
	     main_nn_weightInQs_6_EMPTY_N && main_nn_weightInQs_7_FULL_N &&
	     (main_nn_weightInIdx_6[2:0] != 3'd6 ||
	      main_nn_pes_6_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_7_DEQ =
	     main_nn_weightInQs_7_EMPTY_N &&
	     (main_nn_weightInIdx_7[2:0] != 3'd7 ||
	      main_nn_pes_7_weightInQ_FULL_N) ;
  assign main_nn_weightInQs_7_CLR = 1'b0 ;

  // submodule main_serialrxQ
  assign main_serialrxQ_D_IN = serialToMainQ_dD_OUT ;
  assign main_serialrxQ_ENQ =
	     serialToMainQ_dEMPTY_N && main_serialrxQ_FULL_N ;
  assign main_serialrxQ_DEQ =
	     WILL_FIRE_RL_main_recvInputFloat ||
	     WILL_FIRE_RL_main_recvInputDst ;
  assign main_serialrxQ_CLR = 1'b0 ;

  // submodule main_serialtxQ
  assign main_serialtxQ_D_IN =
	     (main_outputBufferCnt == 3'd0) ?
	       main_nn_resultOutQs_0_D_OUT[15:8] :
	       main_outputBuffer[7:0] ;
  assign main_serialtxQ_ENQ = WILL_FIRE_RL_main_serializeOutput ;
  assign main_serialtxQ_DEQ =
	     mainToSerialQ_sFULL_N && main_serialtxQ_EMPTY_N ;
  assign main_serialtxQ_CLR = 1'b0 ;

  // submodule mem_readRespQ
  assign mem_readRespQ_D_IN = mem_xx_inout16_XX_read_data ;
  assign mem_readRespQ_ENQ =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd5 &&
	     mem_readRespQ_FULL_N ;
  assign mem_readRespQ_DEQ =
	     mem_readRespQ_EMPTY_N &&
	     (!main_memReadBuffer[16] || main_nn_weightInQs_0_FULL_N) ;
  assign mem_readRespQ_CLR = 1'b0 ;

  // submodule mem_reqQ
  assign mem_reqQ_D_IN =
	     WILL_FIRE_RL_main_procMemWrite ?
	       MUX_mem_reqQ_enq_1__VAL_1 :
	       MUX_mem_reqQ_enq_1__VAL_2 ;
  assign mem_reqQ_ENQ =
	     WILL_FIRE_RL_main_procMemWrite ||
	     CAN_FIRE_RL_main_procMemRead && !WILL_FIRE_RL_main_procMemWrite ;
  assign mem_reqQ_DEQ =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd0 &&
	     mem_counter_9_ULT_780___d64 &&
	     mem_reqQ_EMPTY_N ;
  assign mem_reqQ_CLR = 1'b0 ;

  // submodule mem_xx_inout16_XX
  assign mem_xx_inout16_XX_write_data = mem_cur_cmd_wdata ;
  assign mem_xx_inout16_XX_write_req =
	     WILL_FIRE_RL_mem_controllerFSM && mem_state == 3'd4 &&
	     mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 &&
	     SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 &&
	     !mem_cur_cmd_isRead ;

  // submodule serialToMainQ
  assign serialToMainQ_sD_IN = uart_outQ_D_OUT ;
  assign serialToMainQ_sENQ = serialToMainQ_sFULL_N && uart_outQ_EMPTY_N ;
  assign serialToMainQ_dDEQ =
	     serialToMainQ_dEMPTY_N && main_serialrxQ_FULL_N ;

  // submodule uart_inQ
  assign uart_inQ_D_IN = mainToSerialQ_dD_OUT ;
  assign uart_inQ_ENQ = mainToSerialQ_dEMPTY_N && uart_inQ_FULL_N ;
  assign uart_inQ_DEQ =
	     WILL_FIRE_RL_uart_outcntclk &&
	     !uart_clkcnt_PLUS_1_ULT_217___d3 &&
	     uart_curoutoff == 5'd0 ;
  assign uart_inQ_CLR = 1'b0 ;

  // submodule uart_outQ
  assign uart_outQ_D_IN = uart_outword ;
  assign uart_outQ_ENQ =
	     WILL_FIRE_RL_uart_insample && uart_samplecountdown == 16'd0 &&
	     uart_bleft == 4'd1 ;
  assign uart_outQ_DEQ = serialToMainQ_sFULL_N && uart_outQ_EMPTY_N ;
  assign uart_outQ_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d137 =
	     mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ?
	       (SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 ?
		  (mem_cur_cmd_isRead ? 4'b0110 : 4'b0010) :
		  4'b0001) :
	       4'b0101 ;
  assign IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d151 =
	     mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ?
	       (SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 ?
		  x__h3841 :
		  x__h3670) :
	       mem_cur_cmd_address[23:11] ;
  assign IF_mem_open_bank_21_BIT_mem_cur_cmd_address_22_ETC___d171 =
	     mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 ?
	       (SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 ?
		  (mem_cur_cmd_isRead ? 3'd5 : 3'd0) :
		  3'd4) :
	       3'd4 ;
  assign NOT_main_inputBufferCnt_424_EQ_3_425_426_OR_IF_ETC___d3436 =
	     main_inputBufferCnt != 2'd3 ||
	     (main_inputDst[7:0] == 8'hFF || main_nn_dataInQs_0_FULL_N) &&
	     (main_inputDst[7:0] != 8'hFF || main_memWriteQ_FULL_N) ;
  assign NOT_main_nn_pes_0_fadd_inQ_first__58_BITS_62_T_ETC___d271 =
	     !main_nn_pes_0_fadd_inQ_first__58_BITS_62_TO_55_ETC___d261 ||
	     main_nn_pes_0_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_0_fadd_inQ_D_OUT[30:23] &&
	     fraca__h9720 > fracb__h9721 ;
  assign NOT_main_nn_pes_1_fadd_inQ_first__60_BITS_62_T_ETC___d673 =
	     !main_nn_pes_1_fadd_inQ_first__60_BITS_62_TO_55_ETC___d663 ||
	     main_nn_pes_1_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_1_fadd_inQ_D_OUT[30:23] &&
	     fraca__h18584 > fracb__h18585 ;
  assign NOT_main_nn_pes_2_fadd_inQ_first__062_BITS_62__ETC___d1075 =
	     !main_nn_pes_2_fadd_inQ_first__062_BITS_62_TO_5_ETC___d1065 ||
	     main_nn_pes_2_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_2_fadd_inQ_D_OUT[30:23] &&
	     fraca__h26532 > fracb__h26533 ;
  assign NOT_main_nn_pes_3_fadd_inQ_first__464_BITS_62__ETC___d1477 =
	     !main_nn_pes_3_fadd_inQ_first__464_BITS_62_TO_5_ETC___d1467 ||
	     main_nn_pes_3_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_3_fadd_inQ_D_OUT[30:23] &&
	     fraca__h34480 > fracb__h34481 ;
  assign NOT_main_nn_pes_4_fadd_inQ_first__866_BITS_62__ETC___d1879 =
	     !main_nn_pes_4_fadd_inQ_first__866_BITS_62_TO_5_ETC___d1869 ||
	     main_nn_pes_4_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_4_fadd_inQ_D_OUT[30:23] &&
	     fraca__h42428 > fracb__h42429 ;
  assign NOT_main_nn_pes_5_fadd_inQ_first__268_BITS_62__ETC___d2281 =
	     !main_nn_pes_5_fadd_inQ_first__268_BITS_62_TO_5_ETC___d2271 ||
	     main_nn_pes_5_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_5_fadd_inQ_D_OUT[30:23] &&
	     fraca__h50376 > fracb__h50377 ;
  assign NOT_main_nn_pes_6_fadd_inQ_first__670_BITS_62__ETC___d2683 =
	     !main_nn_pes_6_fadd_inQ_first__670_BITS_62_TO_5_ETC___d2673 ||
	     main_nn_pes_6_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_6_fadd_inQ_D_OUT[30:23] &&
	     fraca__h58324 > fracb__h58325 ;
  assign NOT_main_nn_pes_7_fadd_inQ_first__072_BITS_62__ETC___d3085 =
	     !main_nn_pes_7_fadd_inQ_first__072_BITS_62_TO_5_ETC___d3075 ||
	     main_nn_pes_7_fadd_inQ_D_OUT[62:55] ==
	     main_nn_pes_7_fadd_inQ_D_OUT[30:23] &&
	     fraca__h66272 > fracb__h66273 ;
  assign SEL_ARR_mem_open_rows_25_BITS_12_TO_0_26_mem_o_ETC___d133 =
	     CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1 ==
	     mem_cur_cmd_address[23:11] ;
  assign _theResult___fst__h17652 =
	     main_nn_pes_1_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_1_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_1_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h25600 =
	     main_nn_pes_2_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_2_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_2_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h33548 =
	     main_nn_pes_3_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_3_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_3_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h41496 =
	     main_nn_pes_4_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_4_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_4_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h49444 =
	     main_nn_pes_5_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_5_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_5_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h57392 =
	     main_nn_pes_6_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_6_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_6_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h65340 =
	     main_nn_pes_7_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_7_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_7_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___fst__h8788 =
	     main_nn_pes_0_fmult_mult18_outQ_D_OUT[35] ?
	       main_nn_pes_0_fmult_mult18_outQ_D_OUT[34:17] :
	       main_nn_pes_0_fmult_mult18_outQ_D_OUT[33:16] ;
  assign _theResult___snd__h10755 =
	     (!main_nn_pes_0_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_0_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h10757 :
	       main_nn_pes_0_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h17653 =
	     main_nn_pes_1_fmult_mult18_outQ_D_OUT[35] ?
	       x__h17658[7:0] :
	       x__h17667[7:0] ;
  assign _theResult___snd__h19616 =
	     (!main_nn_pes_1_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_1_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h19618 :
	       main_nn_pes_1_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h25601 =
	     main_nn_pes_2_fmult_mult18_outQ_D_OUT[35] ?
	       x__h25606[7:0] :
	       x__h25615[7:0] ;
  assign _theResult___snd__h27564 =
	     (!main_nn_pes_2_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_2_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h27566 :
	       main_nn_pes_2_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h33549 =
	     main_nn_pes_3_fmult_mult18_outQ_D_OUT[35] ?
	       x__h33554[7:0] :
	       x__h33563[7:0] ;
  assign _theResult___snd__h35512 =
	     (!main_nn_pes_3_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_3_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h35514 :
	       main_nn_pes_3_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h41497 =
	     main_nn_pes_4_fmult_mult18_outQ_D_OUT[35] ?
	       x__h41502[7:0] :
	       x__h41511[7:0] ;
  assign _theResult___snd__h43460 =
	     (!main_nn_pes_4_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_4_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h43462 :
	       main_nn_pes_4_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h49445 =
	     main_nn_pes_5_fmult_mult18_outQ_D_OUT[35] ?
	       x__h49450[7:0] :
	       x__h49459[7:0] ;
  assign _theResult___snd__h51408 =
	     (!main_nn_pes_5_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_5_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h51410 :
	       main_nn_pes_5_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h57393 =
	     main_nn_pes_6_fmult_mult18_outQ_D_OUT[35] ?
	       x__h57398[7:0] :
	       x__h57407[7:0] ;
  assign _theResult___snd__h59356 =
	     (!main_nn_pes_6_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_6_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h59358 :
	       main_nn_pes_6_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h65341 =
	     main_nn_pes_7_fmult_mult18_outQ_D_OUT[35] ?
	       x__h65346[7:0] :
	       x__h65355[7:0] ;
  assign _theResult___snd__h67304 =
	     (!main_nn_pes_7_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_7_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newexp___1__h67306 :
	       main_nn_pes_7_fadd_normalizeQ4_D_OUT[26:19] ;
  assign _theResult___snd__h8789 =
	     main_nn_pes_0_fmult_mult18_outQ_D_OUT[35] ?
	       x__h8794[7:0] :
	       x__h8803[7:0] ;
  assign fraca__h10003 =
	     main_nn_pes_0_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_0_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_0_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_0_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h18584 = { 1'd1, main_nn_pes_1_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h18864 =
	     main_nn_pes_1_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_1_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_1_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_1_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h26532 = { 1'd1, main_nn_pes_2_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h26812 =
	     main_nn_pes_2_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_2_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_2_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_2_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h34480 = { 1'd1, main_nn_pes_3_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h34760 =
	     main_nn_pes_3_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_3_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_3_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_3_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h42428 = { 1'd1, main_nn_pes_4_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h42708 =
	     main_nn_pes_4_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_4_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_4_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_4_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h50376 = { 1'd1, main_nn_pes_5_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h50656 =
	     main_nn_pes_5_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_5_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_5_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_5_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h58324 = { 1'd1, main_nn_pes_6_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h58604 =
	     main_nn_pes_6_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_6_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_6_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_6_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h66272 = { 1'd1, main_nn_pes_7_fadd_inQ_D_OUT[54:38] } ;
  assign fraca__h66552 =
	     main_nn_pes_7_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_7_fadd_inProcQ_D_OUT[53:36] :
	       main_nn_pes_7_fadd_inProcQ_D_OUT[53:36] >>
	       main_nn_pes_7_fadd_inProcQ_D_OUT[61:54] ;
  assign fraca__h9720 = { 1'd1, main_nn_pes_0_fadd_inQ_D_OUT[54:38] } ;
  assign fracb__h10004 =
	     main_nn_pes_0_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_0_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_0_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_0_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h18585 = { 1'd1, main_nn_pes_1_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h18865 =
	     main_nn_pes_1_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_1_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_1_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_1_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h26533 = { 1'd1, main_nn_pes_2_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h26813 =
	     main_nn_pes_2_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_2_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_2_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_2_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h34481 = { 1'd1, main_nn_pes_3_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h34761 =
	     main_nn_pes_3_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_3_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_3_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_3_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h42429 = { 1'd1, main_nn_pes_4_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h42709 =
	     main_nn_pes_4_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_4_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_4_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_4_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h50377 = { 1'd1, main_nn_pes_5_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h50657 =
	     main_nn_pes_5_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_5_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_5_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_5_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h58325 = { 1'd1, main_nn_pes_6_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h58605 =
	     main_nn_pes_6_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_6_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_6_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_6_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h66273 = { 1'd1, main_nn_pes_7_fadd_inQ_D_OUT[22:6] } ;
  assign fracb__h66553 =
	     main_nn_pes_7_fadd_inProcQ_D_OUT[62] ?
	       main_nn_pes_7_fadd_inProcQ_D_OUT[26:9] >>
	       main_nn_pes_7_fadd_inProcQ_D_OUT[61:54] :
	       main_nn_pes_7_fadd_inProcQ_D_OUT[26:9] ;
  assign fracb__h9721 = { 1'd1, main_nn_pes_0_fadd_inQ_D_OUT[22:6] } ;
  assign main_nn_pes_0_curMacIdx_85_PLUS_1_01_SRL_6_02__ETC___d503 =
	     x__h13296 < 32'd1024 ;
  assign main_nn_pes_0_curMacIdx_85_ULT_64___d486 =
	     main_nn_pes_0_curMacIdx < 32'd64 ;
  assign main_nn_pes_0_fadd_inQ_first__58_BITS_62_TO_55_ETC___d261 =
	     main_nn_pes_0_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_0_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_0_inputQ_i_notEmpty__80_AND_main_n_ETC___d493 =
	     main_nn_pes_0_inputQ_EMPTY_N && main_nn_pes_0_weightQ_EMPTY_N &&
	     main_nn_pes_0_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_0_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_0_addForwardQ_FULL_N &&
	     (main_nn_pes_0_curMacIdx_85_ULT_64___d486 ||
	      main_nn_pes_0_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_1_curMacIdx_87_PLUS_1_03_SRL_6_04__ETC___d905 =
	     x__h22157 < 32'd1024 ;
  assign main_nn_pes_1_curMacIdx_87_ULT_64___d888 =
	     main_nn_pes_1_curMacIdx < 32'd64 ;
  assign main_nn_pes_1_fadd_inQ_first__60_BITS_62_TO_55_ETC___d663 =
	     main_nn_pes_1_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_1_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_1_inputQ_i_notEmpty__82_AND_main_n_ETC___d895 =
	     main_nn_pes_1_inputQ_EMPTY_N && main_nn_pes_1_weightQ_EMPTY_N &&
	     main_nn_pes_1_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_1_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_1_addForwardQ_FULL_N &&
	     (main_nn_pes_1_curMacIdx_87_ULT_64___d888 ||
	      main_nn_pes_1_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_2_curMacIdx_289_PLUS_1_305_SRL_6_3_ETC___d1307 =
	     x__h30105 < 32'd1024 ;
  assign main_nn_pes_2_curMacIdx_289_ULT_64___d1290 =
	     main_nn_pes_2_curMacIdx < 32'd64 ;
  assign main_nn_pes_2_fadd_inQ_first__062_BITS_62_TO_5_ETC___d1065 =
	     main_nn_pes_2_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_2_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_2_inputQ_i_notEmpty__284_AND_main__ETC___d1297 =
	     main_nn_pes_2_inputQ_EMPTY_N && main_nn_pes_2_weightQ_EMPTY_N &&
	     main_nn_pes_2_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_2_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_2_addForwardQ_FULL_N &&
	     (main_nn_pes_2_curMacIdx_289_ULT_64___d1290 ||
	      main_nn_pes_2_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_3_curMacIdx_691_PLUS_1_707_SRL_6_7_ETC___d1709 =
	     x__h38053 < 32'd1024 ;
  assign main_nn_pes_3_curMacIdx_691_ULT_64___d1692 =
	     main_nn_pes_3_curMacIdx < 32'd64 ;
  assign main_nn_pes_3_fadd_inQ_first__464_BITS_62_TO_5_ETC___d1467 =
	     main_nn_pes_3_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_3_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_3_inputQ_i_notEmpty__686_AND_main__ETC___d1699 =
	     main_nn_pes_3_inputQ_EMPTY_N && main_nn_pes_3_weightQ_EMPTY_N &&
	     main_nn_pes_3_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_3_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_3_addForwardQ_FULL_N &&
	     (main_nn_pes_3_curMacIdx_691_ULT_64___d1692 ||
	      main_nn_pes_3_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_4_curMacIdx_093_PLUS_1_109_SRL_6_1_ETC___d2111 =
	     x__h46001 < 32'd1024 ;
  assign main_nn_pes_4_curMacIdx_093_ULT_64___d2094 =
	     main_nn_pes_4_curMacIdx < 32'd64 ;
  assign main_nn_pes_4_fadd_inQ_first__866_BITS_62_TO_5_ETC___d1869 =
	     main_nn_pes_4_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_4_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_4_inputQ_i_notEmpty__088_AND_main__ETC___d2101 =
	     main_nn_pes_4_inputQ_EMPTY_N && main_nn_pes_4_weightQ_EMPTY_N &&
	     main_nn_pes_4_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_4_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_4_addForwardQ_FULL_N &&
	     (main_nn_pes_4_curMacIdx_093_ULT_64___d2094 ||
	      main_nn_pes_4_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_5_curMacIdx_495_PLUS_1_511_SRL_6_5_ETC___d2513 =
	     x__h53949 < 32'd1024 ;
  assign main_nn_pes_5_curMacIdx_495_ULT_64___d2496 =
	     main_nn_pes_5_curMacIdx < 32'd64 ;
  assign main_nn_pes_5_fadd_inQ_first__268_BITS_62_TO_5_ETC___d2271 =
	     main_nn_pes_5_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_5_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_5_inputQ_i_notEmpty__490_AND_main__ETC___d2503 =
	     main_nn_pes_5_inputQ_EMPTY_N && main_nn_pes_5_weightQ_EMPTY_N &&
	     main_nn_pes_5_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_5_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_5_addForwardQ_FULL_N &&
	     (main_nn_pes_5_curMacIdx_495_ULT_64___d2496 ||
	      main_nn_pes_5_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_6_curMacIdx_897_PLUS_1_913_SRL_6_9_ETC___d2915 =
	     x__h61897 < 32'd1024 ;
  assign main_nn_pes_6_curMacIdx_897_ULT_64___d2898 =
	     main_nn_pes_6_curMacIdx < 32'd64 ;
  assign main_nn_pes_6_fadd_inQ_first__670_BITS_62_TO_5_ETC___d2673 =
	     main_nn_pes_6_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_6_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_6_inputQ_i_notEmpty__892_AND_main__ETC___d2905 =
	     main_nn_pes_6_inputQ_EMPTY_N && main_nn_pes_6_weightQ_EMPTY_N &&
	     main_nn_pes_6_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_6_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_6_addForwardQ_FULL_N &&
	     (main_nn_pes_6_curMacIdx_897_ULT_64___d2898 ||
	      main_nn_pes_6_partialSumQ2_EMPTY_N) ;
  assign main_nn_pes_7_curMacIdx_299_PLUS_1_315_SRL_6_3_ETC___d3317 =
	     x__h69845 < 32'd1024 ;
  assign main_nn_pes_7_curMacIdx_299_ULT_64___d3300 =
	     main_nn_pes_7_curMacIdx < 32'd64 ;
  assign main_nn_pes_7_fadd_inQ_first__072_BITS_62_TO_5_ETC___d3075 =
	     main_nn_pes_7_fadd_inQ_D_OUT[62:55] <=
	     main_nn_pes_7_fadd_inQ_D_OUT[30:23] ;
  assign main_nn_pes_7_inputQ_i_notEmpty__294_AND_main__ETC___d3307 =
	     main_nn_pes_7_inputQ_EMPTY_N && main_nn_pes_7_weightQ_EMPTY_N &&
	     main_nn_pes_7_partialSumIdxQ1_FULL_N &&
	     main_nn_pes_7_fmult_signExpZeroQ_FULL_N &&
	     main_nn_pes_7_addForwardQ_FULL_N &&
	     (main_nn_pes_7_curMacIdx_299_ULT_64___d3300 ||
	      main_nn_pes_7_partialSumQ2_EMPTY_N) ;
  assign mem_counter_9_PLUS_1_0_ULT_10000___d61 = x__h2456 < 16'd10000 ;
  assign mem_counter_9_ULT_780___d64 = mem_counter < 16'd780 ;
  assign mem_open_bank_21_BIT_mem_cur_cmd_address_22_BI_ETC___d124 =
	     mem_open_bank[mem_cur_cmd_address[10:9]] ;
  assign mem_state_6_EQ_0_7_AND_mem_reqQ_notEmpty__6_OR_ETC___d104 =
	     mem_state == 3'd0 &&
	     (mem_reqQ_EMPTY_N || !mem_counter_9_ULT_780___d64) ||
	     mem_state == 3'd4 ||
	     mem_state == 3'd1 ||
	     mem_state == 3'd2 ||
	     mem_state == 3'd3 ||
	     mem_state == 3'd5 && mem_readRespQ_FULL_N ||
	     mem_state == 3'd6 && mem_delay == 4'd0 ;
  assign newexp___1__h10366 =
	     main_nn_pes_0_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h10465 =
	     main_nn_pes_0_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h10564 =
	     main_nn_pes_0_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h10663 =
	     main_nn_pes_0_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h10757 =
	     main_nn_pes_0_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h19227 =
	     main_nn_pes_1_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h19326 =
	     main_nn_pes_1_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h19425 =
	     main_nn_pes_1_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h19524 =
	     main_nn_pes_1_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h19618 =
	     main_nn_pes_1_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h27175 =
	     main_nn_pes_2_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h27274 =
	     main_nn_pes_2_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h27373 =
	     main_nn_pes_2_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h27472 =
	     main_nn_pes_2_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h27566 =
	     main_nn_pes_2_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h35123 =
	     main_nn_pes_3_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h35222 =
	     main_nn_pes_3_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h35321 =
	     main_nn_pes_3_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h35420 =
	     main_nn_pes_3_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h35514 =
	     main_nn_pes_3_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h43071 =
	     main_nn_pes_4_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h43170 =
	     main_nn_pes_4_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h43269 =
	     main_nn_pes_4_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h43368 =
	     main_nn_pes_4_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h43462 =
	     main_nn_pes_4_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h51019 =
	     main_nn_pes_5_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h51118 =
	     main_nn_pes_5_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h51217 =
	     main_nn_pes_5_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h51316 =
	     main_nn_pes_5_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h51410 =
	     main_nn_pes_5_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h58967 =
	     main_nn_pes_6_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h59066 =
	     main_nn_pes_6_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h59165 =
	     main_nn_pes_6_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h59264 =
	     main_nn_pes_6_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h59358 =
	     main_nn_pes_6_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newexp___1__h66915 =
	     main_nn_pes_7_fadd_normalizeQ_D_OUT[26:19] + 8'd1 ;
  assign newexp___1__h67014 =
	     main_nn_pes_7_fadd_normalizeQ1_D_OUT[26:19] - 8'd9 ;
  assign newexp___1__h67113 =
	     main_nn_pes_7_fadd_normalizeQ2_D_OUT[26:19] - 8'd5 ;
  assign newexp___1__h67212 =
	     main_nn_pes_7_fadd_normalizeQ3_D_OUT[26:19] - 8'd2 ;
  assign newexp___1__h67306 =
	     main_nn_pes_7_fadd_normalizeQ4_D_OUT[26:19] - 8'd1 ;
  assign newfrac___1__h10365 =
	     { 1'd0, main_nn_pes_0_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h10464 =
	     { main_nn_pes_0_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h10563 =
	     { main_nn_pes_0_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h10662 =
	     { main_nn_pes_0_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h10756 =
	     { main_nn_pes_0_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h19226 =
	     { 1'd0, main_nn_pes_1_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h19325 =
	     { main_nn_pes_1_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h19424 =
	     { main_nn_pes_1_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h19523 =
	     { main_nn_pes_1_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h19617 =
	     { main_nn_pes_1_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h27174 =
	     { 1'd0, main_nn_pes_2_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h27273 =
	     { main_nn_pes_2_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h27372 =
	     { main_nn_pes_2_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h27471 =
	     { main_nn_pes_2_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h27565 =
	     { main_nn_pes_2_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h35122 =
	     { 1'd0, main_nn_pes_3_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h35221 =
	     { main_nn_pes_3_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h35320 =
	     { main_nn_pes_3_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h35419 =
	     { main_nn_pes_3_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h35513 =
	     { main_nn_pes_3_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h43070 =
	     { 1'd0, main_nn_pes_4_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h43169 =
	     { main_nn_pes_4_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h43268 =
	     { main_nn_pes_4_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h43367 =
	     { main_nn_pes_4_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h43461 =
	     { main_nn_pes_4_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h51018 =
	     { 1'd0, main_nn_pes_5_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h51117 =
	     { main_nn_pes_5_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h51216 =
	     { main_nn_pes_5_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h51315 =
	     { main_nn_pes_5_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h51409 =
	     { main_nn_pes_5_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h58966 =
	     { 1'd0, main_nn_pes_6_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h59065 =
	     { main_nn_pes_6_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h59164 =
	     { main_nn_pes_6_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h59263 =
	     { main_nn_pes_6_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h59357 =
	     { main_nn_pes_6_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac___1__h66914 =
	     { 1'd0, main_nn_pes_7_fadd_normalizeQ_D_OUT[18:1] } ;
  assign newfrac___1__h67013 =
	     { main_nn_pes_7_fadd_normalizeQ1_D_OUT[9:0], 9'd0 } ;
  assign newfrac___1__h67112 =
	     { main_nn_pes_7_fadd_normalizeQ2_D_OUT[13:0], 5'd0 } ;
  assign newfrac___1__h67211 =
	     { main_nn_pes_7_fadd_normalizeQ3_D_OUT[16:0], 2'd0 } ;
  assign newfrac___1__h67305 =
	     { main_nn_pes_7_fadd_normalizeQ4_D_OUT[17:0], 1'd0 } ;
  assign newfrac__h10238 =
	     { 1'd0, main_nn_pes_0_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_0_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h10247 =
	     { 1'd0,
	       (main_nn_pes_0_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_0_fadd_calcQ_D_OUT[26:9]) ?
		 x__h10274 :
		 x__h10257 } ;
  assign newfrac__h19099 =
	     { 1'd0, main_nn_pes_1_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_1_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h19108 =
	     { 1'd0,
	       (main_nn_pes_1_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_1_fadd_calcQ_D_OUT[26:9]) ?
		 x__h19135 :
		 x__h19118 } ;
  assign newfrac__h27047 =
	     { 1'd0, main_nn_pes_2_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_2_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h27056 =
	     { 1'd0,
	       (main_nn_pes_2_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_2_fadd_calcQ_D_OUT[26:9]) ?
		 x__h27083 :
		 x__h27066 } ;
  assign newfrac__h34995 =
	     { 1'd0, main_nn_pes_3_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_3_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h35004 =
	     { 1'd0,
	       (main_nn_pes_3_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_3_fadd_calcQ_D_OUT[26:9]) ?
		 x__h35031 :
		 x__h35014 } ;
  assign newfrac__h42943 =
	     { 1'd0, main_nn_pes_4_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_4_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h42952 =
	     { 1'd0,
	       (main_nn_pes_4_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_4_fadd_calcQ_D_OUT[26:9]) ?
		 x__h42979 :
		 x__h42962 } ;
  assign newfrac__h50891 =
	     { 1'd0, main_nn_pes_5_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_5_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h50900 =
	     { 1'd0,
	       (main_nn_pes_5_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_5_fadd_calcQ_D_OUT[26:9]) ?
		 x__h50927 :
		 x__h50910 } ;
  assign newfrac__h58839 =
	     { 1'd0, main_nn_pes_6_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_6_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h58848 =
	     { 1'd0,
	       (main_nn_pes_6_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_6_fadd_calcQ_D_OUT[26:9]) ?
		 x__h58875 :
		 x__h58858 } ;
  assign newfrac__h66787 =
	     { 1'd0, main_nn_pes_7_fadd_calcQ_D_OUT[53:36] } +
	     { 1'd0, main_nn_pes_7_fadd_calcQ_D_OUT[26:9] } ;
  assign newfrac__h66796 =
	     { 1'd0,
	       (main_nn_pes_7_fadd_calcQ_D_OUT[53:36] <=
		main_nn_pes_7_fadd_calcQ_D_OUT[26:9]) ?
		 x__h66823 :
		 x__h66806 } ;
  assign nv__h72186 = { main_serialrxQ_D_OUT, main_inputBuffer[31:8] } ;
  assign uart_clkcnt_PLUS_1_ULT_217___d3 = x__h440 < 16'd217 ;
  assign x__h10185 =
	     main_nn_pes_0_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_0_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_0_fadd_calcQ_D_OUT[0] ;
  assign x__h10232 =
	     main_nn_pes_0_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_0_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_0_fadd_calcQ_D_OUT[8:1] ;
  assign x__h10236 =
	     (main_nn_pes_0_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_0_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h10238 :
	       newfrac__h10247 ;
  assign x__h10257 =
	     main_nn_pes_0_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_0_fadd_calcQ_D_OUT[26:9] ;
  assign x__h10274 =
	     main_nn_pes_0_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_0_fadd_calcQ_D_OUT[53:36] ;
  assign x__h10762 =
	     (!main_nn_pes_0_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_0_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h10756 :
	       main_nn_pes_0_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h11614 = main_nn_pes_0_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h11737 = main_nn_pes_0_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h12716 = main_nn_pes_0_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h12823 = main_nn_pes_0_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h13268 = main_nn_pes_0_curMacIdx >> 6 ;
  assign x__h13296 = x__h13468 >> 6 ;
  assign x__h13409 = main_nn_pes_0_curOutputIdx + 8'd8 ;
  assign x__h13468 = main_nn_pes_0_curMacIdx + 32'd1 ;
  assign x__h13721 =
	     main_nn_pes_0_inputQ_D_OUT[39] ^
	     main_nn_pes_0_weightQ_D_OUT[31] ;
  assign x__h13766 =
	     { 1'd0, main_nn_pes_0_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_0_weightQ_D_OUT[30:23] } ;
  assign x__h14601 = main_nn_pes_0_weightReplicateCnt - 8'd1 ;
  assign x__h17609 =
	     { main_nn_pes_1_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h17653,
	       _theResult___fst__h17652,
	       5'd0 } ;
  assign x__h17658 = main_nn_pes_1_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h17667 = main_nn_pes_1_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h18753 =
	     main_nn_pes_1_fadd_inQ_first__60_BITS_62_TO_55_ETC___d663 ?
	       main_nn_pes_1_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_1_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_1_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_1_fadd_inQ_D_OUT[30:23] ;
  assign x__h19046 =
	     main_nn_pes_1_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_1_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_1_fadd_calcQ_D_OUT[0] ;
  assign x__h19093 =
	     main_nn_pes_1_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_1_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_1_fadd_calcQ_D_OUT[8:1] ;
  assign x__h19097 =
	     (main_nn_pes_1_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_1_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h19099 :
	       newfrac__h19108 ;
  assign x__h19118 =
	     main_nn_pes_1_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_1_fadd_calcQ_D_OUT[26:9] ;
  assign x__h19135 =
	     main_nn_pes_1_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_1_fadd_calcQ_D_OUT[53:36] ;
  assign x__h19623 =
	     (!main_nn_pes_1_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_1_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h19617 :
	       main_nn_pes_1_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h20475 = main_nn_pes_1_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h20598 = main_nn_pes_1_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h21577 = main_nn_pes_1_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h21684 = main_nn_pes_1_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h22129 = main_nn_pes_1_curMacIdx >> 6 ;
  assign x__h22157 = x__h22329 >> 6 ;
  assign x__h22270 = main_nn_pes_1_curOutputIdx + 8'd8 ;
  assign x__h22329 = main_nn_pes_1_curMacIdx + 32'd1 ;
  assign x__h22582 =
	     main_nn_pes_1_inputQ_D_OUT[39] ^
	     main_nn_pes_1_weightQ_D_OUT[31] ;
  assign x__h22627 =
	     { 1'd0, main_nn_pes_1_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_1_weightQ_D_OUT[30:23] } ;
  assign x__h23462 = main_nn_pes_1_weightReplicateCnt - 8'd1 ;
  assign x__h2456 = mem_counter + 16'd1 ;
  assign x__h25557 =
	     { main_nn_pes_2_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h25601,
	       _theResult___fst__h25600,
	       5'd0 } ;
  assign x__h25606 = main_nn_pes_2_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h25615 = main_nn_pes_2_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h26701 =
	     main_nn_pes_2_fadd_inQ_first__062_BITS_62_TO_5_ETC___d1065 ?
	       main_nn_pes_2_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_2_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_2_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_2_fadd_inQ_D_OUT[30:23] ;
  assign x__h26994 =
	     main_nn_pes_2_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_2_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_2_fadd_calcQ_D_OUT[0] ;
  assign x__h27041 =
	     main_nn_pes_2_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_2_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_2_fadd_calcQ_D_OUT[8:1] ;
  assign x__h27045 =
	     (main_nn_pes_2_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_2_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h27047 :
	       newfrac__h27056 ;
  assign x__h27066 =
	     main_nn_pes_2_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_2_fadd_calcQ_D_OUT[26:9] ;
  assign x__h27083 =
	     main_nn_pes_2_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_2_fadd_calcQ_D_OUT[53:36] ;
  assign x__h27571 =
	     (!main_nn_pes_2_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_2_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h27565 :
	       main_nn_pes_2_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h2827 = mem_delay - 4'd1 ;
  assign x__h28423 = main_nn_pes_2_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h28546 = main_nn_pes_2_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h29525 = main_nn_pes_2_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h29632 = main_nn_pes_2_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h30077 = main_nn_pes_2_curMacIdx >> 6 ;
  assign x__h30105 = x__h30277 >> 6 ;
  assign x__h30218 = main_nn_pes_2_curOutputIdx + 8'd8 ;
  assign x__h30277 = main_nn_pes_2_curMacIdx + 32'd1 ;
  assign x__h30530 =
	     main_nn_pes_2_inputQ_D_OUT[39] ^
	     main_nn_pes_2_weightQ_D_OUT[31] ;
  assign x__h30575 =
	     { 1'd0, main_nn_pes_2_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_2_weightQ_D_OUT[30:23] } ;
  assign x__h31410 = main_nn_pes_2_weightReplicateCnt - 8'd1 ;
  assign x__h3174 = mem_open_bank | x__h3186 ;
  assign x__h3186 = 4'd1 << mem_cur_cmd_address[10:9] ;
  assign x__h33505 =
	     { main_nn_pes_3_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h33549,
	       _theResult___fst__h33548,
	       5'd0 } ;
  assign x__h33554 = main_nn_pes_3_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h33563 = main_nn_pes_3_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h34649 =
	     main_nn_pes_3_fadd_inQ_first__464_BITS_62_TO_5_ETC___d1467 ?
	       main_nn_pes_3_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_3_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_3_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_3_fadd_inQ_D_OUT[30:23] ;
  assign x__h34942 =
	     main_nn_pes_3_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_3_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_3_fadd_calcQ_D_OUT[0] ;
  assign x__h34989 =
	     main_nn_pes_3_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_3_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_3_fadd_calcQ_D_OUT[8:1] ;
  assign x__h34993 =
	     (main_nn_pes_3_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_3_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h34995 :
	       newfrac__h35004 ;
  assign x__h35014 =
	     main_nn_pes_3_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_3_fadd_calcQ_D_OUT[26:9] ;
  assign x__h35031 =
	     main_nn_pes_3_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_3_fadd_calcQ_D_OUT[53:36] ;
  assign x__h35519 =
	     (!main_nn_pes_3_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_3_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h35513 :
	       main_nn_pes_3_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h36371 = main_nn_pes_3_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h36494 = main_nn_pes_3_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h3670 = { mem_addr_out[12:11], 1'd0, mem_addr_out[9:0] } ;
  assign x__h3730 = mem_open_bank & y__h3755 ;
  assign x__h37473 = main_nn_pes_3_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h37580 = main_nn_pes_3_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h38025 = main_nn_pes_3_curMacIdx >> 6 ;
  assign x__h38053 = x__h38225 >> 6 ;
  assign x__h38166 = main_nn_pes_3_curOutputIdx + 8'd8 ;
  assign x__h38225 = main_nn_pes_3_curMacIdx + 32'd1 ;
  assign x__h3841 = { 4'd0, mem_cur_cmd_address[8:0] } ;
  assign x__h38478 =
	     main_nn_pes_3_inputQ_D_OUT[39] ^
	     main_nn_pes_3_weightQ_D_OUT[31] ;
  assign x__h38523 =
	     { 1'd0, main_nn_pes_3_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_3_weightQ_D_OUT[30:23] } ;
  assign x__h39358 = main_nn_pes_3_weightReplicateCnt - 8'd1 ;
  assign x__h3991 = { mem_addr_out[12:11], 1'd1, mem_addr_out[9:0] } ;
  assign x__h41453 =
	     { main_nn_pes_4_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h41497,
	       _theResult___fst__h41496,
	       5'd0 } ;
  assign x__h41502 = main_nn_pes_4_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h41511 = main_nn_pes_4_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h42597 =
	     main_nn_pes_4_fadd_inQ_first__866_BITS_62_TO_5_ETC___d1869 ?
	       main_nn_pes_4_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_4_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_4_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_4_fadd_inQ_D_OUT[30:23] ;
  assign x__h42890 =
	     main_nn_pes_4_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_4_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_4_fadd_calcQ_D_OUT[0] ;
  assign x__h42937 =
	     main_nn_pes_4_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_4_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_4_fadd_calcQ_D_OUT[8:1] ;
  assign x__h42941 =
	     (main_nn_pes_4_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_4_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h42943 :
	       newfrac__h42952 ;
  assign x__h42962 =
	     main_nn_pes_4_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_4_fadd_calcQ_D_OUT[26:9] ;
  assign x__h42979 =
	     main_nn_pes_4_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_4_fadd_calcQ_D_OUT[53:36] ;
  assign x__h43467 =
	     (!main_nn_pes_4_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_4_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h43461 :
	       main_nn_pes_4_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h440 = uart_clkcnt + 16'd1 ;
  assign x__h44319 = main_nn_pes_4_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h44442 = main_nn_pes_4_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h45421 = main_nn_pes_4_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h45528 = main_nn_pes_4_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h45973 = main_nn_pes_4_curMacIdx >> 6 ;
  assign x__h46001 = x__h46173 >> 6 ;
  assign x__h46114 = main_nn_pes_4_curOutputIdx + 8'd8 ;
  assign x__h46173 = main_nn_pes_4_curMacIdx + 32'd1 ;
  assign x__h46426 =
	     main_nn_pes_4_inputQ_D_OUT[39] ^
	     main_nn_pes_4_weightQ_D_OUT[31] ;
  assign x__h46471 =
	     { 1'd0, main_nn_pes_4_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_4_weightQ_D_OUT[30:23] } ;
  assign x__h47306 = main_nn_pes_4_weightReplicateCnt - 8'd1 ;
  assign x__h483 = { 1'd1, uart_curoutd[10:1] } ;
  assign x__h49401 =
	     { main_nn_pes_5_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h49445,
	       _theResult___fst__h49444,
	       5'd0 } ;
  assign x__h49450 = main_nn_pes_5_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h49459 = main_nn_pes_5_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h50545 =
	     main_nn_pes_5_fadd_inQ_first__268_BITS_62_TO_5_ETC___d2271 ?
	       main_nn_pes_5_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_5_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_5_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_5_fadd_inQ_D_OUT[30:23] ;
  assign x__h50838 =
	     main_nn_pes_5_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_5_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_5_fadd_calcQ_D_OUT[0] ;
  assign x__h50885 =
	     main_nn_pes_5_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_5_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_5_fadd_calcQ_D_OUT[8:1] ;
  assign x__h50889 =
	     (main_nn_pes_5_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_5_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h50891 :
	       newfrac__h50900 ;
  assign x__h50910 =
	     main_nn_pes_5_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_5_fadd_calcQ_D_OUT[26:9] ;
  assign x__h50927 =
	     main_nn_pes_5_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_5_fadd_calcQ_D_OUT[53:36] ;
  assign x__h51415 =
	     (!main_nn_pes_5_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_5_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h51409 :
	       main_nn_pes_5_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h52267 = main_nn_pes_5_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h52390 = main_nn_pes_5_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h53369 = main_nn_pes_5_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h53476 = main_nn_pes_5_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h53921 = main_nn_pes_5_curMacIdx >> 6 ;
  assign x__h53949 = x__h54121 >> 6 ;
  assign x__h54062 = main_nn_pes_5_curOutputIdx + 8'd8 ;
  assign x__h54121 = main_nn_pes_5_curMacIdx + 32'd1 ;
  assign x__h54374 =
	     main_nn_pes_5_inputQ_D_OUT[39] ^
	     main_nn_pes_5_weightQ_D_OUT[31] ;
  assign x__h54419 =
	     { 1'd0, main_nn_pes_5_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_5_weightQ_D_OUT[30:23] } ;
  assign x__h55254 = main_nn_pes_5_weightReplicateCnt - 8'd1 ;
  assign x__h57349 =
	     { main_nn_pes_6_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h57393,
	       _theResult___fst__h57392,
	       5'd0 } ;
  assign x__h57398 = main_nn_pes_6_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h57407 = main_nn_pes_6_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h58493 =
	     main_nn_pes_6_fadd_inQ_first__670_BITS_62_TO_5_ETC___d2673 ?
	       main_nn_pes_6_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_6_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_6_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_6_fadd_inQ_D_OUT[30:23] ;
  assign x__h58786 =
	     main_nn_pes_6_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_6_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_6_fadd_calcQ_D_OUT[0] ;
  assign x__h58833 =
	     main_nn_pes_6_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_6_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_6_fadd_calcQ_D_OUT[8:1] ;
  assign x__h58837 =
	     (main_nn_pes_6_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_6_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h58839 :
	       newfrac__h58848 ;
  assign x__h58858 =
	     main_nn_pes_6_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_6_fadd_calcQ_D_OUT[26:9] ;
  assign x__h58875 =
	     main_nn_pes_6_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_6_fadd_calcQ_D_OUT[53:36] ;
  assign x__h591 = uart_curoutoff - 5'd1 ;
  assign x__h59363 =
	     (!main_nn_pes_6_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_6_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h59357 :
	       main_nn_pes_6_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h60215 = main_nn_pes_6_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h60338 = main_nn_pes_6_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h607 = { 2'b11, uart_inQ_D_OUT, 1'b0 } ;
  assign x__h61317 = main_nn_pes_6_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h61424 = main_nn_pes_6_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h61869 = main_nn_pes_6_curMacIdx >> 6 ;
  assign x__h61897 = x__h62069 >> 6 ;
  assign x__h62010 = main_nn_pes_6_curOutputIdx + 8'd8 ;
  assign x__h62069 = main_nn_pes_6_curMacIdx + 32'd1 ;
  assign x__h62322 =
	     main_nn_pes_6_inputQ_D_OUT[39] ^
	     main_nn_pes_6_weightQ_D_OUT[31] ;
  assign x__h62367 =
	     { 1'd0, main_nn_pes_6_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_6_weightQ_D_OUT[30:23] } ;
  assign x__h63202 = main_nn_pes_6_weightReplicateCnt - 8'd1 ;
  assign x__h65297 =
	     { main_nn_pes_7_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h65341,
	       _theResult___fst__h65340,
	       5'd0 } ;
  assign x__h65346 = main_nn_pes_7_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h65355 = main_nn_pes_7_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h66441 =
	     main_nn_pes_7_fadd_inQ_first__072_BITS_62_TO_5_ETC___d3075 ?
	       main_nn_pes_7_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_7_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_7_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_7_fadd_inQ_D_OUT[30:23] ;
  assign x__h66734 =
	     main_nn_pes_7_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_7_fadd_calcQ_D_OUT[27] :
	       main_nn_pes_7_fadd_calcQ_D_OUT[0] ;
  assign x__h66781 =
	     main_nn_pes_7_fadd_calcQ_D_OUT[54] ?
	       main_nn_pes_7_fadd_calcQ_D_OUT[35:28] :
	       main_nn_pes_7_fadd_calcQ_D_OUT[8:1] ;
  assign x__h66785 =
	     (main_nn_pes_7_fadd_calcQ_D_OUT[27] ==
	      main_nn_pes_7_fadd_calcQ_D_OUT[0]) ?
	       newfrac__h66787 :
	       newfrac__h66796 ;
  assign x__h66806 =
	     main_nn_pes_7_fadd_calcQ_D_OUT[53:36] -
	     main_nn_pes_7_fadd_calcQ_D_OUT[26:9] ;
  assign x__h66823 =
	     main_nn_pes_7_fadd_calcQ_D_OUT[26:9] -
	     main_nn_pes_7_fadd_calcQ_D_OUT[53:36] ;
  assign x__h67311 =
	     (!main_nn_pes_7_fadd_normalizeQ4_D_OUT[17] &&
	      main_nn_pes_7_fadd_normalizeQ4_D_OUT[18:0] != 19'd0) ?
	       newfrac___1__h67305 :
	       main_nn_pes_7_fadd_normalizeQ4_D_OUT[18:0] ;
  assign x__h68163 = main_nn_pes_7_partialSumIdxQ2_rWrPtr + 8'd1 ;
  assign x__h68286 = main_nn_pes_7_partialSumIdxQ2_rRdPtr + 8'd1 ;
  assign x__h69265 = main_nn_pes_7_partialSumQ_rWrPtr + 8'd1 ;
  assign x__h69372 = main_nn_pes_7_partialSumQ_rRdPtr + 8'd1 ;
  assign x__h69817 = main_nn_pes_7_curMacIdx >> 6 ;
  assign x__h69845 = x__h70017 >> 6 ;
  assign x__h69958 = main_nn_pes_7_curOutputIdx + 8'd8 ;
  assign x__h70017 = main_nn_pes_7_curMacIdx + 32'd1 ;
  assign x__h70270 =
	     main_nn_pes_7_inputQ_D_OUT[39] ^
	     main_nn_pes_7_weightQ_D_OUT[31] ;
  assign x__h70315 =
	     { 1'd0, main_nn_pes_7_inputQ_D_OUT[38:31] } +
	     { 1'd0, main_nn_pes_7_weightQ_D_OUT[30:23] } ;
  assign x__h71150 = main_nn_pes_7_weightReplicateCnt - 8'd1 ;
  assign x__h72236 = main_inputBufferCnt + 2'd1 ;
  assign x__h72591 = main_outputBufferCnt - 3'd1 ;
  assign x__h72825 = { 8'd0, main_outputBuffer[39:8] } ;
  assign x__h72843 = main_resultDataCount + 32'd1 ;
  assign x__h72951 =
	     { main_nn_resultOutQs_0_D_OUT[47:16],
	       main_nn_resultOutQs_0_D_OUT[7:0] } ;
  assign x__h73463 = main_memReadAddr + 24'd1 ;
  assign x__h852 = uart_samplecountdown - 16'd1 ;
  assign x__h8745 =
	     { main_nn_pes_0_fmult_signExpZeroQ_D_OUT[10],
	       _theResult___snd__h8789,
	       _theResult___fst__h8788,
	       5'd0 } ;
  assign x__h8794 = main_nn_pes_0_fmult_signExpZeroQ_D_OUT[9:1] - 9'd126 ;
  assign x__h8803 = main_nn_pes_0_fmult_signExpZeroQ_D_OUT[9:1] - 9'd127 ;
  assign x__h983 = uart_bleft - 4'd1 ;
  assign x__h9889 =
	     main_nn_pes_0_fadd_inQ_first__58_BITS_62_TO_55_ETC___d261 ?
	       main_nn_pes_0_fadd_inQ_D_OUT[30:23] -
	       main_nn_pes_0_fadd_inQ_D_OUT[62:55] :
	       main_nn_pes_0_fadd_inQ_D_OUT[62:55] -
	       main_nn_pes_0_fadd_inQ_D_OUT[30:23] ;
  assign x_wget__h16971 = { 1'd1, main_nn_pes_1_inputQ_D_OUT[30:14] } ;
  assign x_wget__h17042 = { 1'd1, main_nn_pes_1_weightQ_D_OUT[22:6] } ;
  assign x_wget__h24919 = { 1'd1, main_nn_pes_2_inputQ_D_OUT[30:14] } ;
  assign x_wget__h24990 = { 1'd1, main_nn_pes_2_weightQ_D_OUT[22:6] } ;
  assign x_wget__h32867 = { 1'd1, main_nn_pes_3_inputQ_D_OUT[30:14] } ;
  assign x_wget__h32938 = { 1'd1, main_nn_pes_3_weightQ_D_OUT[22:6] } ;
  assign x_wget__h40815 = { 1'd1, main_nn_pes_4_inputQ_D_OUT[30:14] } ;
  assign x_wget__h40886 = { 1'd1, main_nn_pes_4_weightQ_D_OUT[22:6] } ;
  assign x_wget__h48763 = { 1'd1, main_nn_pes_5_inputQ_D_OUT[30:14] } ;
  assign x_wget__h48834 = { 1'd1, main_nn_pes_5_weightQ_D_OUT[22:6] } ;
  assign x_wget__h56711 = { 1'd1, main_nn_pes_6_inputQ_D_OUT[30:14] } ;
  assign x_wget__h56782 = { 1'd1, main_nn_pes_6_weightQ_D_OUT[22:6] } ;
  assign x_wget__h64659 = { 1'd1, main_nn_pes_7_inputQ_D_OUT[30:14] } ;
  assign x_wget__h64730 = { 1'd1, main_nn_pes_7_weightQ_D_OUT[22:6] } ;
  assign x_wget__h8107 = { 1'd1, main_nn_pes_0_inputQ_D_OUT[30:14] } ;
  assign x_wget__h8178 = { 1'd1, main_nn_pes_0_weightQ_D_OUT[22:6] } ;
  assign y__h3755 = ~x__h3186 ;
  always@(mem_cur_cmd_address or mem_open_rows)
  begin
    case (mem_cur_cmd_address[10:9])
      2'd0:
	  CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1 =
	      mem_open_rows[12:0];
      2'd1:
	  CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1 =
	      mem_open_rows[25:13];
      2'd2:
	  CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1 =
	      mem_open_rows[38:26];
      2'd3:
	  CASE_mem_cur_cmd_address_BITS_10_TO_9_0_mem_op_ETC__q1 =
	      mem_open_rows[51:39];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK_clk_25mhz)
  begin
    if (!`BSV_RESET_VALUE == `BSV_RESET_VALUE)
      begin
        uartInWord <= `BSV_ASSIGNMENT_DELAY 8'd0;
	uart_bleft <= `BSV_ASSIGNMENT_DELAY 4'd0;
	uart_clkcnt <= `BSV_ASSIGNMENT_DELAY 16'd0;
	uart_curoutd <= `BSV_ASSIGNMENT_DELAY 11'd0;
	uart_curoutoff <= `BSV_ASSIGNMENT_DELAY 5'd0;
	uart_outword <= `BSV_ASSIGNMENT_DELAY 8'd0;
	uart_rxin <= `BSV_ASSIGNMENT_DELAY 4'b1111;
	uart_samplecountdown <= `BSV_ASSIGNMENT_DELAY 16'd0;
	uart_txdr <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (uartInWord_EN)
	  uartInWord <= `BSV_ASSIGNMENT_DELAY uartInWord_D_IN;
	if (uart_bleft_EN)
	  uart_bleft <= `BSV_ASSIGNMENT_DELAY uart_bleft_D_IN;
	if (uart_clkcnt_EN)
	  uart_clkcnt <= `BSV_ASSIGNMENT_DELAY uart_clkcnt_D_IN;
	if (uart_curoutd_EN)
	  uart_curoutd <= `BSV_ASSIGNMENT_DELAY uart_curoutd_D_IN;
	if (uart_curoutoff_EN)
	  uart_curoutoff <= `BSV_ASSIGNMENT_DELAY uart_curoutoff_D_IN;
	if (uart_outword_EN)
	  uart_outword <= `BSV_ASSIGNMENT_DELAY uart_outword_D_IN;
	if (uart_rxin_EN) uart_rxin <= `BSV_ASSIGNMENT_DELAY uart_rxin_D_IN;
	if (uart_samplecountdown_EN)
	  uart_samplecountdown <= `BSV_ASSIGNMENT_DELAY
	      uart_samplecountdown_D_IN;
	if (uart_txdr_EN) uart_txdr <= `BSV_ASSIGNMENT_DELAY uart_txdr_D_IN;
      end
  end

  always@(posedge pll_clk_100mhz)
  begin
    if (pll_lockedn == `BSV_RESET_VALUE)
      begin
        main_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_inputBuffer <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_inputBufferCnt <= `BSV_ASSIGNMENT_DELAY 2'd0;
	main_inputDst <= `BSV_ASSIGNMENT_DELAY 9'd170;
	main_lastCycle <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_lastEmitted <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_memReadAddr <= `BSV_ASSIGNMENT_DELAY 24'd0;
	main_memReadBuffer <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	main_memWriteAddr <= `BSV_ASSIGNMENT_DELAY 24'd0;
	main_memWriteBuffer <= `BSV_ASSIGNMENT_DELAY 17'd43690;
	main_memWriteDone <= `BSV_ASSIGNMENT_DELAY 1'd0;
	main_nn_pes_0_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_0_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_0_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_0_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_0_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_0_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_0_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_0_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_0_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_1_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_1_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd1;
	main_nn_pes_1_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_1_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_1_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_1_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_1_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_1_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_1_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_1_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_2_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_2_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd2;
	main_nn_pes_2_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_2_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_2_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_2_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_2_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_2_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_2_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_2_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_3_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_3_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd3;
	main_nn_pes_3_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_3_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_3_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_3_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_3_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_3_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_3_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_3_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_4_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_4_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd4;
	main_nn_pes_4_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_4_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_4_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_4_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_4_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_4_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_4_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_4_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_5_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_5_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd5;
	main_nn_pes_5_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_5_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_5_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_5_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_5_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_5_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_5_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_5_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_6_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_6_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd6;
	main_nn_pes_6_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_6_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_6_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_6_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_6_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_6_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_6_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_6_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_pes_7_curMacIdx <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_7_curOutputIdx <= `BSV_ASSIGNMENT_DELAY 8'd7;
	main_nn_pes_7_cycleCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	main_nn_pes_7_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_7_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	    3'd0;
	main_nn_pes_7_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY 4'd0;
	main_nn_pes_7_lastInputIdx <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_7_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	    41'h0AAAAAAAAAA;
	main_nn_pes_7_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY 8'd0;
	main_nn_pes_7_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	    32'hAAAAAAAA;
	main_nn_weightInIdx_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_2 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_3 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_4 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_5 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_6 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_nn_weightInIdx_7 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	main_outputBuffer <= `BSV_ASSIGNMENT_DELAY 40'd0;
	main_outputBufferCnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	main_resultDataCount <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mem_addr_out <= `BSV_ASSIGNMENT_DELAY 13'd0;
	mem_command_out <= `BSV_ASSIGNMENT_DELAY 4'b1000;
	mem_counter <= `BSV_ASSIGNMENT_DELAY 16'd0;
	mem_cur_cmd_address <= `BSV_ASSIGNMENT_DELAY 24'd0;
	mem_cur_cmd_isRead <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mem_cur_cmd_wdata <= `BSV_ASSIGNMENT_DELAY 16'd0;
	mem_delay <= `BSV_ASSIGNMENT_DELAY 4'd0;
	mem_dqm <= `BSV_ASSIGNMENT_DELAY 2'b11;
	mem_open_bank <= `BSV_ASSIGNMENT_DELAY 4'd0;
	mem_open_rows <= `BSV_ASSIGNMENT_DELAY 52'd0;
	mem_state <= `BSV_ASSIGNMENT_DELAY 3'd0;
	mem_state_next <= `BSV_ASSIGNMENT_DELAY 3'd0;
      end
    else
      begin
        if (main_cycleCount_EN)
	  main_cycleCount <= `BSV_ASSIGNMENT_DELAY main_cycleCount_D_IN;
	if (main_inputBuffer_EN)
	  main_inputBuffer <= `BSV_ASSIGNMENT_DELAY main_inputBuffer_D_IN;
	if (main_inputBufferCnt_EN)
	  main_inputBufferCnt <= `BSV_ASSIGNMENT_DELAY
	      main_inputBufferCnt_D_IN;
	if (main_inputDst_EN)
	  main_inputDst <= `BSV_ASSIGNMENT_DELAY main_inputDst_D_IN;
	if (main_lastCycle_EN)
	  main_lastCycle <= `BSV_ASSIGNMENT_DELAY main_lastCycle_D_IN;
	if (main_lastEmitted_EN)
	  main_lastEmitted <= `BSV_ASSIGNMENT_DELAY main_lastEmitted_D_IN;
	if (main_memReadAddr_EN)
	  main_memReadAddr <= `BSV_ASSIGNMENT_DELAY main_memReadAddr_D_IN;
	if (main_memReadBuffer_EN)
	  main_memReadBuffer <= `BSV_ASSIGNMENT_DELAY main_memReadBuffer_D_IN;
	if (main_memWriteAddr_EN)
	  main_memWriteAddr <= `BSV_ASSIGNMENT_DELAY main_memWriteAddr_D_IN;
	if (main_memWriteBuffer_EN)
	  main_memWriteBuffer <= `BSV_ASSIGNMENT_DELAY
	      main_memWriteBuffer_D_IN;
	if (main_memWriteDone_EN)
	  main_memWriteDone <= `BSV_ASSIGNMENT_DELAY main_memWriteDone_D_IN;
	if (main_nn_pes_0_curMacIdx_EN)
	  main_nn_pes_0_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_curMacIdx_D_IN;
	if (main_nn_pes_0_curOutputIdx_EN)
	  main_nn_pes_0_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_curOutputIdx_D_IN;
	if (main_nn_pes_0_cycleCount_EN)
	  main_nn_pes_0_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_cycleCount_D_IN;
	if (main_nn_pes_0_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_0_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_0_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_0_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_0_fmult_mult18_validMap_EN)
	  main_nn_pes_0_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_0_lastInputIdx_EN)
	  main_nn_pes_0_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_lastInputIdx_D_IN;
	if (main_nn_pes_0_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_0_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_0_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_0_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_0_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_0_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_0_partialSumQ_rCache_EN)
	  main_nn_pes_0_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumQ_rCache_D_IN;
	if (main_nn_pes_0_partialSumQ_rRdPtr_EN)
	  main_nn_pes_0_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_0_partialSumQ_rWrPtr_EN)
	  main_nn_pes_0_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_0_weightReplicateCnt_EN)
	  main_nn_pes_0_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_weightReplicateCnt_D_IN;
	if (main_nn_pes_0_weightReplicateReg_EN)
	  main_nn_pes_0_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_0_weightReplicateReg_D_IN;
	if (main_nn_pes_1_curMacIdx_EN)
	  main_nn_pes_1_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_curMacIdx_D_IN;
	if (main_nn_pes_1_curOutputIdx_EN)
	  main_nn_pes_1_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_curOutputIdx_D_IN;
	if (main_nn_pes_1_cycleCount_EN)
	  main_nn_pes_1_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_cycleCount_D_IN;
	if (main_nn_pes_1_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_1_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_1_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_1_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_1_fmult_mult18_validMap_EN)
	  main_nn_pes_1_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_1_lastInputIdx_EN)
	  main_nn_pes_1_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_lastInputIdx_D_IN;
	if (main_nn_pes_1_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_1_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_1_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_1_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_1_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_1_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_1_partialSumQ_rCache_EN)
	  main_nn_pes_1_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumQ_rCache_D_IN;
	if (main_nn_pes_1_partialSumQ_rRdPtr_EN)
	  main_nn_pes_1_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_1_partialSumQ_rWrPtr_EN)
	  main_nn_pes_1_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_1_weightReplicateCnt_EN)
	  main_nn_pes_1_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_weightReplicateCnt_D_IN;
	if (main_nn_pes_1_weightReplicateReg_EN)
	  main_nn_pes_1_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_1_weightReplicateReg_D_IN;
	if (main_nn_pes_2_curMacIdx_EN)
	  main_nn_pes_2_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_curMacIdx_D_IN;
	if (main_nn_pes_2_curOutputIdx_EN)
	  main_nn_pes_2_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_curOutputIdx_D_IN;
	if (main_nn_pes_2_cycleCount_EN)
	  main_nn_pes_2_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_cycleCount_D_IN;
	if (main_nn_pes_2_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_2_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_2_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_2_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_2_fmult_mult18_validMap_EN)
	  main_nn_pes_2_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_2_lastInputIdx_EN)
	  main_nn_pes_2_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_lastInputIdx_D_IN;
	if (main_nn_pes_2_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_2_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_2_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_2_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_2_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_2_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_2_partialSumQ_rCache_EN)
	  main_nn_pes_2_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumQ_rCache_D_IN;
	if (main_nn_pes_2_partialSumQ_rRdPtr_EN)
	  main_nn_pes_2_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_2_partialSumQ_rWrPtr_EN)
	  main_nn_pes_2_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_2_weightReplicateCnt_EN)
	  main_nn_pes_2_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_weightReplicateCnt_D_IN;
	if (main_nn_pes_2_weightReplicateReg_EN)
	  main_nn_pes_2_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_2_weightReplicateReg_D_IN;
	if (main_nn_pes_3_curMacIdx_EN)
	  main_nn_pes_3_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_curMacIdx_D_IN;
	if (main_nn_pes_3_curOutputIdx_EN)
	  main_nn_pes_3_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_curOutputIdx_D_IN;
	if (main_nn_pes_3_cycleCount_EN)
	  main_nn_pes_3_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_cycleCount_D_IN;
	if (main_nn_pes_3_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_3_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_3_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_3_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_3_fmult_mult18_validMap_EN)
	  main_nn_pes_3_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_3_lastInputIdx_EN)
	  main_nn_pes_3_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_lastInputIdx_D_IN;
	if (main_nn_pes_3_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_3_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_3_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_3_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_3_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_3_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_3_partialSumQ_rCache_EN)
	  main_nn_pes_3_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumQ_rCache_D_IN;
	if (main_nn_pes_3_partialSumQ_rRdPtr_EN)
	  main_nn_pes_3_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_3_partialSumQ_rWrPtr_EN)
	  main_nn_pes_3_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_3_weightReplicateCnt_EN)
	  main_nn_pes_3_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_weightReplicateCnt_D_IN;
	if (main_nn_pes_3_weightReplicateReg_EN)
	  main_nn_pes_3_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_3_weightReplicateReg_D_IN;
	if (main_nn_pes_4_curMacIdx_EN)
	  main_nn_pes_4_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_curMacIdx_D_IN;
	if (main_nn_pes_4_curOutputIdx_EN)
	  main_nn_pes_4_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_curOutputIdx_D_IN;
	if (main_nn_pes_4_cycleCount_EN)
	  main_nn_pes_4_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_cycleCount_D_IN;
	if (main_nn_pes_4_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_4_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_4_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_4_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_4_fmult_mult18_validMap_EN)
	  main_nn_pes_4_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_4_lastInputIdx_EN)
	  main_nn_pes_4_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_lastInputIdx_D_IN;
	if (main_nn_pes_4_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_4_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_4_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_4_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_4_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_4_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_4_partialSumQ_rCache_EN)
	  main_nn_pes_4_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumQ_rCache_D_IN;
	if (main_nn_pes_4_partialSumQ_rRdPtr_EN)
	  main_nn_pes_4_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_4_partialSumQ_rWrPtr_EN)
	  main_nn_pes_4_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_4_weightReplicateCnt_EN)
	  main_nn_pes_4_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_weightReplicateCnt_D_IN;
	if (main_nn_pes_4_weightReplicateReg_EN)
	  main_nn_pes_4_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_4_weightReplicateReg_D_IN;
	if (main_nn_pes_5_curMacIdx_EN)
	  main_nn_pes_5_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_curMacIdx_D_IN;
	if (main_nn_pes_5_curOutputIdx_EN)
	  main_nn_pes_5_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_curOutputIdx_D_IN;
	if (main_nn_pes_5_cycleCount_EN)
	  main_nn_pes_5_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_cycleCount_D_IN;
	if (main_nn_pes_5_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_5_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_5_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_5_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_5_fmult_mult18_validMap_EN)
	  main_nn_pes_5_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_5_lastInputIdx_EN)
	  main_nn_pes_5_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_lastInputIdx_D_IN;
	if (main_nn_pes_5_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_5_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_5_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_5_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_5_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_5_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_5_partialSumQ_rCache_EN)
	  main_nn_pes_5_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumQ_rCache_D_IN;
	if (main_nn_pes_5_partialSumQ_rRdPtr_EN)
	  main_nn_pes_5_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_5_partialSumQ_rWrPtr_EN)
	  main_nn_pes_5_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_5_weightReplicateCnt_EN)
	  main_nn_pes_5_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_weightReplicateCnt_D_IN;
	if (main_nn_pes_5_weightReplicateReg_EN)
	  main_nn_pes_5_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_5_weightReplicateReg_D_IN;
	if (main_nn_pes_6_curMacIdx_EN)
	  main_nn_pes_6_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_curMacIdx_D_IN;
	if (main_nn_pes_6_curOutputIdx_EN)
	  main_nn_pes_6_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_curOutputIdx_D_IN;
	if (main_nn_pes_6_cycleCount_EN)
	  main_nn_pes_6_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_cycleCount_D_IN;
	if (main_nn_pes_6_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_6_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_6_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_6_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_6_fmult_mult18_validMap_EN)
	  main_nn_pes_6_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_6_lastInputIdx_EN)
	  main_nn_pes_6_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_lastInputIdx_D_IN;
	if (main_nn_pes_6_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_6_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_6_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_6_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_6_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_6_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_6_partialSumQ_rCache_EN)
	  main_nn_pes_6_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumQ_rCache_D_IN;
	if (main_nn_pes_6_partialSumQ_rRdPtr_EN)
	  main_nn_pes_6_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_6_partialSumQ_rWrPtr_EN)
	  main_nn_pes_6_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_6_weightReplicateCnt_EN)
	  main_nn_pes_6_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_weightReplicateCnt_D_IN;
	if (main_nn_pes_6_weightReplicateReg_EN)
	  main_nn_pes_6_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_6_weightReplicateReg_D_IN;
	if (main_nn_pes_7_curMacIdx_EN)
	  main_nn_pes_7_curMacIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_curMacIdx_D_IN;
	if (main_nn_pes_7_curOutputIdx_EN)
	  main_nn_pes_7_curOutputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_curOutputIdx_D_IN;
	if (main_nn_pes_7_cycleCount_EN)
	  main_nn_pes_7_cycleCount <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_cycleCount_D_IN;
	if (main_nn_pes_7_fmult_mult18_dataInFlightDn_EN)
	  main_nn_pes_7_fmult_mult18_dataInFlightDn <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_fmult_mult18_dataInFlightDn_D_IN;
	if (main_nn_pes_7_fmult_mult18_dataInFlightUp_EN)
	  main_nn_pes_7_fmult_mult18_dataInFlightUp <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_fmult_mult18_dataInFlightUp_D_IN;
	if (main_nn_pes_7_fmult_mult18_validMap_EN)
	  main_nn_pes_7_fmult_mult18_validMap <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_fmult_mult18_validMap_D_IN;
	if (main_nn_pes_7_lastInputIdx_EN)
	  main_nn_pes_7_lastInputIdx <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_lastInputIdx_D_IN;
	if (main_nn_pes_7_partialSumIdxQ2_rCache_EN)
	  main_nn_pes_7_partialSumIdxQ2_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumIdxQ2_rCache_D_IN;
	if (main_nn_pes_7_partialSumIdxQ2_rRdPtr_EN)
	  main_nn_pes_7_partialSumIdxQ2_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumIdxQ2_rRdPtr_D_IN;
	if (main_nn_pes_7_partialSumIdxQ2_rWrPtr_EN)
	  main_nn_pes_7_partialSumIdxQ2_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumIdxQ2_rWrPtr_D_IN;
	if (main_nn_pes_7_partialSumQ_rCache_EN)
	  main_nn_pes_7_partialSumQ_rCache <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumQ_rCache_D_IN;
	if (main_nn_pes_7_partialSumQ_rRdPtr_EN)
	  main_nn_pes_7_partialSumQ_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumQ_rRdPtr_D_IN;
	if (main_nn_pes_7_partialSumQ_rWrPtr_EN)
	  main_nn_pes_7_partialSumQ_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_partialSumQ_rWrPtr_D_IN;
	if (main_nn_pes_7_weightReplicateCnt_EN)
	  main_nn_pes_7_weightReplicateCnt <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_weightReplicateCnt_D_IN;
	if (main_nn_pes_7_weightReplicateReg_EN)
	  main_nn_pes_7_weightReplicateReg <= `BSV_ASSIGNMENT_DELAY
	      main_nn_pes_7_weightReplicateReg_D_IN;
	if (main_nn_weightInIdx_0_EN)
	  main_nn_weightInIdx_0 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_0_D_IN;
	if (main_nn_weightInIdx_1_EN)
	  main_nn_weightInIdx_1 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_1_D_IN;
	if (main_nn_weightInIdx_2_EN)
	  main_nn_weightInIdx_2 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_2_D_IN;
	if (main_nn_weightInIdx_3_EN)
	  main_nn_weightInIdx_3 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_3_D_IN;
	if (main_nn_weightInIdx_4_EN)
	  main_nn_weightInIdx_4 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_4_D_IN;
	if (main_nn_weightInIdx_5_EN)
	  main_nn_weightInIdx_5 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_5_D_IN;
	if (main_nn_weightInIdx_6_EN)
	  main_nn_weightInIdx_6 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_6_D_IN;
	if (main_nn_weightInIdx_7_EN)
	  main_nn_weightInIdx_7 <= `BSV_ASSIGNMENT_DELAY
	      main_nn_weightInIdx_7_D_IN;
	if (main_outputBuffer_EN)
	  main_outputBuffer <= `BSV_ASSIGNMENT_DELAY main_outputBuffer_D_IN;
	if (main_outputBufferCnt_EN)
	  main_outputBufferCnt <= `BSV_ASSIGNMENT_DELAY
	      main_outputBufferCnt_D_IN;
	if (main_resultDataCount_EN)
	  main_resultDataCount <= `BSV_ASSIGNMENT_DELAY
	      main_resultDataCount_D_IN;
	if (mem_addr_out_EN)
	  mem_addr_out <= `BSV_ASSIGNMENT_DELAY mem_addr_out_D_IN;
	if (mem_command_out_EN)
	  mem_command_out <= `BSV_ASSIGNMENT_DELAY mem_command_out_D_IN;
	if (mem_counter_EN)
	  mem_counter <= `BSV_ASSIGNMENT_DELAY mem_counter_D_IN;
	if (mem_cur_cmd_address_EN)
	  mem_cur_cmd_address <= `BSV_ASSIGNMENT_DELAY
	      mem_cur_cmd_address_D_IN;
	if (mem_cur_cmd_isRead_EN)
	  mem_cur_cmd_isRead <= `BSV_ASSIGNMENT_DELAY mem_cur_cmd_isRead_D_IN;
	if (mem_cur_cmd_wdata_EN)
	  mem_cur_cmd_wdata <= `BSV_ASSIGNMENT_DELAY mem_cur_cmd_wdata_D_IN;
	if (mem_delay_EN) mem_delay <= `BSV_ASSIGNMENT_DELAY mem_delay_D_IN;
	if (mem_dqm_EN) mem_dqm <= `BSV_ASSIGNMENT_DELAY mem_dqm_D_IN;
	if (mem_open_bank_EN)
	  mem_open_bank <= `BSV_ASSIGNMENT_DELAY mem_open_bank_D_IN;
	if (mem_open_rows_EN)
	  mem_open_rows <= `BSV_ASSIGNMENT_DELAY mem_open_rows_D_IN;
	if (mem_state_EN) mem_state <= `BSV_ASSIGNMENT_DELAY mem_state_D_IN;
	if (mem_state_next_EN)
	  mem_state_next <= `BSV_ASSIGNMENT_DELAY mem_state_next_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    main_cycleCount = 32'hAAAAAAAA;
    main_inputBuffer = 32'hAAAAAAAA;
    main_inputBufferCnt = 2'h2;
    main_inputDst = 9'h0AA;
    main_lastCycle = 32'hAAAAAAAA;
    main_lastEmitted = 32'hAAAAAAAA;
    main_memReadAddr = 24'hAAAAAA;
    main_memReadBuffer = 17'h0AAAA;
    main_memWriteAddr = 24'hAAAAAA;
    main_memWriteBuffer = 17'h0AAAA;
    main_memWriteDone = 1'h0;
    main_nn_pes_0_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_0_curOutputIdx = 8'hAA;
    main_nn_pes_0_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_0_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_0_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_0_fmult_mult18_validMap = 4'hA;
    main_nn_pes_0_lastInputIdx = 8'hAA;
    main_nn_pes_0_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_0_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_0_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_0_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_0_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_0_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_0_weightReplicateCnt = 8'hAA;
    main_nn_pes_0_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_1_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_1_curOutputIdx = 8'hAA;
    main_nn_pes_1_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_1_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_1_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_1_fmult_mult18_validMap = 4'hA;
    main_nn_pes_1_lastInputIdx = 8'hAA;
    main_nn_pes_1_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_1_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_1_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_1_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_1_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_1_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_1_weightReplicateCnt = 8'hAA;
    main_nn_pes_1_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_2_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_2_curOutputIdx = 8'hAA;
    main_nn_pes_2_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_2_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_2_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_2_fmult_mult18_validMap = 4'hA;
    main_nn_pes_2_lastInputIdx = 8'hAA;
    main_nn_pes_2_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_2_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_2_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_2_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_2_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_2_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_2_weightReplicateCnt = 8'hAA;
    main_nn_pes_2_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_3_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_3_curOutputIdx = 8'hAA;
    main_nn_pes_3_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_3_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_3_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_3_fmult_mult18_validMap = 4'hA;
    main_nn_pes_3_lastInputIdx = 8'hAA;
    main_nn_pes_3_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_3_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_3_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_3_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_3_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_3_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_3_weightReplicateCnt = 8'hAA;
    main_nn_pes_3_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_4_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_4_curOutputIdx = 8'hAA;
    main_nn_pes_4_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_4_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_4_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_4_fmult_mult18_validMap = 4'hA;
    main_nn_pes_4_lastInputIdx = 8'hAA;
    main_nn_pes_4_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_4_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_4_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_4_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_4_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_4_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_4_weightReplicateCnt = 8'hAA;
    main_nn_pes_4_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_5_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_5_curOutputIdx = 8'hAA;
    main_nn_pes_5_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_5_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_5_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_5_fmult_mult18_validMap = 4'hA;
    main_nn_pes_5_lastInputIdx = 8'hAA;
    main_nn_pes_5_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_5_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_5_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_5_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_5_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_5_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_5_weightReplicateCnt = 8'hAA;
    main_nn_pes_5_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_6_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_6_curOutputIdx = 8'hAA;
    main_nn_pes_6_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_6_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_6_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_6_fmult_mult18_validMap = 4'hA;
    main_nn_pes_6_lastInputIdx = 8'hAA;
    main_nn_pes_6_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_6_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_6_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_6_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_6_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_6_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_6_weightReplicateCnt = 8'hAA;
    main_nn_pes_6_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_pes_7_curMacIdx = 32'hAAAAAAAA;
    main_nn_pes_7_curOutputIdx = 8'hAA;
    main_nn_pes_7_cycleCount = 32'hAAAAAAAA;
    main_nn_pes_7_fmult_mult18_dataInFlightDn = 3'h2;
    main_nn_pes_7_fmult_mult18_dataInFlightUp = 3'h2;
    main_nn_pes_7_fmult_mult18_validMap = 4'hA;
    main_nn_pes_7_lastInputIdx = 8'hAA;
    main_nn_pes_7_partialSumIdxQ2_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_7_partialSumIdxQ2_rRdPtr = 8'hAA;
    main_nn_pes_7_partialSumIdxQ2_rWrPtr = 8'hAA;
    main_nn_pes_7_partialSumQ_rCache = 41'h0AAAAAAAAAA;
    main_nn_pes_7_partialSumQ_rRdPtr = 8'hAA;
    main_nn_pes_7_partialSumQ_rWrPtr = 8'hAA;
    main_nn_pes_7_weightReplicateCnt = 8'hAA;
    main_nn_pes_7_weightReplicateReg = 32'hAAAAAAAA;
    main_nn_weightInIdx_0 = 16'hAAAA;
    main_nn_weightInIdx_1 = 16'hAAAA;
    main_nn_weightInIdx_2 = 16'hAAAA;
    main_nn_weightInIdx_3 = 16'hAAAA;
    main_nn_weightInIdx_4 = 16'hAAAA;
    main_nn_weightInIdx_5 = 16'hAAAA;
    main_nn_weightInIdx_6 = 16'hAAAA;
    main_nn_weightInIdx_7 = 16'hAAAA;
    main_outputBuffer = 40'hAAAAAAAAAA;
    main_outputBufferCnt = 3'h2;
    main_resultDataCount = 32'hAAAAAAAA;
    mem_addr_out = 13'h0AAA;
    mem_command_out = 4'hA;
    mem_counter = 16'hAAAA;
    mem_cur_cmd_address = 24'hAAAAAA;
    mem_cur_cmd_isRead = 1'h0;
    mem_cur_cmd_wdata = 16'hAAAA;
    mem_delay = 4'hA;
    mem_dqm = 2'h2;
    mem_open_bank = 4'hA;
    mem_open_rows = 52'hAAAAAAAAAAAAA;
    mem_state = 3'h2;
    mem_state_next = 3'h2;
    uartInWord = 8'hAA;
    uart_bleft = 4'hA;
    uart_clkcnt = 16'hAAAA;
    uart_curoutd = 11'h2AA;
    uart_curoutoff = 5'h0A;
    uart_outword = 8'hAA;
    uart_rxin = 4'hA;
    uart_samplecountdown = 16'hAAAA;
    uart_txdr = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge pll_clk_100mhz)
  begin
    #0;
    if (pll_lockedn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_main_serializeOutput && main_outputBufferCnt == 3'd0 &&
	  main_resultDataCount != 32'd0 &&
	  x__h72843[7:0] == 8'd0)
	$write("Emitting %d elements over %d cycles\n",
	       main_resultDataCount - main_lastEmitted,
	       main_cycleCount - main_lastCycle);
  end
  // synopsys translate_on
endmodule  // mkTop

